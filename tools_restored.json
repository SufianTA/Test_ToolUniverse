[
    {
        "id": "ae3f5b12-4c8d-47f1-a6be-9d2b0c1a2f34",
        "name": "FDA_get_drugs_by_carcinogenic_mutagenic_fertility",
        "description": "Retrieve drug names by carcinogenic, mutagenic, or fertility impairment info.",
        "detailed_description": "Retrieve drug names based on the presence of carcinogenic, mutagenic, or fertility impairment information.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "carcinogenicity-filter",
            "drug-safety-screen",
            "fda-drug-label",
            "fertility-toxicity",
            "genotoxicity-assessment",
            "indication-filter",
            "mutagenicity-search",
            "pharmacovigilance",
            "regulatory-compliance",
            "reproductive-toxicity",
            "toxicology-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drugs by carcinogenic, mutagenic, or fertility impairment info",
            "Filter results by drug indication",
            "Limit the number of returned records",
            "Paginate results by skipping records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "carcinogenic_info": {
                "type": "string",
                "description": "Information about carcinogenic, mutagenic, or fertility impairment potential."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "carcinogenic_info": {
                    "type": "string",
                    "description": "Information about carcinogenic, mutagenic, or fertility impairment potential.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "carcinogenic_info": "Known carcinogenic and mutagenic risk present",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5b46a9d-efb6-4b2f-841d-9e3b2c6f5d7a",
        "name": "FDA_get_carcinogenic_mutagenic_fertility_by_drug_name",
        "description": "Get carcinogenic, mutagenic, or fertility impairment data by drug name.",
        "detailed_description": "Retrieve carcinogenic, mutagenic, or fertility impairment information based on the drug name.",
        "toolType": "API",
        "tags": [
            "carcinogenicity-screening",
            "chemical-toxicology",
            "drug-safety-database",
            "drug-safety-profile",
            "fda-drug-label",
            "fertility-toxicity",
            "hazard-identification",
            "mutagenicity-assessment",
            "pharmacovigilance",
            "regulatory-toxicology",
            "risk-assessment",
            "toxicity-endpoints"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for carcinogenesis, mutagenesis, and fertility impairment data by drug name.",
            "Returns carcinogenesis_and_mutagenesis_and_impairment_of_fertility fields.",
            "Supports optional limit and skip parameters for pagination."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4c5f6a7-8b9c-0d1e-2f3a-4b5c6d7e8f90",
        "name": "FDA_get_drug_name_by_SPL_ID",
        "description": "Retrieve drug names using various SPL identifiers or FDA numbers",
        "detailed_description": "Retrieve the drug name based on the FDA application number, NUI unique identifier, document ID of a specific version of the drug's Structured Product Label (SPL), or set ID of the drug's Structured Product Label that works across label versions.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "document-id-query",
            "drug-name-retrieval",
            "fda-spl-lookup",
            "health-data-standards",
            "integer-pagination",
            "nui-identifier-search",
            "pharmaceutical-informatics",
            "regulatory-data-retrieval",
            "set-id-lookup",
            "spl-id-search",
            "string-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by openfda.application_number",
            "Search drugs by openfda.nui",
            "Search drugs by openfda.spl_id",
            "Search drugs by openfda.spl_set_id",
            "Return openfda.brand_name",
            "Return openfda.generic_name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "field_info": {
                "type": "string",
                "description": "The specific field information to search for."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "field_info": {
                    "type": "string",
                    "description": "The specific field information to search for.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "field_info": "openfda.application_number",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4b825dc6-0f36-4c61-9eeb-ff35a3b48372",
        "name": "FDA_get_drug_names_by_clinical_pharmacology",
        "description": "Retrieve a limited list of drug names by clinical pharmacology information.",
        "detailed_description": "Retrieve drug names based on clinical pharmacology information. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology-search",
            "drug-indication-lookup",
            "drug-name-retrieval",
            "fda-drug-query",
            "fda-label-extraction",
            "human-pharmacology-data",
            "medication-nomenclature",
            "pagination-parameters",
            "pharmaceutical-database-search",
            "pharmacology-based-filtering",
            "pharmacology-research-tool",
            "regulatory-information-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on clinical pharmacology information",
            "Filter results by drug indication",
            "Limit and skip parameters for pagination",
            "Return brand and generic names of drugs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "clinical_pharmacology": {
                "type": "string",
                "description": "Information about the clinical pharmacology and actions of the drug in humans. Use key words"
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "clinical_pharmacology": {
                    "type": "string",
                    "description": "Information about the clinical pharmacology and actions of the drug in humans. Use key words",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "clinical_pharmacology": "CYP450 inhibitor",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa36a1cd-5945-4d5b-8f0e-2c33d3e6e9b7",
        "name": "FDA_get_clinical_pharmacology_by_drug_name",
        "description": "Get clinical pharmacology info for specified drugs.",
        "detailed_description": "Retrieve clinical pharmacology information based on drug names.",
        "toolType": "API",
        "tags": [
            "active-ingredient-info",
            "api-based-retrieval",
            "clinical-pharmacology",
            "dosage-guidelines",
            "dose-response-information",
            "drug-name-query",
            "drug-safety-profile",
            "fda-drug-labels",
            "medication-lookup",
            "medicine-database-search",
            "pharmacokinetic-data",
            "pharmacy-research",
            "regulatory-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve clinical pharmacology data",
            "Search by drug name",
            "Support pagination using limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f0a6dcb-9c24-4e9b-8b58-2e13dabedfb7",
        "name": "FDA_get_drug_names_by_clinical_studies",
        "description": "Retrieve drug names by filtering clinical studies information and indications.",
        "detailed_description": "Retrieve drug names based on the presence of clinical studies information.",
        "toolType": "API",
        "tags": [
            "clinical-research-tool",
            "clinical-study-query",
            "drug-name-retrieval",
            "fda-label-search",
            "healthcare-analytics",
            "indication-filtering",
            "medication-discovery",
            "paginated-data-retrieval",
            "parameterized-query",
            "pharmaceutical-names",
            "pharmacovigilance-support",
            "regulatory-affairs",
            "trial-data-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug brand and generic names",
            "Filter drugs by clinical studies keywords",
            "Filter drugs by indication",
            "Supports pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "clinical_studies": {
                "type": "string",
                "description": "Information related to clinical studies. Use keywords split by blank space."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "clinical_studies": {
                    "type": "string",
                    "description": "Information related to clinical studies. Use keywords split by blank space.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "clinical_studies": "cancer phase II",
            "indication": "breast cancer",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a1bc345-2f5e-4c60-bc13-56fb72e86b2d",
        "name": "FDA_get_clinical_studies_info_by_drug_name",
        "description": "Retrieve clinical studies info by drug name.",
        "detailed_description": "Retrieve clinical studies information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-data-fetching",
            "clinical-studies-retrieval",
            "clinical-trial-database",
            "drug-name-query",
            "drug-safety-monitoring",
            "drug-trial-search",
            "fda-api-integration",
            "fda-clinical-trials",
            "medical-research",
            "pharmacovigilance-data",
            "regulatory-compliance",
            "research-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search clinical studies by drug name",
            "Limit number of records returned",
            "Paginate results with skip parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f1c9e89-3c54-4f6d-a5ff-e383a0391b62",
        "name": "FDA_get_drug_names_by_contraindications",
        "description": "Retrieve drug names based on contraindication information.",
        "detailed_description": "Retrieve drug names based on specific contraindications information.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "contraindicated-drug-list",
            "contraindication-based-retrieval",
            "drug-contraindications-search",
            "drug-label-mining",
            "drug-names-by-contraindications",
            "fda-label-data",
            "healthcare-compliance",
            "medication-safety",
            "pharmacovigilance-query",
            "prescribing-guidelines",
            "regulatory-science"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on contraindications information",
            "Filter results by indication",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "contraindication_info": {
                "type": "string",
                "description": "Information about situations in which the drug product is contraindicated."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "contraindication_info": {
                    "type": "string",
                    "description": "Information about situations in which the drug product is contraindicated.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "contraindication_info": "History of severe allergic reaction to penicillin",
            "indication": "Bacterial infection",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8a5c179-8b4c-4f1d-9e4e-2cf5fa8d5a24",
        "name": "FDA_get_contraindications_by_drug_name",
        "description": "Retrieve contraindications information for a given drug.",
        "detailed_description": "Retrieve contraindications information based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-drug-warnings",
            "api-integration",
            "clinical-decision-support",
            "contraindication-retrieval",
            "drug-name-query",
            "drug-safety-information",
            "fda-drug-label-api",
            "healthcare-it",
            "medicine-safety",
            "pharmacology-database",
            "pharmacovigilance",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve contraindications information",
            "Search by drug name",
            "Support limit and skip pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6",
        "name": "FDA_get_drug_names_by_controlled_substance_DEA_schedule",
        "description": "Retrieve drug names by DEA schedule.",
        "detailed_description": "Retrieve drug names based on the Drug Enforcement Administration (DEA) schedule information.",
        "toolType": "API",
        "tags": [
            "controlled-substance-management",
            "controlled-substance-retrieval",
            "dea-schedule-lookup",
            "drug-classification-query",
            "drug-info-search",
            "drug-schedule-classification",
            "fda-dea-integration",
            "fda-drug-names",
            "indication-based-filtering",
            "pagination-parameters",
            "pharmaceutical-regulation",
            "prescription-drug-directory",
            "regulatory-drug-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by DEA schedule",
            "Filter results by drug indication",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "controlled_substance_schedule": {
                "type": "string",
                "description": "The schedule in which the drug is controlled by the Drug Enforcement Administration."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "controlled_substance_schedule": {
                    "type": "string",
                    "description": "The schedule in which the drug is controlled by the Drug Enforcement Administration.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "controlled_substance_schedule": "Schedule II",
            "indication": "Pain management",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2b59c3e-0f4d-4c7a-9a0d-8b6e2f9d5c72",
        "name": "FDA_get_controlled_substance_DEA_schedule_info_by_drug_name",
        "description": "Retrieve DEA schedule information for a specified controlled substance",
        "detailed_description": "Retrieve information about the controlled substance Drug Enforcement Administratino (DEA) schedule for a specific drug.",
        "toolType": "API",
        "tags": [
            "clinical-research-reference",
            "controlled-drug-database",
            "controlled-substance-information",
            "dea-schedule-query",
            "drug-enforcement-regulation",
            "drug-legal-status",
            "drug-schedule-classification",
            "fda-drug-regulation",
            "pharmaceutical-compliance",
            "pharmacology-reference",
            "prescription-regulation-data",
            "substance-abuse-regulation"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve DEA schedule information for a specified drug",
            "Pagination support with limit and skip parameters",
            "Searches by brand and generic drug names",
            "Returns controlled substance schedule information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Oxycodone",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0c5169a-4b2e-4f3b-8c3a-a9d072f1042b",
        "name": "FDA_get_drug_name_by_dependence_info",
        "description": "Retrieve drug names based on dependence characteristics.",
        "detailed_description": "Retrieve the drug name based on information about dependence characteristics.",
        "toolType": "API",
        "tags": [
            "dependence-based-drug-search",
            "drug-dependence-profile",
            "fda-drug-label-retrieval",
            "json-api-response",
            "label-driven-drug-identification",
            "medical-informatics",
            "pagination-control",
            "pharmacoepidemiology",
            "pharmacovigilance-query",
            "physical-dependence-data",
            "psychological-dependence-characteristics",
            "substance-dependence-monitoring"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search FDA drug labels by dependence information",
            "Return brand and generic drug names",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "dependence_info": {
                "type": "string",
                "description": "Information related to psychological and physical dependence of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "dependence_info": {
                    "type": "string",
                    "description": "Information related to psychological and physical dependence of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "dependence_info": "high psychological dependence potential",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a0eebc99-9c0b-4ef8-bb6d-6beb3b8cbc0b",
        "name": "FDA_get_dependence_info_by_drug_name",
        "description": "Get dependence characteristics of a drug by its name.",
        "detailed_description": "Retrieve information about dependence characteristics based on the drug name.",
        "toolType": "API",
        "tags": [
            "abuse-potential",
            "addiction-potential",
            "clinical-pharmacology",
            "dependence-characteristics",
            "drug-dependence-info",
            "drug-name-query",
            "fda-dependence-data",
            "json-response-format",
            "pagination-parameters",
            "pharmacovigilance",
            "regulatory-science",
            "substance-dependence"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve dependence information for a given drug",
            "Search by brand or generic drug name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e5c8a10-1234-4567-89ab-cdef01234567",
        "name": "FDA_get_drug_names_by_disposal_info",
        "description": "Retrieve drug names based on disposal and waste handling information.",
        "detailed_description": "Retrieve drug names based on disposal and waste handling information.",
        "toolType": "API",
        "tags": [
            "data-pagination",
            "disposal-guidelines",
            "drug-disposal-search",
            "drug-name-retrieval",
            "drug-waste-management",
            "environmental-safety",
            "fda-drug-label",
            "fda-label-lookup",
            "indication-filtering",
            "pharmaceutical-waste",
            "regulatory-compliance",
            "regulatory-data",
            "text-based-query",
            "waste-handling-info"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels based on disposal and waste handling information",
            "Filter results by indication",
            "Support pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disposal_info": {
                "type": "string",
                "description": "Information related to the disposal and waste handling of the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disposal_info": {
                    "type": "string",
                    "description": "Information related to the disposal and waste handling of the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "disposal_info": "Flush down the toilet according to local guidelines",
            "indication": "Pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a12b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
        "name": "FDA_get_disposal_info_by_drug_name",
        "description": "Retrieve disposal and waste handling information by drug name.",
        "detailed_description": "Retrieve disposal and waste handling information based on the drug name.",
        "toolType": "API",
        "tags": [
            "compliance-guidelines",
            "disposal-protocol-retrieval",
            "drug-disposal-info",
            "environmental-safety",
            "fda-drug-label",
            "fda-regulated-disposal",
            "hazardous-pharmaceutical-waste",
            "medication-waste-guidelines",
            "pagination-control",
            "pharmaceutical-waste-management",
            "safe-medication-disposal",
            "string-input-parameter",
            "waste-handling-guidelines"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disposal and waste handling information based on a drug name",
            "Supports limiting and skipping records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f8d7c6b-1a2e-4f3b-9d0a-1e2f3a4b5c6d",
        "name": "FDA_get_drug_name_by_dosage_info",
        "description": "Retrieve drug names based on dosage and administration details.",
        "detailed_description": "Retrieve the drug name based on dosage and administration information.",
        "toolType": "API",
        "tags": [
            "administration-guideline-search",
            "clinical-research-tool",
            "dosage-based-search",
            "dosage-info-query",
            "dosage-recommendation-lookup",
            "drug-information-system",
            "drug-name-lookup",
            "fda-drug-label",
            "healthcare-it",
            "json-output",
            "limit-skip-pagination",
            "medication-identification",
            "pharmacology-database",
            "regulatory-affairs",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by dosage and administration details",
            "Return brand and generic drug names",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "dosage_info": {
                "type": "string",
                "description": "Information about the drug product\u2019s dosage and administration recommendations.",
                "required": true
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "dosage_info": {
                    "type": "string",
                    "description": "Information about the drug product\u2019s dosage and administration recommendations.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "dosage_info": "200 mg orally twice daily",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_dosage_forms_and_strengths_info",
        "description": "Retrieve drug names by specific dosage forms and strengths.",
        "detailed_description": "Retrieve drug names based on specific dosage forms and strengths information.",
        "toolType": "API",
        "tags": [
            "clinical-research-tool",
            "dosage-forms-filter",
            "drug-information-retrieval",
            "drug-registry-access",
            "fda-label-search",
            "fda-structured-data",
            "formulation-retrieval",
            "indication-filtering",
            "pharmaceutical-database",
            "pharmaceutics-data",
            "prescription-information",
            "strength-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by dosage forms and strengths",
            "Filter results by indication",
            "Support pagination through limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "dosage_forms_and_strengths": {
                "type": "string",
                "description": "Information about the dosage forms and strengths of the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "dosage_forms_and_strengths": {
                    "type": "string",
                    "description": "Information about the dosage forms and strengths of the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "dosage_forms_and_strengths": "tablet 500 mg",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "drugbank_get_drug_pathways_and_reactions_by_drug_name_or_drugbank_id",
        "description": "Retrieves drug pathways and metabolic reactions for a given drug name or DrugBank ID.",
        "detailed_description": "Get drug pathways and metabolic reactions by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "bioinformatics",
            "cheminformatics",
            "drug-discovery-support",
            "drug-metabolism",
            "drug-name-search",
            "drug-pathway-retrieval",
            "drugbank-id-query",
            "metabolic-network-analysis",
            "metabolic-reaction-extraction",
            "pathway-reaction-mapping",
            "pharmacokinetics-data",
            "pharmacological-pathway-analysis",
            "systems-pharmacology",
            "xml-data-fetching"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by name or DrugBank ID",
            "Retrieve drug synonyms",
            "Extract drug pathways with IDs, names, and categories",
            "Extract metabolic reactions with sequence and elements",
            "Support case-sensitive and exact-match searches",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2f8c6ffd-9f50-4a21-b3d1-1a2b3c4d5e6f",
        "name": "drugbank_get_drug_name_and_description_by_pathway_name",
        "description": "Get drug names and descriptions by pathway name.",
        "detailed_description": "Get drug names and descriptions by pathway name.",
        "toolType": "Database",
        "tags": [
            "bioinformatics-xml-parsing",
            "case-sensitive-search",
            "cheminformatics-integration",
            "drug-discovery-support",
            "drug-name-and-description",
            "drugbank-query",
            "exact-match-filter",
            "pathway-based-drug-search",
            "pharmacogenomics-data",
            "pharmacology-data-retrieval",
            "result-pagination",
            "target-pathway-analysis",
            "therapeutic-pathway-linking"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank XML by pathway name",
            "Retrieve drug names and primary DrugBank IDs",
            "Extract associated pathways with IDs, names, and categories",
            "Extract metabolic reaction details including sequence and elements",
            "Support case-sensitive and exact-match queries",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Pathway name to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Pathway name to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Glycolysis",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1a6a7f2-3c4d-5e6f-7a8b-9c0d1e2f3a4b",
        "name": "drugbank_filter_drugs_by_name",
        "description": "Filter DrugBank records by drug name conditions.",
        "detailed_description": "Filter DrugBank records based on conditions applied to drug names. For example, find drugs whose names end with 'cillin' (penicillin antibiotics), contain 'mab', or are exactly 'Insulin'.",
        "toolType": "Database",
        "tags": [
            "antibiotic-identification",
            "bioinformatics",
            "cheminformatics",
            "database-filtering",
            "drug-discovery",
            "drug-name-filter",
            "drugbank-api-integration",
            "drugbank-filter",
            "exact-match-search",
            "name-based-query",
            "pharmacology-research",
            "prefix-search",
            "substring-search",
            "suffix-search",
            "xml-data-processing"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter DrugBank records based on drug name conditions",
            "Supports various string matching conditions (contains, starts_with, ends_with, exact, not_empty, has_attribute)",
            "Limits number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "condition": {
                "type": "string",
                "description": "The condition to apply for filtering."
            },
            "value": {
                "type": "string",
                "description": "The value to use with the condition (e.g., 'Aspirin' for 'starts_with'). Required for 'contains', 'starts_with', 'ends_with', and 'exact' conditions."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "The condition to apply for filtering.",
                    "enum": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "exact",
                        "not_empty",
                        "has_attribute"
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "The value to use with the condition (e.g., 'Aspirin' for 'starts_with'). Required for 'contains', 'starts_with', 'ends_with', and 'exact' conditions.",
                    "minLength": 1
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return.",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "condition"
            ]
        },
        "exampleInput": {
            "condition": "ends_with",
            "value": "cillin",
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c72d-9f4e-4a32-a6b1-2c3d4e5f6a7b",
        "name": "Reactome_get_pathway_reactions",
        "description": "Retrieve reactions contained in a Reactome pathway by its stable ID.",
        "detailed_description": "Query all Reactions contained under a Pathway using Pathway Stable ID. This is currently the only working Reactome tool.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "cellular-processes",
            "computational-biology",
            "database-access",
            "json-endpoint",
            "metabolic-pathways",
            "pathway-analysis",
            "pathway-reactions",
            "pathway-stable-id",
            "reaction-retrieval",
            "reactome-query",
            "reactome-rest-api",
            "signal-transduction-pathways",
            "systems-biology"
        ],
        "category": "ReactomeRESTTool",
        "lab": "Zitnik Lab",
        "source": "Reactome",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve reactions from a specified Reactome pathway"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "stId": {
                "type": "string",
                "description": "Pathway Stable ID, e.g., 'R-HSA-73817' (verified valid)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "stId": {
                    "type": "string",
                    "description": "Pathway Stable ID, e.g., 'R-HSA-73817' (verified valid)."
                }
            },
            "required": [
                "stId"
            ]
        },
        "exampleInput": {
            "stId": "R-HSA-73817"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c2f9b4d0-8fa1-4c3e-9a9e-1b2c3d4e5f6a",
        "name": "mesh_get_concept_details",
        "description": "Fetch detailed MeSH concept data by its Concept ID, including names, scope, CAS N1 name, and synonyms.",
        "detailed_description": "Retrieve detailed information about a specific MeSH concept using its unique identifier (Concept ID). This tool returns comprehensive information about the concept, including its name, ID, scope, CAS N1 name, and synonymous terms.",
        "toolType": "Database",
        "tags": [
            "biomedical-ontology-query",
            "cas-name-retrieval",
            "concept-scope-definition",
            "controlled-vocabulary-access",
            "identifier-based-retrieval",
            "medical-subject-headings",
            "mesh-concept-details",
            "mesh-concept-retrieval",
            "mesh-id-lookup",
            "semantic-annotation",
            "synonym-term-extraction",
            "xml-data-processing"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed information for a MeSH concept by its Concept ID",
            "Return concept names and IDs",
            "Return term names and IDs",
            "Return concept scope definitions",
            "Return CAS N1 names",
            "Support specifying which fields to return"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "concept_id": {
                "type": "string",
                "description": "Unique identifier for the MeSH concept (e.g., 'M0000001')"
            },
            "return_fields": {
                "type": "array",
                "description": "Fields to return. Available fields: 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names'. If not specified, all Concept-related fields will be returned."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "concept_id": {
                    "type": "string",
                    "description": "Unique identifier for the MeSH concept (e.g., 'M0000001')",
                    "minLength": 1,
                    "required": true
                },
                "return_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to return. Available fields: 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names'. As a reminder, 'Concepts' are the linguistically meaningful entities encapsulated by each MeSH subject, 'Terms' are alternative names for those concepts, 'Concept Scope' provides the definition and scope of each concept, and 'CAS Names' provides the Chemical Abstracts Type N1 name for each concept. If not specified, all Concept-related fields will be returned.",
                    "default": [
                        "Concept Names & ID",
                        "Term Names & ID",
                        "Concept Scope",
                        "CAS Names"
                    ],
                    "required": false
                }
            },
            "required": [
                "concept_id"
            ]
        },
        "exampleInput": {
            "concept_id": "M0000001",
            "return_fields": [
                "Concept Names & ID",
                "Term Names & ID",
                "Concept Scope",
                "CAS Names"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3e90223-1d06-4e20-9df3-1b5d9c13e4bf",
        "name": "mesh_get_descriptor_details",
        "description": "Get detailed MeSH descriptor information by ID, including names, concepts, terms, related descriptors, pharmacological actions, tree numbers, and update date.",
        "detailed_description": "Retrieve detailed information about a specific MeSH descriptor using its unique identifier (Descriptor ID). This tool returns comprehensive information about the descriptor, including its name, concepts, terms, related descriptors, pharmacological actions, tree numbers, and last updated date.",
        "toolType": "Database",
        "tags": [
            "cas-names-access",
            "concept-scope-definition",
            "descriptor-id-lookup",
            "descriptor-metadata-extraction",
            "hierarchical-classification",
            "medical-subject-headings",
            "mesh-descriptor-retrieval",
            "mesh-terminology",
            "pharmacological-actions",
            "related-descriptors",
            "tree-number-references",
            "xml-data-output"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed MeSH descriptor information by descriptor_id",
            "Return descriptor names, concepts, terms, related descriptors, pharmacological actions, tree numbers, and last updated date",
            "Customize output using return_fields parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "descriptor_id": {
                "type": "string",
                "description": "Unique identifier for the MeSH descriptor (e.g., 'D000001')"
            },
            "return_fields": {
                "type": "array",
                "description": "Fields to return. Available fields: 'Descriptor Names & ID', 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names', 'Related Descriptor Names & ID', 'Pharmacological Actions', 'Tree Numbers', 'Last Updated Date'. If not specified, all fields will be returned."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "descriptor_id": {
                    "type": "string",
                    "description": "Unique identifier for the MeSH descriptor (e.g., 'D000001')",
                    "minLength": 1,
                    "required": true
                },
                "return_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to return. Available fields: 'Descriptor Names & ID', 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names', 'Related Descriptor Names & ID', 'Pharmacological Actions', 'Tree Numbers', 'Last Updated Date'. As a reminder, 'Descriptors' refers to the main MeSH biomedical subjects, 'Concepts' are the underlying concepts associated with each subject, 'Terms' are alternative names for those concepts, 'Concept Scope' provides the definition and scope of each concept, 'CAS Names' provides the Chemical Abstracts Type N1 name for each concept, 'Related Descriptors' are other MeSH subjects connected to the subject, 'Pharmacological Actions' is a list of biological activity observed for a particular chemical, 'Tree Numbers' are references to locations within hierarchies in the MeSH vocabulary, and 'Last Updated Date' is the last date a particular MeSH subject was revised. If not specified, all fields will be returned.",
                    "default": [
                        "Descriptor Names & ID",
                        "Related Descriptor Names & ID",
                        "Concept Names & ID",
                        "Term Names & ID",
                        "Concept Scope",
                        "Pharmacological Actions",
                        "Tree Numbers",
                        "CAS Names",
                        "Last Updated Date"
                    ],
                    "required": false
                }
            },
            "required": [
                "descriptor_id"
            ]
        },
        "exampleInput": {
            "descriptor_id": "D000001",
            "return_fields": [
                "Descriptor Names & ID",
                "Related Descriptor Names & ID"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5a7c1e2-3f4b-11ee-be56-0242ac120002",
        "name": "mesh_search",
        "description": "Search MeSH vocabulary for descriptors with detailed information on concepts, scope, terms, and related subjects.",
        "detailed_description": "Search the Medical Subject Headings (MeSH) vocabulary using keywords or phrases. This tool returns relevant descriptors (MeSH subjects) along with detailed information for each one, including: the concepts that define the subject, the definition and scope of each concept, the related terms (synonyms) for each concept, and the related descriptors (other MeSH subjects connected to the subject).",
        "toolType": "Database",
        "tags": [
            "biomedical-terminology",
            "concept-scope-lookup",
            "controlled-vocabulary-query",
            "descriptor-retrieval",
            "literature-indexing",
            "medical-subject-headings",
            "mesh-vocabulary-search",
            "ontology-driven-discovery",
            "pharmacological-action-extraction",
            "semantic-search",
            "terms-synonym-finder",
            "tree-number-navigation"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH descriptors by query",
            "Filter by search fields (Descriptors, Concepts, Terms)",
            "Case sensitive and exact match options",
            "Select return fields like Descriptor Names & ID, Concept Names & ID, Term Names & ID, Concept Scope, Related Descriptor Names & ID",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query_for_search": {
                "type": "string",
                "description": "Search query string. Can be a disease, drug, or any medical or biomedical term to search for."
            },
            "search_fields": {
                "type": "array",
                "description": "Fields to search in. Available fields: 'Descriptors', 'Concepts', 'Terms'. As a reminder, 'Descriptors' refers to the main MeSH biomedical subjects, 'Concepts' are the underlying concepts associated with each subject, and 'Terms' are alternative names for those concepts."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Whether the search should be case sensitive."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Whether to perform exact matching instead of substring matching."
            },
            "return_fields": {
                "type": "array",
                "description": "Fields to return. Available fields: 'Descriptor Names & ID', 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names', 'Related Descriptor Names & ID', 'Pharmacological Actions', 'Tree Numbers', 'Last Updated Date'."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return. If you have few return fields, you can set a higher limit to get more results. One strategy is to return only the most important return fields (e.g., 'Descriptors', and 'Concepts') on your first call to this tool and set a high limit. Then, use the returned results to refine your query string and search again with a lower limit but with more return fields and specific information."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query_for_search": {
                    "type": "string",
                    "description": "Search query string. Can be a disease, drug, or any medical or biomedical term to search for.",
                    "minLength": 1,
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to search in. Available fields: 'Descriptors', 'Concepts', 'Terms'. As a reminder, 'Descriptors' refers to the main MeSH biomedical subjects, 'Concepts' are the underlying concepts associated with each subject, and 'Terms' are alternative names for those concepts.",
                    "default": [
                        "Descriptors",
                        "Concepts",
                        "Terms"
                    ],
                    "required": false
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Whether the search should be case sensitive.",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Whether to perform exact matching instead of substring matching.",
                    "default": false
                },
                "return_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to return. Available fields: 'Descriptor Names & ID', 'Concept Names & ID', 'Term Names & ID', 'Concept Scope', 'CAS Names', 'Related Descriptor Names & ID', 'Pharmacological Actions', 'Tree Numbers', 'Last Updated Date'. As a reminder, 'Descriptors' refers to the main MeSH biomedical subjects, 'Concepts' are the underlying concepts associated with each subject, 'Terms' are alternative names for those concepts, 'Concept Scope' provides the definition and scope of each concept, 'CAS Names' provides the Chemical Abstracts Type N1 name for each concept, 'Related Descriptors' are other MeSH subjects connected to the subject, 'Pharmacological Actions' is a list of biological activity observed for a particular chemical, 'Tree Numbers' are references to locations within hierarchies in the MeSH vocabulary, and 'Last Updated Date' is the last date a particular MeSH subject was revised.",
                    "default": [
                        "Descriptor Names & ID",
                        "Concept Names & ID",
                        "Term Names & ID",
                        "Concept Scope",
                        "Related Descriptor Names & ID"
                    ],
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return. If you have few return fields, you can set a higher limit to get more results. One strategy is to return only the most important return fields (e.g., 'Descriptors', and 'Concepts') on your first call to this tool and set a high limit. Then, use the returned results to refine your query string and search again with a lower limit but with more return fields and specific information.",
                    "default": 20,
                    "minimum": 1,
                    "maximum": 1000,
                    "required": false
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query_for_search": "aspirin",
            "search_fields": [
                "Descriptors",
                "Concepts",
                "Terms"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "return_fields": [
                "Descriptor Names & ID",
                "Concept Names & ID",
                "Term Names & ID",
                "Concept Scope",
                "Related Descriptor Names & ID"
            ],
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b1f2c4d-5e6f-7a8b-9c0d-e1f2a3b4c5d6",
        "name": "mesh_get_tree_children",
        "description": "Retrieves child descriptors of a MeSH descriptor given its ID.",
        "detailed_description": "Retrieve child descriptors of a specific MeSH descriptor using its unique identifier (Descriptor ID). This tool returns the child descriptors that are part of the MeSH hierarchy under the specified descriptor, allowing users to explore related subjects (e.g., child topics of 'D010575' ('Pesticides') are various specific pesticides like herbicides and molluscacides).",
        "toolType": "Database",
        "tags": [
            "biomedical-ontology",
            "descriptor-id-query",
            "hierarchy-explorer",
            "hierarchy-fetch",
            "medical-subject-headings",
            "mesh-child-descriptors",
            "mesh-hierarchy-navigation",
            "mesh-ontology-explorer",
            "mesh-tree-extraction",
            "ontology-traversal",
            "semantic-hierarchy",
            "thesaurus-lookup",
            "xml-data-retrieval"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve child descriptors based on MeSH descriptor ID",
            "Explore the MeSH hierarchy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "descriptor_id_for_tree_search": {
                "type": "string",
                "description": "Unique identifier for the MeSH descriptor (e.g., 'D0000001')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "descriptor_id_for_tree_search": {
                    "type": "string",
                    "description": "Unique identifier for the MeSH descriptor (e.g., 'D0000001')",
                    "minLength": 1,
                    "required": true
                }
            },
            "required": [
                "descriptor_id_for_tree_search"
            ]
        },
        "exampleInput": {
            "descriptor_id_for_tree_search": "D010575"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6f80f29-925a-4a53-9c25-2f2ab812e345",
        "name": "mesh_get_descriptor_by_tree_number",
        "description": "Retrieves a MeSH DescriptorRecord by tree number, useful for finding parent descriptors given a child tree number prefix.",
        "detailed_description": "Retrieve the DescriptorRecord associated with a particular tree number. Useful for finding parent Descriptors (MeSH subjects) when given the prefix of a child Descriptor's tree number (e.g., searching for the Descriptor associated with tree number D27.888.723 if the child Descriptor has tree number D27.888.723.491).",
        "toolType": "Database",
        "tags": [
            "descriptorrecord-fetch",
            "hierarchical-ontology-navigation",
            "medical-subject-headings",
            "mesh-descriptor-retrieval",
            "mesh-ontology-api",
            "mesh-tree-number-lookup",
            "ontology-hierarchy-extraction",
            "parent-descriptor-identification",
            "semantic-hierarchy-search",
            "taxonomy-query",
            "term-hierarchy-explorer",
            "xmltool-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch a MeSH DescriptorRecord by its tree number",
            "Return the descriptor ID and name",
            "Provide all tree numbers associated with the descriptor",
            "Report errors for missing or invalid tree numbers"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tree_number": {
                "type": "string",
                "description": "MeSH tree number"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tree_number": {
                    "type": "string",
                    "description": "MeSH tree number",
                    "minLength": 1,
                    "required": true
                }
            },
            "required": [
                "tree_number"
            ]
        },
        "exampleInput": {
            "tree_number": "D27.888.723"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1e8d392-3c3d-4a8a-9c7b-4d5a669e8bbf",
        "name": "FDA_get_active_ingredient_info_by_drug_name",
        "description": "Retrieve a list of active ingredients for a specified drug.",
        "detailed_description": "Fetch a list of active ingredients in a specific drug product.",
        "toolType": "API",
        "tags": [
            "active-ingredient-retrieval",
            "drug-ingredient-search",
            "drug-name-query",
            "fda-drug-label",
            "ingredient-identification",
            "integer-input-parameter",
            "json-response-format",
            "medication-composition-lookup",
            "pagination-support",
            "pharmacology-research",
            "regulatory-compliance",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for active ingredients based on drug_name",
            "Use openfda.brand_name and openfda.generic_name for searching",
            "Return active_ingredient information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4a1c839-5f67-4b2d-8a3c-d9e0f1a2b3c4",
        "name": "FDA_get_dosage_and_storage_information_by_drug_name",
        "description": "Get dosage and storage info for a specified drug.",
        "detailed_description": "Retrieve dosage and storage information for a specific drug.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "clinical-pharmacy",
            "dosage-retrieval",
            "drug-label-data",
            "drug-regulatory-affairs",
            "fda-dosage-guidelines",
            "fda-storage-guidelines",
            "medication-dosage-info",
            "pharmaceutical-storage",
            "pharmacology-reference",
            "prescribing-information",
            "regulatory-compliance",
            "storage-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search by drug name across brand and generic fields",
            "Retrieve dosage and administration details",
            "Retrieve storage and handling information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug.",
                "required": true
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Ibuprofen",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a8e57c6-e0db-4f1f-9b1f-2f6ef272717b",
        "name": "FDA_get_drug_names_by_abuse_info",
        "description": "Retrieve a limited set of drug names based on abuse types and related adverse reactions.",
        "detailed_description": "Retrieve drug names based on information about types of abuse and adverse reactions pertinent to those types of abuse. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "abuse-potential-search",
            "adverse-reaction-filter",
            "clinical-decision-support",
            "dependence-risk-assessment",
            "drug-misuse-identification",
            "drug-name-retrieval",
            "fda-drug-labels",
            "pagination-support",
            "pharmacovigilance-tool",
            "prescription-drug-abuse",
            "substance-abuse-data",
            "toxicology-research"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on abuse information",
            "Filter results by indication",
            "Support limiting and skipping (pagination)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "abuse_info": {
                "type": "string",
                "description": "Information about the types of abuse that can occur with the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "abuse_info": {
                    "type": "string",
                    "description": "Information about the types of abuse that can occur with the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "abuse_info": "CNS depressant misuse",
            "indication": "Pain management",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "ad1c2b3f-4e5d-6f7a-8b9c-0d1e2f3a4b5c",
        "name": "FDA_get_abuse_info_by_drug_name",
        "description": "Retrieve abuse information for a given drug name.",
        "detailed_description": "Retrieve information about types of abuse based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-behavior-reporting",
            "controlled-substance-tracking",
            "drug-abuse-info",
            "drug-safety-monitoring",
            "fda-api-integration",
            "fda-drug-abuse",
            "fdadruglabel-endpoint",
            "pagination-support",
            "pharmacology-reference",
            "pharmacovigilance",
            "public-health-surveillance",
            "regulatory-label-data",
            "substance-abuse-patterns"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve abuse information by drug name",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "FDA_get_drug_names_by_accessories",
        "description": "Retrieve drug names from FDA labels using accessory information.",
        "detailed_description": "Retrieve drug names based on the accessories field information.",
        "toolType": "API",
        "tags": [
            "accessories-field-filter",
            "accessory-driven-search",
            "api-parameter-lookup",
            "drug-database-query",
            "drug-name-retrieval",
            "fda-drug-label-query",
            "healthcare-regulatory-tool",
            "indication-based-filter",
            "pagination-support",
            "pharmaceutical-accessories",
            "regulatory-data-access",
            "text-based-search"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by accessory_name",
            "Filter results by indication",
            "Paginate results using limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accessory_name": {
                "type": "string",
                "description": "The name or part of the name of the accessory."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accessory_name": {
                    "type": "string",
                    "description": "The name or part of the name of the accessory.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "accessory_name": "tube",
            "indication": "pain relief",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7d72bba4-6c0f-4a14-9bb7-23f8ef01317b",
        "name": "FDA_get_accessories_info_by_drug_name",
        "description": "Retrieve accessories information by drug name",
        "detailed_description": "Retrieve information about accessories based on the drug name.",
        "toolType": "API",
        "tags": [
            "accessory-lookup-by-drug",
            "api-string-parameter",
            "drug-accessory-information",
            "drug-regulatory-science",
            "fda-accessories-retrieval",
            "fda-drug-label-database",
            "json-paginated-results",
            "packaging-and-ancillary-materials",
            "paginated-api-query",
            "pharmaceutical-accessories",
            "regulatory-compliance-data",
            "supply-chain-accessories"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve accessories information for a given drug name",
            "Search by brand or generic drug name",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "adf8c9e7-1b23-4c5d-8f9a-0b1c2d3e4f56",
        "name": "FDA_get_drug_names_by_active_ingredient",
        "description": "Retrieve drug names using active ingredient information.",
        "detailed_description": "Retrieve drug names based on the active ingredient information.",
        "toolType": "API",
        "tags": [
            "active-ingredient-lookup",
            "clinical-research-tool",
            "drug-information-access",
            "drug-name-retrieval",
            "fda-drug-database",
            "indication-filtering",
            "limit-skip-pagination",
            "medication-lookup",
            "pharmaceutical-research",
            "pharmacology-database",
            "pharmacovigilance-support",
            "query-by-ingredient",
            "regulatory-science",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by active ingredient",
            "Filter results by indication",
            "Pagination support via limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "active_ingredient": {
                "type": "string",
                "description": "The active ingredient in the drug product."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "active_ingredient": {
                    "type": "string",
                    "description": "The active ingredient in the drug product.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "active_ingredient": "ibuprofen",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c1f8d32-5c92-4b1e-b887-7f3b91d425da",
        "name": "FDA_get_manufacturer_name_NDC_number_by_drug_name",
        "description": "Get drug details like active ingredient, FDA application number, manufacturer, NDC code, and administration route by drug name.",
        "detailed_description": "Retrieve detailed information about a drug's active ingredient, FDA application number, manufacturer name, National Drug Code (NDC) number, and route of administration; all based on the drug name.",
        "toolType": "API",
        "tags": [
            "active-ingredient-data",
            "drug-administration-route",
            "drug-information-retrieval",
            "drug-label-database",
            "drug-safety-information",
            "fda-application-number",
            "fda-drug-registry",
            "manufacturer-name-search",
            "medication-database-query",
            "ndc-code-retrieval",
            "ndc-lookup",
            "pharma-api-integration",
            "pharmaceutical-regulatory-data"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug data by name",
            "Retrieve active ingredient information",
            "Retrieve FDA application number",
            "Retrieve manufacturer name",
            "Retrieve NDC code",
            "Retrieve administration route",
            "Support record pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f1a2cd-3b4e-5f67-8d9a-0b1c2d3e4f5a",
        "name": "get_plantcv_info",
        "description": "Retrieve detailed PlantCV information for plant phenotyping tasks",
        "detailed_description": "Get comprehensive information about PlantCV \u2013 plant phenotyping with image analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioimage-analysis",
            "computer-vision",
            "documentation-retrieval",
            "high-throughput-phenotyping",
            "image-analysis",
            "leaf-segmentation",
            "morphological-analysis",
            "phenotype-quantification",
            "plant-phenotyping",
            "plantcv",
            "python-package"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "plantcv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of PlantCV",
            "Offer installation instructions",
            "Show usage examples",
            "Return documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PlantCV"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PlantCV"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_scrublet_info",
        "description": "Fetch detailed information about the Scrublet package for single-cell doublet detection",
        "detailed_description": "Get comprehensive information about Scrublet \u2013 single-cell doublet detection",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "computational-biology",
            "data-quality-assessment",
            "doublet-detection",
            "doublet-filtering",
            "preprocessing",
            "python-package",
            "scRNA-seq",
            "scrublet",
            "single-cell-analysis",
            "single-cell-rna-seq",
            "transcriptomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scrublet",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve library details for Scrublet",
            "Optionally include usage examples and quick start guide",
            "Provide installation and documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_arboreto_info",
        "description": "Provides details on Arboreto, a package for gene regulatory network inference using tree ensemble methods.",
        "detailed_description": "Get comprehensive information about Arboreto \u2013 gene regulatory network inference",
        "toolType": "Scientific Software Package",
        "tags": [
            "arboreto-info-retrieval",
            "expression-data-processing",
            "gene-regulatory-network-inference",
            "genomics-research",
            "grn-inference",
            "network-biology",
            "package-documentation",
            "python-bioinformatics-package",
            "regulatory-network-modeling",
            "regulatory-network-reconstruction",
            "systems-biology",
            "transcriptome-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Arboreto",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about Arboreto",
            "Provide installation instructions for Arboreto",
            "Show usage examples of Arboreto",
            "Fetch documentation links for Arboreto"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Arboreto"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Arboreto"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a2f5b6c4-3d7e-4a9f-8b1e-2f5d7c8b9e1a",
        "name": "get_tiledbsoma_info",
        "description": "Retrieve information on TileDB-SOMA, a single-cell data storage solution using TileDB",
        "detailed_description": "Get comprehensive information about TileDB-SOMA \u2013 single-cell data storage with TileDB",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-database-interface",
            "bioinformatics-database",
            "computational-biology-tool",
            "data-discovery",
            "high-throughput-data-storage",
            "metadata-retrieval",
            "multidimensional-array-store",
            "omics-data-management",
            "python-bioinformatics-package",
            "sc-seq-data",
            "single-cell-data-storage",
            "single-cell-genomics",
            "tiledb-soma-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "tiledbsoma",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of TileDB-SOMA",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about TileDB-SOMA"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about TileDB-SOMA"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4a3486d-8b7f-4a57-9f2c-8c2f1b3e7dc9",
        "name": "get_descriptastorus_info",
        "description": "Retrieve comprehensive information about the Descriptastorus molecular descriptor toolkit.",
        "detailed_description": "Get comprehensive information about Descriptastorus \u2013 molecular descriptor calculation",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "chemical-structure-features",
            "cheminformatics",
            "compound-profiling",
            "computational-chemistry",
            "descriptor-extraction",
            "descriptor-toolkit",
            "drug-discovery-support",
            "function-metadata",
            "molecular-descriptor-calculation",
            "molecular-fingerprinting",
            "package-information",
            "qsar",
            "tool-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "descriptastorus",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of Descriptastorus",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Descriptastorus"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Descriptastorus"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2c9f3a1-b6e7-4f8a-9c0d-1e2f3a4b5c6d",
        "name": "get_mageck_info",
        "description": "Retrieve comprehensive details about the MAGeCK CRISPR screen analysis toolkit.",
        "detailed_description": "Get comprehensive information about MAGeCK \u2014 CRISPR screen analysis toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "command-line-interface",
            "crispr-screen-analysis",
            "functional-genomics",
            "genetic-screening",
            "high-throughput-screening",
            "mageck-documentation",
            "mageck-information",
            "package-metadata-retrieval",
            "resource-overview",
            "software-version-info",
            "tool-overview"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "mageck",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of MAGeCK",
            "Provide installation instructions for MAGeCK",
            "Provide usage examples for MAGeCK",
            "Provide links to MAGeCK documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about MAGeCK"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about MAGeCK"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4e1cf6ea-2a1b-4d89-9b3f-1e2c2f3a4b5c",
        "name": "get_pyfaidx_info",
        "description": "Get information about pyfaidx, an efficient FASTA file indexing and random access tool",
        "detailed_description": "Get comprehensive information about pyfaidx \u2013 efficient FASTA file indexing and random access",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "computational-biology",
            "fasta-indexing",
            "file-indexing",
            "genome-data-access",
            "large-file-processing",
            "pyfaidx-info",
            "python-package",
            "random-access",
            "sequence-data",
            "sequence-fetching",
            "sequence-subsetting"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyfaidx",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about the pyfaidx package",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d0c51711-1d89-4bcf-9c50-3a724d9e58f2",
        "name": "get_scvelo_info",
        "description": "Get comprehensive information about scVelo \u2013 RNA velocity analysis in single cells",
        "detailed_description": "Get comprehensive information about scVelo \u2013 RNA velocity analysis in single cells",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-resource",
            "cell-fate-inference",
            "computational-biology",
            "gene-expression-kinetics",
            "lineage-trajectory-mapping",
            "package-overview",
            "quick-start-tutorial",
            "rna-velocity-analysis",
            "scrna-seq-velocity",
            "scvelo-documentation",
            "single-cell-rna-seq",
            "transcriptome-dynamics",
            "usage-examples-guide",
            "velocity-estimation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scvelo",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves comprehensive information about scVelo",
            "Provides usage examples and quick start guide",
            "Details installation instructions and package metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b9c0d2-4f5a-48c6-9b1a-2d3e4f5a6b7c",
        "name": "get_deeptools_info",
        "description": "Retrieve detailed information about deepTools for deep sequencing data processing",
        "detailed_description": "Get comprehensive information about deepTools \u2013 deep sequencing data processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-resource",
            "compute-matrix",
            "correlation-analysis",
            "data-visualization",
            "deep-sequencing-analysis",
            "deeptools-info",
            "epigenomic-profiling",
            "fingerprint-plot",
            "genomics-processing",
            "next-generation-sequencing",
            "plot-heatmap",
            "software-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "deeptools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of deepTools",
            "Provide installation instructions for deepTools",
            "Describe usage guidelines for deepTools",
            "Link to deepTools documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about deepTools",
                "enum": [
                    "overview",
                    "installation",
                    "usage",
                    "documentation"
                ]
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about deepTools"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a5f9f94-d2a1-4b5e-9ef0-6c7b8d9a0f1e",
        "name": "get_openchem_info",
        "description": "Provides detailed info about OpenChem, a deep learning toolkit for drug discovery.",
        "detailed_description": "Get comprehensive information about OpenChem \u2013 deep learning toolkit for drug discovery",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "biotech-research",
            "chemoinformatics",
            "computational-chemistry",
            "deep-learning",
            "drug-discovery",
            "molecular-modeling",
            "neural-network",
            "openchem-info",
            "predictive-modeling",
            "python-library",
            "scientific-computing",
            "structure-activity-relationship",
            "toolkit-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "openchem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "overview",
            "installation",
            "usage",
            "documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about OpenChem"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about OpenChem"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9f1b2c3-4e5f-6a7b-8c9d-0e1f2a3b4c5d",
        "name": "get_scikit_learn_info",
        "description": "Retrieve comprehensive details about scikit-learn, a library for efficient predictive data analysis.",
        "detailed_description": "Get comprehensive information about scikit-learn - simple and efficient tools for predictive data analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "data-preprocessing",
            "feature-engineering",
            "machine-learning-api",
            "model-selection",
            "predictive-data-analysis",
            "python-ml-library",
            "quickstart-guide",
            "scikit-learn-documentation",
            "scikit-learn-info",
            "supervised-learning",
            "unsupervised-learning",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scikit-learn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides comprehensive package overview",
            "Retrieves documentation URL",
            "Retrieves repository link",
            "Provides installation instructions",
            "Offers usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_scikit_image_info",
        "description": "Retrieve comprehensive information about the scikit-image package for image processing in Python.",
        "detailed_description": "Get comprehensive information about scikit-image \u2013 image processing in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference-extraction",
            "computer-vision-toolkit",
            "developer-documentation",
            "digital-image-analysis",
            "image-processing-documentation",
            "library-overview",
            "package-explorer",
            "package-metadata-retrieval",
            "python-image-processing",
            "python-library-documentation",
            "scikit-image-info",
            "skimage-information"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scikit-image",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of scikit-image",
            "Provide installation instructions",
            "Show usage examples",
            "List available modules",
            "Fetch documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about scikit-image"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "modules",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about scikit-image"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6f8c2e0-3f4b-4a2e-8c9d-1b2a3c4d5e6f",
        "name": "get_optlang_info",
        "description": "Provides overview, installation instructions, usage examples, and documentation links for the optlang optimization language.",
        "detailed_description": "Get comprehensive information about optlang \u2013 optimization language for mathematical programming",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-parameters",
            "api-reference",
            "computational-optimization",
            "info-retrieval",
            "mathematical-programming",
            "operations-research",
            "optimization-language",
            "optlang-documentation",
            "optlang-info",
            "package-metadata",
            "python-package",
            "solver-interface"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "optlang",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of optlang",
            "Provide installation instructions for optlang",
            "Show usage examples for optlang",
            "Link to optlang documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about optlang"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about optlang"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f5a9e4d-8b7f-4c32-9b1a-2dbe733c4a90",
        "name": "get_ase_info",
        "description": "Get information about ASE, the Atomic Simulation Environment for building, running, and analyzing atomistic simulations.",
        "detailed_description": "Get comprehensive information about ASE (Atomic Simulation Environment) \u2013 a toolkit for building, running and analysing atomistic simulations.",
        "toolType": "Scientific Software Package",
        "tags": [
            "ab-initio-simulation",
            "ase-information",
            "atomistic-simulation",
            "computational-chemistry",
            "computational-materials",
            "materials-modeling",
            "molecular-dynamics",
            "molecular-simulation",
            "nanoscale-modeling",
            "python-package",
            "quantum-simulation",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ase",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed information about the ASE package",
            "Include usage examples and quick-start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f1a7e0-4c2d-4d36-9b10-5c6765a8b4a3",
        "name": "get_pymzml_info",
        "description": "Provides information about the pymzML library for parsing mzML mass spectrometry files.",
        "detailed_description": "Get comprehensive information about pymzML \u0013 mzML file parser for mass spectrometry",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "mass-spectrometry",
            "metabolomics-research",
            "metadata-extraction",
            "ms-data-analysis",
            "mzml-file-inspection",
            "mzml-format-parser",
            "parser-configuration",
            "proteomics-workflow",
            "pymzml-documentation",
            "pymzml-inspection",
            "python-package-info",
            "spectral-data-processing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pymzml",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of pymzML",
            "Provide installation instructions",
            "Show usage examples",
            "Link to documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about pymzML"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about pymzML"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d5e5b36-0cbb-4fcc-bb8a-3d0b2fe9f5e1",
        "name": "get_khmer_info",
        "description": "Provides comprehensive information about khmer, a nucleotide sequence k-mer analysis package.",
        "detailed_description": "Get comprehensive information about khmer \u2013 nucleotide sequence k-mer analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-genomics",
            "debruijn-graph-operations",
            "genome-assembly-support",
            "high-throughput-sequencing",
            "k-mer-analysis",
            "k-mer-counting",
            "k-mer-statistics",
            "khmer-library",
            "metagenomics-analysis",
            "nucleotide-sequence-analysis",
            "sequence-data-processing",
            "sequence-indexing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "khmer",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of khmer package",
            "Provide installation instructions",
            "Show usage examples",
            "Offer documentation details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about khmer"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about khmer"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "arxiv-nlp",
        "description": "Search ArXiv NLP (cs.CL) category and return structured paper results.",
        "detailed_description": "Search ArXiv Natural Language Processing (cs.CL) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-paper-search",
            "arxiv-api-query",
            "arxiv-nlp-search",
            "computational-linguistics",
            "cs-cl-paper-retrieval",
            "exact-match-filtering",
            "langchain-tool-integration",
            "literature-mining",
            "natural-language-processing",
            "nlp-literature-discovery",
            "query-based-retrieval",
            "structured-results-output"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Searches ArXiv cs.CL category for papers based on a query",
            "Parses and structures results into Published, Title, Authors, and Summary",
            "Supports exact match filtering"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv NLP category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv NLP category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "transformer attention",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8d9f024-5c4d-4b3e-a9c5-b8564c9a92f1",
        "name": "arxiv-cv",
        "description": "Search ArXiv Computer Vision category and return structured paper results.",
        "detailed_description": "Search ArXiv Computer Vision (cs.CV) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-paper-retrieval",
            "arxiv-cv-search",
            "arxiv-query-engine",
            "computer-vision-papers",
            "cs-cv-category",
            "digital-library-integration",
            "exact-match-filtering",
            "paper-metadata-extraction",
            "query-based-retrieval",
            "research-paper-discovery",
            "scholarly-database-search",
            "structured-search-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv CS.CV for papers",
            "Return publication date, title, authors, and summary",
            "Support exact match queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Computer Vision category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Computer Vision category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "convolutional neural networks",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "arxiv-biomolecules",
        "description": "Search the ArXiv Biomolecules category and return structured results.",
        "detailed_description": "Search ArXiv Biomolecules (q-bio.BM) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-publication-retrieval",
            "arxiv-biomolecules-search",
            "bioinformatics-literature-mining",
            "biomolecules-preprint-search",
            "computational-biology-search",
            "exact-match-filter",
            "molecular-biology-articles",
            "preprint-database-query",
            "q-bio-biomolecules-query",
            "research-literature-exploration",
            "scientific-article-discovery",
            "structured-search-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Biomolecules category",
            "Return structured results (Published, Title, Authors, Summary)",
            "Support exact match searches"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Biomolecules category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Biomolecules category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "protein folding",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8184f6-9a7c-4ea2-bf48-1f3456ab7890",
        "name": "arxiv-cell-behavior",
        "description": "Search ArXiv Cell Behavior papers by query and return structured summaries.",
        "detailed_description": "Search ArXiv Cell Behavior (q-bio.CB) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-retrieval",
            "arxiv-search",
            "bioinformatics-literature",
            "cell-behavior-search",
            "computational-biology",
            "exact-match-search",
            "langchain-integration",
            "literature-mining",
            "q-bio-cb",
            "research-automation",
            "scientific-knowledge-extraction",
            "semantic-search",
            "structured-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv q-bio.CB category",
            "Return structured results including publication date, title, authors, and summary"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Cell Behavior category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Cell Behavior category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cell migration signaling",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d7e15b90-3f28-4fdd-a731-814efffedc12",
        "name": "arxiv-genomics",
        "description": "Search and retrieve structured results from ArXiv's Genomics category.",
        "detailed_description": "Search ArXiv Genomics (q-bio.GN) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "arxiv-api-search",
            "arxiv-genomics",
            "arxiv-paper-retrieval",
            "bioinformatics-literature",
            "computational-genomics-search",
            "exact-match-filter",
            "genomics-article-discovery",
            "genomics-literature-search",
            "q-bio-gn-query",
            "research-paper-mining",
            "scholarly-article-access",
            "structured-search-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Genomics category for a query",
            "Optionally perform exact match filtering",
            "Return structured results including publication date, title, authors, and summary"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Genomics category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Genomics category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "genome assembly",
            "exact_match": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "arxiv-molecular-networks",
        "description": "Search the ArXiv Molecular Networks category for a query and return structured paper details.",
        "detailed_description": "Search ArXiv Molecular Networks (q-bio.MN) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "article-search",
            "arxiv-molecular-networks",
            "computational-biology-search",
            "exact-match-filter",
            "json-structured-results",
            "literature-mining",
            "molecular-networks-query",
            "network-biology-literature",
            "paper-discovery",
            "q-bio-mn-search",
            "systems-biology-papers",
            "text-query"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Molecular Networks (q-bio.MN) category with a query",
            "Return structured metadata: Published date, Title, Authors list, and Summary"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Molecular Networks category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Molecular Networks category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "protein\u2013protein interaction",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b8ac9f9-4c45-4a7a-bd1c-ec3f708864c6",
        "name": "arxiv-neurons-cognition",
        "description": "Search the ArXiv Neurons and Cognition category for a query and return structured results.",
        "detailed_description": "Search ArXiv Neurons and Cognition (q-bio.NC) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-literature-discovery",
            "arxiv-search",
            "bibliographic-search",
            "cognitive-neuroscience",
            "exact-match-search",
            "neuroinformatics",
            "neurons-cognition",
            "paper-discovery",
            "q-bio-nc",
            "query-based-retrieval",
            "scientific-publication-search",
            "structured-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Searches the ArXiv Neurons and Cognition category for a query.",
            "Returns publication date, title, authors, and summary for each result.",
            "Supports exact match querying."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Neurons and Cognition category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Neurons and Cognition category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "neuron plasticity",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e9f3c1b7-2a5d-4f6b-9c1d-3e8a7f2b5c4d",
        "name": "arxiv-math",
        "description": "Search ArXiv's Mathematics category and return structured results.",
        "detailed_description": "Search ArXiv Mathematics (math) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-api-query",
            "academic-literature-search",
            "arxiv-math-search",
            "exact-match-filtering",
            "langchain-tool-integration",
            "literature-review-assistant",
            "math-preprint-discovery",
            "mathematical-research-tool",
            "preprint-repository-query",
            "scholarly-article-retrieval",
            "structured-json-output",
            "text-query-processing"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Mathematics category",
            "Support exact match queries",
            "Return publication date, title, authors, and summary"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Mathematics category.",
                "required": true
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Mathematics category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "graph theory",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa7e6c6f-3c3e-4e95-bd3c-a70c1c0d0b1b",
        "name": "arxiv-condensed-matter",
        "description": "Search ArXiv Condensed Matter category and return structured results.",
        "detailed_description": "Search ArXiv Condensed Matter (cond-mat) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-literature",
            "arxiv-api-query",
            "cond-mat-search",
            "condensed-matter-physics",
            "document-retrieval",
            "exact-match-search",
            "literature-discovery",
            "metadata-retrieval",
            "physics-research-tool",
            "query-based-search",
            "research-paper-discovery",
            "scientific-literature-search",
            "structured-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Condensed Matter category for papers",
            "Return structured results including publication date, title, authors, and summary",
            "Support exact match queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Condensed Matter category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Condensed Matter category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "quantum Hall effect",
            "exact_match": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f9b50b-8d8a-4a14-9d16-3bc04e2f5d5a",
        "name": "arxiv-physics",
        "description": "Search ArXiv Physics for queries and get structured results.",
        "detailed_description": "Search ArXiv Physics (physics) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-research-tool",
            "arxiv-physics-search",
            "arxiv-query",
            "exact-match-search",
            "open-access-archive",
            "paper-topic-discovery",
            "physics-paper-discovery",
            "physics-research-tool",
            "scholarly-article-retrieval",
            "scientific-literature-search",
            "structured-search-results",
            "text-query-processing"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Physics category for a query",
            "Return publication date, title, authors, and summary",
            "Support exact match filtering"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Physics category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Physics category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "quantum entanglement",
            "exact_match": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
        "name": "get_protein_metadata_by_pdb_id",
        "description": "Retrieve basic protein structure metadata from the RCSB PDB given a PDB ID.",
        "detailed_description": "Retrieve basic protein structure metadata, including structure title, experimental method, resolution, and initial release date.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "computational-biology",
            "experimental-method",
            "initial-release-date",
            "macromolecular-database",
            "pdb-id-lookup",
            "protein-metadata-retrieval",
            "protein-structure-data",
            "rcsb-pdb",
            "resolution-lookup",
            "structural-biology",
            "structure-annotation"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve structure title",
            "Retrieve experimental method",
            "Retrieve resolution",
            "Retrieve initial release date"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID of the protein"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID of the protein",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4HHB"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8f8a27c-d2b6-4bae-8f18-a54101baf00c",
        "name": "get_polymer_entity_ids_by_pdb_id",
        "description": "Lists polymer entity IDs for a specified PDB entry, enabling downstream polymer entity queries.",
        "detailed_description": "List polymer entity IDs for a given PDB ID. Useful for building further queries on individual polymer entities.",
        "toolType": "API",
        "tags": [
            "biomolecular-entities",
            "chain-identifier-list",
            "computational-biology",
            "database-lookup",
            "entity-id-extraction",
            "macromolecule-entity-list",
            "pdb-database-integration",
            "pdb-id-lookup",
            "polymer-entity-retrieval",
            "polymer-id-fetch",
            "protein-structure-db",
            "rcsb-pdb-query",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Accepts a 4-character RCSB PDB ID as input",
            "Retrieves polymer entity IDs for the specified entry",
            "Facilitates further polymer entity-specific queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID of the protein"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID of the protein",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_polymer_entity_type_by_entity_id",
        "description": "Retrieve polymer entity type (e.g., Protein, DNA) by its ID.",
        "detailed_description": "Get the polymer entity type (e.g., Protein, DNA) using the polymer entity ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biomolecule-classification",
            "entity-id-lookup",
            "entity-type-retrieval",
            "id-based-query",
            "macromolecule-typing",
            "molecular-biology",
            "pdb-entity-mapping",
            "pdb-entity-type",
            "polymer-classification",
            "polymer-entity-type",
            "protein-dna-identification",
            "rcsb-pdb-query",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch polymer entity type using entity_id",
            "Retrieve pdbx_description of polymer entity",
            "Support queries by polymer entity ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Polymer entity ID like '1A8M_1'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Polymer entity ID like '1A8M_1'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2b87cb6-5dcb-4973-9a5f-0cf0ac6d905e",
        "name": "get_source_organism_by_pdb_id",
        "description": "Get the source organism's scientific name for a PDB entry.",
        "detailed_description": "Retrieve the scientific name of the source organism for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "molecular-biology",
            "organism-scientific-name",
            "pdb-id-query",
            "pdb-organism-lookup",
            "protein-source-identification",
            "rcsb-pdb-integration",
            "source-organism-retrieval",
            "species-identification",
            "structural-biology",
            "taxonomic-classification",
            "taxonomic-data-access"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search RCSB PDB entries by PDB ID",
            "Retrieve the scientific name of the source organism",
            "Query polymer_entities source organism metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID of the structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID of the structure",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_citation_info_by_pdb_id",
        "description": "Retrieve citation details such as authors, journal, and year for a given PDB structure.",
        "detailed_description": "Retrieve citation information (authors, journal, year) for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "author-metadata",
            "bibliographic-data",
            "biomolecular-structures",
            "citation-retrieval",
            "journal-reference",
            "literature-search",
            "pdb-citation",
            "pdb-id-lookup",
            "rcsb-pdb-query",
            "reference-extraction",
            "research-publications",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve authors of the PDB primary citation",
            "Retrieve title of the PDB primary citation",
            "Retrieve journal abbreviation of the PDB primary citation",
            "Retrieve publication year of the PDB primary citation",
            "Retrieve DOI of the PDB primary citation",
            "Retrieve ORCID identifiers associated with the citation",
            "Retrieve PubMed abstract text",
            "Retrieve PubMed MeSH descriptor IDs",
            "Retrieve PubMed MeSH descriptor names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4HHB"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d47ac9f2-3bfc-4f01-8a0a-9c2be12f5f02",
        "name": "get_sequence_lengths_by_pdb_id",
        "description": "Retrieve polymer entity sequence lengths for a PDB entry.",
        "detailed_description": "Retrieve the sequence lengths of polymer entities for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "macromolecular-sequence",
            "nucleotide-sequence-length",
            "pdb-id-query",
            "pdb-sequence-lengths",
            "pdb-structure-metrics",
            "polymer-entity-length",
            "protein-length-measure",
            "rcsb-pdb-interface",
            "residue-count-calculation",
            "sequence-data-retrieval",
            "sequence-length-extraction",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve sequence lengths of polymer entities given a PDB ID",
            "Search RCSB PDB for entity sequence length metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1a75c6e-8f2d-4c9b-907a-5e6f0b1d2c3d",
        "name": "get_sequence_by_pdb_id",
        "description": "Retrieve polymer entity sequences by PDB ID",
        "detailed_description": "Retrieve amino acid or nucleotide sequence of polymer entities for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "amino-acid-sequence",
            "computational-biology",
            "macromolecular-sequence",
            "nucleotide-sequence",
            "pdb-sequence-retrieval",
            "polymer-entity-sequence",
            "protein-sequence-retrieval",
            "rcsb-pdb-query",
            "sequence-extraction",
            "sequence-mining",
            "structural-bioinformatics",
            "structure-based-sequence"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve polymer sequences by PDB ID",
            "Supports amino acid and nucleotide sequences",
            "Provides sequences in one-letter code"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4HHB"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2b6e5c3a-0fdd-4fcd-b8a0-58e0c8f94ad2",
        "name": "PubChem_search_compounds_by_substructure",
        "description": "Search for PubChem compound IDs containing a specified substructure.",
        "detailed_description": "Search for all CIDs in PubChem that contain the given substructure (SMILES).",
        "toolType": "API",
        "tags": [
            "chemical-database-query",
            "chemical-structure-search",
            "cheminformatics",
            "computational-chemistry",
            "molecular-substructure",
            "pubchem-cid-retrieval",
            "pubchem-rest-api",
            "pubchem-substructure-search",
            "small-molecule-discovery",
            "smiles-search",
            "substructure-screening",
            "substructure-search"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query PubChem for compound IDs matching a substructure given as SMILES",
            "Returns up to 10 compound IDs per query"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "string",
                "description": "SMILES of substructure (e.g., \"c1ccccc1\" corresponds to benzene ring)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "string",
                    "description": "SMILES of substructure (e.g., \"c1ccccc1\" corresponds to benzene ring)."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": "c1ccccc1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7d9a4b0-4d1a-4e63-9c4e-3a5e1f3b9a6c",
        "name": "PubChem_search_compounds_by_similarity",
        "description": "Search PubChem for compounds similar to a given SMILES, returning up to 10 CIDs above a similarity threshold.",
        "detailed_description": "Search by similarity (Tanimoto coefficient), returns CID list of compounds with similarity above threshold to given SMILES molecule, returns no more than 10 CIDs (MaxRecords=10)",
        "toolType": "API",
        "tags": [
            "chemical-similarity-search",
            "cheminformatics",
            "cid-retrieval",
            "computational-chemistry",
            "drug-discovery",
            "fingerprint-based-search",
            "molecular-similarity",
            "pubchem-rest-api",
            "similarity-threshold",
            "small-molecule-discovery",
            "smiles-input",
            "tanimoto-coefficient",
            "virtual-screening"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search compounds by chemical similarity",
            "Filter results by Tanimoto coefficient threshold",
            "Return up to 10 PubChem CIDs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "string",
                "description": "SMILES expression of target molecule."
            },
            "threshold": {
                "type": "number",
                "description": "Similarity threshold (between 0 and 1), e.g., 0.9 means 90% similarity."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "string",
                    "description": "SMILES expression of target molecule."
                },
                "threshold": {
                    "type": "number",
                    "description": "Similarity threshold (between 0 and 1), e.g., 0.9 means 90% similarity.",
                    "default": 0.9
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": "CCO",
            "threshold": 0.9
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d77331b0-6e64-40dc-9fd0-e2e4a21cddf8",
        "name": "PubChem_get_compound_2D_image_by_CID",
        "description": "Retrieves a 2D PNG structure image of a compound given its PubChem CID.",
        "detailed_description": "Get 2D structure image (PNG format) of compound by CID.",
        "toolType": "API",
        "tags": [
            "2d-molecular-structure",
            "chemical-structure-rendering",
            "cheminformatics",
            "cid-based-query",
            "compound-diagram",
            "compound-image-generation",
            "computational-chemistry",
            "molecule-visualization",
            "png-output",
            "pubchem-data-retrieval",
            "small-molecule-database",
            "structural-formula"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch 2D structure image of a compound by its CID",
            "Return image in PNG format",
            "Customizable image size"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "integer",
                "description": "Compound ID to get image for, e.g., 2244."
            },
            "image_size": {
                "type": "string",
                "description": "Optional parameter, image size, like \"200x200\" (default)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "description": "Compound ID to get image for, e.g., 2244."
                },
                "image_size": {
                    "type": "string",
                    "description": "Optional parameter, image size, like \"200x200\" (default).",
                    "default": "200x200"
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": 2244,
            "image_size": "200x200"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e5adb3a0-1a16-4fa3-b0d4-9e8e6374f1d2",
        "name": "PubChem_get_compound_synonyms_by_CID",
        "description": "Get a complete list of synonyms for a compound given its PubChem CID.",
        "detailed_description": "Get complete list of synonyms for compound by CID.",
        "toolType": "API",
        "tags": [
            "chemical-alias-lookup",
            "chemical-database-access",
            "chemical-nomenclature",
            "cheminformatics",
            "cid-based-query",
            "compound-identifier",
            "compound-synonym-retrieval",
            "computational-chemistry",
            "data-integration",
            "database-curation",
            "pubchem-api",
            "synonym-mapping"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch compound synonyms by CID",
            "Uses PubChem REST API endpoint /compound/cid/{cid}/synonyms/JSON",
            "Returns all recorded synonyms for a given compound in JSON format"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "integer",
                "description": "Compound ID to query synonyms for, e.g., 2244."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "description": "Compound ID to query synonyms for, e.g., 2244."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": 2244
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f6c12e4-9ad3-4b1c-b456-d7890eab1234",
        "name": "PubChem_get_compound_xrefs_by_CID",
        "description": "Retrieves external database references for a PubChem compound by its CID.",
        "detailed_description": "Get external references (XRefs) for compound by CID, including links to ChEBI, DrugBank, KEGG, etc.",
        "toolType": "API",
        "tags": [
            "chebi-integration",
            "chemical-database-mapping",
            "cheminformatics",
            "compound-xrefs",
            "computational-chemistry",
            "data-integration",
            "drugbank-integration",
            "external-database-links",
            "kegg-compound-links",
            "pubchem-cid-lookup",
            "pubmed-id-retrieval",
            "registry-id-lookup",
            "rest-api-client",
            "small-molecule-annotation"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches external references for a compound using its CID",
            "Supports querying multiple external resource types (e.g., ChEBI, DrugBank, KEGG)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "integer",
                "description": "Compound ID to query external references for, e.g., 2244."
            },
            "xref_types": {
                "type": "array",
                "description": "List of external database types to query, e.g., [\"RegistryID\", \"RN\", \"PubMedID\"].",
                "items": {
                    "type": "string"
                }
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "description": "Compound ID to query external references for, e.g., 2244."
                },
                "xref_types": {
                    "type": "array",
                    "description": "List of external database types to query, e.g., [\"RegistryID\", \"RN\", \"PubMedID\"].",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "cid",
                "xref_types"
            ]
        },
        "exampleInput": {
            "cid": 2244,
            "xref_types": [
                "ChEBI",
                "DrugBank",
                "KEGG"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9b8e1cd-6d24-4e92-9b1e-3c2a9f0d7a5b",
        "name": "search_clinical_trials",
        "description": "Search and retrieve paginated lists of clinical trials from ClinicalTrials.gov by condition, intervention, or other terms.",
        "detailed_description": "Search for clinical trials registered on clinicaltrials.gov based on title, conditions, interventions, outcome measures, and status. Returns a paginated list of studies, containing the NCT ID and description of each trial. You can then take the NCT IDs and use 'get_clinical_trials_*' tools to get detailed information about specific protocol fields for specific studies, or 'extract_clinical_trials_efficacy/safety' tools to get efficacy or adverse events results from specific studies. If you wish to see the next page of results, you can use the 'nextPageToken' value from the previous output of this tool and input it as the 'pageToken' parameter in the next query. Note that currently the search is limited to trials beyond phase 1.",
        "toolType": "API",
        "tags": [
            "clinical-research-informatics",
            "clinical-trials-search",
            "clinicaltrialsgov-integration",
            "disease-condition-query",
            "essie-syntax-search",
            "evidence-based-research",
            "intervention-search",
            "nct-id-extraction",
            "outcome-measures-filter",
            "paginated-api-retrieval",
            "phase-ii-and-beyond",
            "protocol-field-discovery",
            "trial-status-filter"
        ],
        "category": "ClinicalTrialsSearchTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search clinical trials by condition, intervention, or custom query terms",
            "Return NCT ID and description for each trial",
            "Support paginated results with pageSize and pageToken"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "condition": {
                "type": "string",
                "description": "Query for condition or disease using Essie expression syntax (e.g., 'lung cancer', '(head OR neck) AND pain AND NOT \"back pain\"')."
            },
            "intervention": {
                "type": "string",
                "description": "Query for intervention/treatment using Essie expression syntax (e.g., 'chemotherapy', 'immunotherapy', 'olaparib', 'combination therapy')."
            },
            "query_term": {
                "type": "string",
                "description": "Query for 'other terms' with Essie expression syntax (e.g., 'combination', 'AREA[LastUpdatePostDate]RANGE[2023-01-15,MAX]', 'Phase II'). Can be used to search for all other protocol fields, including but not limited to title, outcome measures, status, phase, location, etc."
            },
            "pageSize": {
                "type": "integer",
                "description": "Maximum number of studies to return per page (default 10, max 1000)."
            },
            "pageToken": {
                "type": "string",
                "description": "Token to retrieve the next page of results, obtained from the 'nextPageToken' field of the previous response. Do not specify it for first page."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "Query for condition or disease using Essie expression syntax (e.g., 'lung cancer', '(head OR neck) AND pain AND NOT \"back pain\"'). ",
                    "required": false
                },
                "intervention": {
                    "type": "string",
                    "description": "Query for intervention/treatment using Essie expression syntax (e.g., 'chemotherapy', 'immunotherapy', 'olaparib', 'combination therapy').",
                    "required": false
                },
                "query_term": {
                    "type": "string",
                    "description": "Query for 'other terms' with Essie expression syntax (e.g., 'combination', 'AREA[LastUpdatePostDate]RANGE[2023-01-15,MAX]', 'Phase II'). Can be used to search for all other protocol fields, including but not limited to title, outcome measures, status, phase, location, etc."
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Maximum number of studies to return per page (default 10, max 1000).",
                    "required": false
                },
                "pageToken": {
                    "type": "string",
                    "description": "Token to retrieve the next page of results, obtained from the 'nextPageToken' field of the previous response. Do not specify it for first page.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "condition": "lung cancer",
            "intervention": "chemotherapy",
            "query_term": "Phase II",
            "pageSize": 20,
            "pageToken": "abc123token"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f6a8a59-2f07-4cbc-9af4-0a1d2e3f4b5c",
        "name": "get_clinical_trial_descriptions",
        "description": "Fetches clinical trial identification details such as titles, phases, and descriptions using NCT IDs.",
        "detailed_description": "Retrieves detailed identification information for trials, including titles, phases, and descriptions, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "brief-study-summary",
            "clinical-research-data",
            "clinical-trial-description",
            "ctgov-data-access",
            "full-study-description",
            "investigational-study-details",
            "nct-id-lookup",
            "phase-information-extraction",
            "protocol-summary-retrieval",
            "regulatory-submission-support",
            "systematic-review-support",
            "trial-identification"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve trial titles",
            "Retrieve trial phases",
            "Retrieve brief descriptions",
            "Retrieve full descriptions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "description_type": {
                "type": "string",
                "description": "Type of information to retrieve. Options are 'brief' for brief descriptions or 'full' for full descriptions."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "description_type": {
                    "type": "string",
                    "description": "Type of information to retrieve. Options are 'brief' for brief descriptions or 'full' for full descriptions.",
                    "enum": [
                        "brief",
                        "full"
                    ]
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "description_type": "brief"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4e7bfa9-3898-4df0-9b52-1c6a2f8e4d3c",
        "name": "get_clinical_trial_status_and_dates",
        "description": "Retrieves clinical trial status and start/completion dates for given NCT IDs.",
        "detailed_description": "Retrieves trial status and start and completion dates, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "biomedical-research",
            "clinical-informatics",
            "clinical-research-data",
            "clinical-trial-status",
            "clinicaltrials-gov-api",
            "drug-development-tracking",
            "nct-id-lookup",
            "regulatory-compliance",
            "research-data-retrieval",
            "trial-completion-date",
            "trial-start-date",
            "trial-status-query"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve clinical trial status for given NCT IDs",
            "Retrieve trial start and completion dates"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "status_and_date": {
                "type": "string",
                "description": "Placeholder."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "status_and_date": {
                    "type": "string",
                    "description": "Placeholder."
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "status_and_date": ""
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2d6f2ee-28a1-4c4a-8b0b-f8e3e2d8b4f6",
        "name": "get_clinical_trial_conditions_and_interventions",
        "description": "Fetch conditions, interventions, and arm group details of clinical trials using NCT IDs",
        "detailed_description": "Retrieves the list of conditions or diseases and the interventions and arm groups that the clinical trials are focused on, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "biomedical-data-extraction",
            "clinical-research-analytics",
            "clinical-trial-conditions",
            "clinical-trial-interventions",
            "clinicaltrials-gov-data",
            "condition-disease-retrieval",
            "epidemiology-data-retrieval",
            "intervention-arm-group-extraction",
            "nct-id-extraction",
            "registry-data-mining",
            "research-trial-metadata",
            "study-design-parameters",
            "trial-protocol-mapping"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve list of conditions or diseases associated with clinical trials",
            "Retrieve list of interventions associated with clinical trials",
            "Retrieve arm group details for clinical trials using NCT IDs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "condition_and_intervention": {
                "type": "string",
                "description": "Placeholder."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "condition_and_intervention": {
                    "type": "string",
                    "description": "Placeholder."
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "condition_and_intervention": "Placeholder"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "23c9affc-1f2e-4eaa-9d8a-f5c2a1234567",
        "name": "get_clinical_trial_eligibility_criteria",
        "description": "Retrieve eligibility criteria of clinical trials by NCT IDs.",
        "detailed_description": "Retrieves the eligibility criteria for the clinical trials, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "clinical-criteria-extraction",
            "clinical-research-informatics",
            "clinical-trial-data",
            "clinical-trial-eligibility",
            "clinical-trial-protocol",
            "eligibility-criteria-retrieval",
            "nct-id-lookup",
            "nct-identifier-query",
            "patient-eligibility-criteria",
            "patient-recruitment-eligibility",
            "trial-eligibility-screening",
            "trial-participant-selection"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve eligibility criteria of clinical trials by NCT IDs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "eligibility_criteria": {
                "type": "string",
                "description": "Placeholder."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "eligibility_criteria": {
                    "type": "string",
                    "description": "Placeholder."
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "eligibility_criteria": ""
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c4f2a1e0-9d3c-4e8f-8b2d-7f6a5b4c3d2e",
        "name": "get_clinical_trial_locations",
        "description": "Retrieve locations of clinical trials by NCT IDs",
        "detailed_description": "Retrieves the locations where the clinical trials are being conducted, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "clinical-infrastructure-search",
            "clinical-research-sites",
            "clinical-site-locator",
            "clinical-trial-geodata",
            "clinical-trial-locations",
            "drug-development-locations",
            "geographical-recruitment-sites",
            "nct-id-lookup",
            "patient-recruitment-sites",
            "site-location-retrieval",
            "trial-participation-sites",
            "trial-site-mapping"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve locations of clinical trials by NCT IDs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "location": {
                "type": "string",
                "description": "Placeholder."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "location": {
                    "type": "string",
                    "description": "Placeholder."
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "location": "New York, USA"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f1e9f4d-9c6e-4f62-b183-91a3d8d25b60",
        "name": "get_clinical_trial_outcome_measures",
        "description": "Fetches outcome measures for clinical trials by NCT IDs.",
        "detailed_description": "Retrieves the outcome measures for the clinical trials, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "biostatistical-data",
            "clinical-data-mining",
            "clinical-trial-outcomes",
            "clinicaltrialsgov-data",
            "epidemiological-data",
            "evidence-based-research",
            "medical-research-support",
            "nct-id-query",
            "outcome-measure-retrieval",
            "primary-outcome-extraction",
            "secondary-outcome-extraction",
            "trial-endpoint-analysis"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves outcome measures given NCT IDs",
            "Supports primary, secondary, or all outcome measures"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "outcome_measures": {
                "type": "string",
                "description": "Decides whether to retrieve primary, secondary, or all outcome measures. Options are 'primary', 'secondary', or 'all'. Default is 'primary'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "outcome_measures": {
                    "type": "string",
                    "description": "Decides whether to retrieve primary, secondary, or all outcome measures. Options are 'primary', 'secondary', or 'all'. Default is 'primary'.",
                    "enum": [
                        "primary",
                        "secondary",
                        "all"
                    ],
                    "required": false
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "outcome_measures": "primary"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_clinical_trial_references",
        "description": "Retrieve references for clinical trials using their NCT IDs.",
        "detailed_description": "Retrieves the references (if any) for the clinical trials, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "biomedical-references",
            "clinical-trial-references",
            "clinicaltrials-gov-integration",
            "evidence-sourcing",
            "nct-id-lookup",
            "reference-metadata-fetching",
            "regulatory-submission-assistance",
            "research-citation-extraction",
            "systematic-review-support",
            "trial-publication-retrieval"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve references for clinical trials",
            "Accepts a list of NCT IDs as input"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "references": {
                "type": "string",
                "description": "Placeholder."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "references": {
                    "type": "string",
                    "description": "Placeholder."
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "references": ""
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9067184-3f40-4bb7-8ce1-2c3f2fed4b33",
        "name": "extract_clinical_trial_outcomes",
        "description": "Extracts detailed trial outcome results such as survival rates and p-values from ClinicalTrials.gov using NCT IDs.",
        "detailed_description": "Extracts detailed trial outcome results (e.g., overall survival months, p-values, etc.) from clinicaltrials.gov, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "biomedical-text-mining",
            "clinical-research-data",
            "clinical-trial-outcomes",
            "clinicaltrials-gov-mining",
            "endpoint-data-extraction",
            "evidence-synthesis",
            "nct-id-extraction",
            "outcome-measure-extraction",
            "p-value-extraction",
            "primary-secondary-outcomes",
            "survival-analysis",
            "trial-endpoint-mining"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract detailed outcome results from clinical trials",
            "Retrieve primary, secondary, or custom outcome measures",
            "Supports partial matching of outcome measure names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "outcome_measure": {
                "type": "string",
                "description": "Outcome measure to extract. Example values include 'primary' (primary outcomes only), 'secondary' (secondary outcomes only), 'all' (all outcomes), or specific measure names such as 'survival', 'overall survival'. For specific measure names, outcome measures will be matched as long as the input partially matches their titles or descriptions (case agnostic). Querying for specific measure names is recommended after getting an overview of outcome measures ('primary'). If querying for specific measure names does not return any results, this parameter should be set to 'primary' for sanity check. By default, the value is set to 'primary', i.e. the tool will extract all primary outcome results."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    },
                    "required": true
                },
                "outcome_measure": {
                    "type": "string",
                    "description": "Outcome measure to extract. Example values include 'primary' (primary outcomes only), 'secondary' (secondary outcomes only), 'all' (all outcomes), or specific measure names such as 'survival', 'overall survival'. For specific measure names, outcome measures will be matched as long as the input partially matches their titles or descriptions (case agnostic). Querying for specific measure names is recommended after getting an overview of outcome measures ('primary'). If querying for specific measure names does not return any results, this parameter should be set to 'primary' for sanity check. By default, the value is set to 'primary', i.e. the tool will extract all primary outcome results.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "outcome_measure": "primary"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a8b1e36-7d4f-4ef1-a809-ba4d9e8fbf9e",
        "name": "extract_clinical_trial_adverse_events",
        "description": "Retrieves adverse event details for specified clinical trials from ClinicalTrials.gov",
        "detailed_description": "Extracts detailed adverse event results from clinicaltrials.gov, using their NCT IDs.",
        "toolType": "API",
        "tags": [
            "adverse-event-extraction",
            "clinical-trial-adverse-events",
            "clinicaltrials-gov-scraper",
            "drug-safety-assessment",
            "meddra-term-search",
            "nct-id-lookup",
            "non-serious-adverse-events",
            "organ-system-filtering",
            "pharmacovigilance-data",
            "safety-profile-analysis",
            "serious-adverse-events",
            "side-effect-reporting"
        ],
        "category": "ClinicalTrialsDetailsTool",
        "lab": "Zitnik Lab",
        "source": "ClinicalTrials.gov",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve adverse event results for clinical trials by NCT IDs",
            "Filter adverse events by specified organ systems",
            "Select adverse event types (serious, other, all, or specific event names)",
            "Default to extracting serious adverse events"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nct_ids": {
                "type": "array",
                "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545'])."
            },
            "organ_systems": {
                "type": "array",
                "description": "List of organs or organ systems to filter adverse events (see enum for exact text). Adverse events will be matched only if the input exactly matches their terms (case agnostic). If not specified, all adverse events will be returned. By default, all adverse events will be returned."
            },
            "adverse_event_type": {
                "type": "string",
                "description": "Type of adverse events to extract. Options are 'serious' (serious adverse events only), 'other' (non-serious adverse events only), 'all' (all adverse events), or specific event names such as 'nausea', 'neutropenia', 'epilepsy' (from MedDRA). For specific event names, adverse events will be matched as long as the input partially matches their terms (case agnostic)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nct_ids": {
                    "type": "array",
                    "description": "List of NCT IDs of the clinical trials (e.g., ['NCT04852770', 'NCT01728545']).",
                    "items": {
                        "type": "string"
                    }
                },
                "organ_systems": {
                    "type": "array",
                    "description": "List of organs or organ systems to filter adverse events (see enum for exact text). Adverse events will be matched only if the input exactly matches their terms (case agnostic). If not specified, all adverse events will be returned. By default, all adverse events will be returned.",
                    "items": {
                        "type": "string",
                        "enum": [
                            "Blood and Lymphatic System Disorders",
                            "Cardiac Disorders",
                            "Congenital, Familial and Genetic Disorders",
                            "Ear and Labyrinth Disorders",
                            "Endocrine Disorders",
                            "Eye Disorders",
                            "Gastrointestinal Disorders",
                            "General Disorders",
                            "Hepatobiliary Disorders",
                            "Immune System Disorders",
                            "Infections and Infestations",
                            "Injury, Poisoning and Procedural Complications",
                            "Investigations",
                            "Metabolism and Nutrition Disorders",
                            "Musculoskeletal and Connective Tissue Disorders",
                            "Neoplasms Benign, Malignant and Unspecified (Including Cysts and Polyps)",
                            "Nervous System Disorders",
                            "Pregnancy, Puerperium and Perinatal Conditions",
                            "Product Issues",
                            "Psychiatric Disorders",
                            "Renal and Urinary Disorders",
                            "Reproductive System and Breast Disorders",
                            "Respiratory, Thoracic and Mediastinal Disorders",
                            "Skin and Subcutaneous Tissue Disorders",
                            "Social Circumstances",
                            "Surgical and Medical Procedures",
                            "Vascular Disorders"
                        ]
                    }
                },
                "adverse_event_type": {
                    "type": "string",
                    "description": "Type of adverse events to extract. Options are 'serious' (serious adverse events only), 'other' (non-serious adverse events only), 'all' (all adverse events), or specific event names such as 'nausea', 'neutropenia', 'epilepsy' (from MedDRA). For specific event names, adverse events will be matched as long as the input partially matches their terms (case agnostic). Querying for specific adverse event names is recommended as there are typically many adverse events logged. If querying for specific event names does not return any results, this parameter should be set to 'serious' for sanity check. By default, the value is set to 'serious', i.e. the tool will extract all serious adverse events."
                }
            },
            "required": [
                "nct_ids"
            ]
        },
        "exampleInput": {
            "nct_ids": [
                "NCT04852770",
                "NCT01728545"
            ],
            "organ_systems": [
                "Cardiac Disorders",
                "Respiratory, Thoracic and Mediastinal Disorders"
            ],
            "adverse_event_type": "serious"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c4d9-1f2a-4b3c-8d9e-0f1a2b3c4d5e",
        "name": "ScientificTextSummarizer",
        "description": "Summarizes biomedical research texts by extracting key findings, methodology, and conclusions with customizable length and focus.",
        "detailed_description": "Summarizes biomedical research texts, abstracts, or papers with specified length and focus areas. Uses AI to extract key findings, methodology, and conclusions from complex biomedical literature.",
        "toolType": "AI Agent",
        "tags": [
            "abstractive-summarization",
            "ai-driven-summarization",
            "article-abstraction",
            "biomedical-text-summarization",
            "clinical-implications-summary",
            "drug-interactions-overview",
            "literature-review-assistance",
            "methodology-extraction",
            "nlp-text-condensation",
            "research-abstract-summarizer",
            "results-synthesis",
            "scientific-literature-mining"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Summarize biomedical research texts, abstracts, or papers",
            "Customize summary length",
            "Focus summary on specific areas",
            "Extract key findings, methodology, and conclusions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "text": {
                "type": "string",
                "description": "The biomedical text, abstract, or paper content to be summarized."
            },
            "summary_length": {
                "type": "string",
                "description": "Desired length of summary (e.g., '50', '100', '200 words')."
            },
            "focus_area": {
                "type": "string",
                "description": "What to focus on in the summary (e.g., 'methodology', 'results', 'clinical implications', 'drug interactions')."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The biomedical text, abstract, or paper content to be summarized.",
                    "required": true
                },
                "summary_length": {
                    "type": "string",
                    "description": "Desired length of summary (e.g., '50', '100', '200 words').",
                    "required": true
                },
                "focus_area": {
                    "type": "string",
                    "description": "What to focus on in the summary (e.g., 'methodology', 'results', 'clinical implications', 'drug interactions').",
                    "required": true
                }
            },
            "required": [
                "text",
                "summary_length",
                "focus_area"
            ]
        },
        "exampleInput": {
            "text": "This study investigates the efficacy of a new drug in treating Alzheimer's disease by conducting a double-blind, placebo-controlled trial involving 200 participants over a 12-month period. The methodology includes patient selection criteria, dosing schedules, and outcome measures.",
            "summary_length": "100",
            "focus_area": "methodology"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e1b1f9b9-2c8f-4b5d-9b1c-0e8b2c8f7d3a",
        "name": "CodeQualityAnalyzer",
        "description": "Analyzes code quality across correctness, performance, best practices, and robustness, providing detailed feedback and improvement suggestions.",
        "detailed_description": "Analyzes code quality from multiple dimensions including algorithmic correctness, functional implementation capability, performance characteristics, and best practices. Provides detailed feedback and improvement suggestions.",
        "toolType": "AI Agent",
        "tags": [
            "algorithmic-correctness-check",
            "best-practices-enforcement",
            "code-maintainability-assessment",
            "code-quality-analysis",
            "coding-standards-compliance",
            "dynamic-test-evaluation",
            "feedback-generation",
            "functional-implementation-assessment",
            "improvement-suggestions",
            "performance-profiling",
            "software-quality-assurance",
            "static-code-analysis",
            "test-case-reporting"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze algorithmic correctness",
            "Assess functional implementation capability",
            "Evaluate performance characteristics",
            "Review code structure and best practices",
            "Check error handling and robustness",
            "Validate testing and test execution",
            "Identify security and safety issues",
            "Advise on maintainability and extensibility"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_name": {
                "type": "string",
                "description": "Name of the tool being analyzed"
            },
            "tool_description": {
                "type": "string",
                "description": "Description of what the tool is supposed to do"
            },
            "tool_parameters": {
                "type": "string",
                "description": "JSON string of tool parameters and their types"
            },
            "implementation_code": {
                "type": "string",
                "description": "The actual implementation code to analyze"
            },
            "test_cases": {
                "type": "string",
                "description": "JSON string of test cases for the tool"
            },
            "test_execution_results": {
                "type": "string",
                "description": "JSON string of test execution results including pass/fail status and actual outputs"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_name": {
                    "type": "string",
                    "description": "Name of the tool being analyzed",
                    "required": true
                },
                "tool_description": {
                    "type": "string",
                    "description": "Description of what the tool is supposed to do",
                    "required": true
                },
                "tool_parameters": {
                    "type": "string",
                    "description": "JSON string of tool parameters and their types",
                    "required": true
                },
                "implementation_code": {
                    "type": "string",
                    "description": "The actual implementation code to analyze",
                    "required": true
                },
                "test_cases": {
                    "type": "string",
                    "description": "JSON string of test cases for the tool",
                    "required": true
                },
                "test_execution_results": {
                    "type": "string",
                    "description": "JSON string of test execution results including pass/fail status and actual outputs",
                    "required": false
                }
            },
            "required": [
                "tool_name",
                "tool_description",
                "tool_parameters",
                "implementation_code",
                "test_cases"
            ]
        },
        "exampleInput": {
            "tool_name": "ExampleTool",
            "tool_description": "A sample utility that performs arithmetic operations",
            "tool_parameters": "{\"operand1\":\"number\",\"operand2\":\"number\"}",
            "implementation_code": "def add(a, b):\n    return a + b",
            "test_cases": "[{\"input\": [1, 2], \"expected\": 3}, {\"input\": [5, -2], \"expected\": 3}]",
            "test_execution_results": "[{\"input\": [1, 2], \"expected\": 3, \"actual\": 3, \"status\": \"pass\"}, {\"input\": [5, -2], \"expected\": 3, \"actual\": 3, \"status\": \"pass\"}]"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b719da23-4e6d-4f3b-8a6c-0fe73bf26c64",
        "name": "PubChem_get_compounds_by_inchikey",
        "description": "Retrieve compounds matching an InChIKey.",
        "detailed_description": "Retrieve compounds matching an InChIKey.",
        "toolType": "API",
        "tags": [
            "chemical-data-mining",
            "chemical-database-access",
            "chemical-identifier-search",
            "cheminformatics",
            "compound-discovery",
            "compound-retrieval",
            "drug-discovery-support",
            "inchi-key-search",
            "inchikey-lookup",
            "molecular-informatics",
            "pubchem-api-access",
            "pubchem-query",
            "small-molecule-search",
            "structural-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds matching an InChIKey"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "inchikey": {
                "type": "string",
                "description": "InChIKey query."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "inchikey": {
                    "type": "string",
                    "description": "InChIKey query."
                }
            },
            "required": [
                "inchikey"
            ]
        },
        "exampleInput": {
            "inchikey": "BSYNRYMUTXBXSQ-UHFFFAOYSA-N"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1f25bc9-6c07-4f4b-bdb0-3b5b4fcb5fea",
        "name": "PubChem_get_compounds_by_formula",
        "description": "Retrieve compounds by molecular formula.",
        "detailed_description": "Retrieve compounds matching a molecular formula.",
        "toolType": "API",
        "tags": [
            "PubChem-API",
            "chemical-database-query",
            "cheminformatics",
            "compound-retrieval",
            "compound-search",
            "computational-chemistry",
            "database-mining",
            "drug-discovery",
            "formula-based-search",
            "json-response",
            "medicinal-chemistry",
            "molecular-formula-query",
            "molecular-formula-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds by formula"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "formula": {
                "type": "string",
                "description": "Molecular formula query."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "formula": {
                    "type": "string",
                    "description": "Molecular formula query."
                }
            },
            "required": [
                "formula"
            ]
        },
        "exampleInput": {
            "formula": "C6H6"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3a44aea-983f-4efa-927e-e579c35fd9ba",
        "name": "PubChem_get_compounds_2d",
        "description": "Retrieve 2D compound structures matching a search query.",
        "detailed_description": "Retrieve compounds (2D coordinates) matching a query and namespace.",
        "toolType": "API",
        "tags": [
            "2d-structure-retrieval",
            "chemical-database-access",
            "cheminformatics-integration",
            "compound-identifier-mapping",
            "drug-discovery-support",
            "identifier-based-query",
            "molecular-structure-data",
            "namespace-driven-search",
            "pubchem-compound-search",
            "small-molecule-retrieval",
            "structure-visualization",
            "substructure-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search compounds by various identifiers.",
            "Retrieve 2D coordinates of compounds."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query."
            },
            "namespace": {
                "type": "string",
                "description": "Identifier type.",
                "enum": [
                    "name",
                    "smiles",
                    "sdf",
                    "inchi",
                    "inchikey",
                    "formula"
                ]
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Search query."
                },
                "namespace": {
                    "type": "string",
                    "enum": [
                        "name",
                        "smiles",
                        "sdf",
                        "inchi",
                        "inchikey",
                        "formula"
                    ],
                    "description": "Identifier type."
                }
            },
            "required": [
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "namespace": "name"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c9c9b564-4fbe-4f07-a82c-9d0f8cae97a1",
        "name": "PubChem_get_compounds_3d",
        "description": "Fetch 3D compound structures matching a query and identifier type.",
        "detailed_description": "Retrieve compounds (3D coordinates) matching a query and namespace.",
        "toolType": "API",
        "tags": [
            "3d-structure-retrieval",
            "chemical-database-query",
            "cheminformatics",
            "compound-retrieval",
            "computational-chemistry",
            "drug-discovery",
            "json-output",
            "molecular-modeling",
            "namespace-identifier",
            "pharmacoinformatics",
            "pubchem-api-integration",
            "sdf-format",
            "small-molecule-structures",
            "string-query-input",
            "virtual-screening"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds with 3D coordinates",
            "Search compounds by query",
            "Support various identifier namespaces (name, smiles, sdf, inchi, inchikey, formula)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query."
            },
            "namespace": {
                "type": "string",
                "description": "Identifier type."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Search query."
                },
                "namespace": {
                    "type": "string",
                    "enum": [
                        "name",
                        "smiles",
                        "sdf",
                        "inchi",
                        "inchikey",
                        "formula"
                    ],
                    "description": "Identifier type."
                }
            },
            "required": [
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "namespace": "name"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-4a78-b9c0-123456789abc",
        "name": "PubChem_substructure_search",
        "description": "Search for compounds containing a specified substructure.",
        "detailed_description": "Find compounds containing the given substructure.",
        "toolType": "API",
        "tags": [
            "chemical-database",
            "chemoinformatics",
            "compound-discovery",
            "computational-chemistry",
            "fragment-based-screening",
            "inchi-search",
            "isotopic-matching",
            "molecular-fragment-search",
            "molecular-similarity-search",
            "pubchem-search",
            "smiles-query",
            "structural-subgraph-search",
            "substructure-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Find compounds by substructure",
            "Support pagination through listkey_count and listkey_start",
            "Optional isotope matching"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Substructure query (SMILES/InChI/etc.)."
            },
            "listkey_count": {
                "type": "integer",
                "description": "Number of results to return (pagination)."
            },
            "listkey_start": {
                "type": "integer",
                "description": "Offset for pagination."
            },
            "match_isotopes": {
                "type": "boolean",
                "description": "Whether to match isotopes."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Substructure query (SMILES/InChI/etc.)."
                },
                "listkey_count": {
                    "type": "integer",
                    "description": "Number of results to return (pagination)."
                },
                "listkey_start": {
                    "type": "integer",
                    "description": "Offset for pagination."
                },
                "match_isotopes": {
                    "type": "boolean",
                    "description": "Whether to match isotopes."
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "c1ccccc1",
            "listkey_count": 10,
            "listkey_start": 0,
            "match_isotopes": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7e5bbef-4bca-4b5e-9d57-3b1c731d2c5a",
        "name": "PubChem_superstructure_search",
        "description": "Search PubChem for compounds matching a specified superstructure.",
        "detailed_description": "Find compounds matching the given superstructure.",
        "toolType": "API",
        "tags": [
            "analog-discovery",
            "chemical-database-query",
            "chemical-structure-search",
            "cheminformatics",
            "compound-matching",
            "computational-chemistry",
            "high-throughput-screening",
            "molecular-screening",
            "pubchem-query",
            "smiles-input",
            "structural-chemistry",
            "structure-search-api",
            "substructure-matching",
            "superstructure-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform superstructure search on PubChem",
            "Support pagination via listkey_count and listkey_start",
            "Option to match isotopic variants"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Superstructure query."
            },
            "listkey_count": {
                "type": "integer",
                "description": "No description provided."
            },
            "listkey_start": {
                "type": "integer",
                "description": "No description provided."
            },
            "match_isotopes": {
                "type": "boolean",
                "description": "No description provided."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Superstructure query."
                },
                "listkey_count": {
                    "type": "integer"
                },
                "listkey_start": {
                    "type": "integer"
                },
                "match_isotopes": {
                    "type": "boolean"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "C1=CC=CC=C1",
            "listkey_count": 20,
            "listkey_start": 0,
            "match_isotopes": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5a03fa6e-2391-4d7c-a318-2c69f1a596ee",
        "name": "PubChem_similarity_search",
        "description": "Retrieve compounds similar to a given query above a specified threshold.",
        "detailed_description": "Find compounds similar to the given query above a threshold.",
        "toolType": "API",
        "tags": [
            "chemical-database-query",
            "chemical-similarity-search",
            "cheminformatics",
            "compound-similarity",
            "computational-chemistry",
            "drug-discovery",
            "fingerprint-based-search",
            "molecular-similarity",
            "pubchem-similarity-search",
            "small-molecule-search",
            "structure-activity-relationship",
            "threshold-filter",
            "virtual-screening"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Performs similarity search for compounds on PubChem",
            "Filters results by a user-defined similarity threshold",
            "Supports pagination via 'listkey_count' and 'listkey_start' parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Similarity query."
            },
            "threshold": {
                "type": "number",
                "description": "Similarity threshold (0\u2013100)."
            },
            "listkey_count": {
                "type": "integer",
                "description": ""
            },
            "listkey_start": {
                "type": "integer",
                "description": ""
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Similarity query."
                },
                "threshold": {
                    "type": "number",
                    "description": "Similarity threshold (0\u2013100)."
                },
                "listkey_count": {
                    "type": "integer"
                },
                "listkey_start": {
                    "type": "integer"
                }
            },
            "required": [
                "query",
                "threshold"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "threshold": 80,
            "listkey_count": 10,
            "listkey_start": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1f4e8c2-5b0d-4f4e-8d76-1ab2cd3e4f5a",
        "name": "PubChem_identity_search",
        "description": "Find compounds identical to a query.",
        "detailed_description": "Find compounds identical to the given query.",
        "toolType": "API",
        "tags": [
            "chemical-identification",
            "cheminformatics",
            "compound-deduplication",
            "compound-identity-matching",
            "compound-retrieval",
            "database-curation",
            "exact-structure-matching",
            "inchikey-search",
            "molecular-database-search",
            "pubchem-api-query",
            "pubchem-identity-search",
            "smiles-based-lookup"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Find compounds identical to a given query",
            "Accepts query strings to search for identical compounds",
            "Supports pagination via listkey_count and listkey_start"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Identity query."
            },
            "listkey_count": {
                "type": "integer",
                "description": ""
            },
            "listkey_start": {
                "type": "integer",
                "description": ""
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Identity query."
                },
                "listkey_count": {
                    "type": "integer"
                },
                "listkey_start": {
                    "type": "integer"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "listkey_count": 10,
            "listkey_start": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e9b1c9a6-5d4f-4b1a-9c7d-8e3f2a5b6c0d",
        "name": "PubChem_get_cids_for_substance_flat",
        "description": "Fetches CIDs for substances by name from PubChem as a flat list.",
        "detailed_description": "Get a flat list of CIDs for substances matching a name.",
        "toolType": "API",
        "tags": [
            "chemical-data-mining",
            "chemical-informatics",
            "chemical-registry-id",
            "cheminformatics",
            "cid-extraction",
            "compound-identifier-resolution",
            "database-lookup",
            "flat-list-output",
            "name-to-cid-mapping",
            "pubchem-api-query",
            "pubchem-cid-retrieval",
            "small-molecule-indexing",
            "substance-identifier-indexing",
            "substance-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get CIDs for substances matching a name from PubChem",
            "Return results as a flat list"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Substance name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Substance name."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "PubChem_get_cids_for_substance",
        "description": "Retrieve mapping of PubChem Substance IDs to Compound IDs for a given substance name.",
        "detailed_description": "Get a mapping of SIDs to CIDs for substances matching a name.",
        "toolType": "API",
        "tags": [
            "PubChem-API",
            "chemical-database-query",
            "chemical-identifier-resolution",
            "chemoinformatics",
            "cid-retrieval",
            "compound-disambiguation",
            "name-based-lookup",
            "name-to-cid-conversion",
            "pubchem-substance-search",
            "sid-to-cid-mapping",
            "small-molecule-identification",
            "substance-id-conversion"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve mapping of PubChem Substance IDs (SIDs) to Compound IDs (CIDs) for a given name",
            "Match substances by name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Substance name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Substance name."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7fb2f9d-3b59-4ad2-b149-5cc2ff3d490d",
        "name": "PubChem_get_sids_by_cid",
        "description": "Get Substance IDs for a given CID.",
        "detailed_description": "Get all Substance IDs (SIDs) corresponding to a given CID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chemical-data-access",
            "chemical-database-query",
            "cheminformatics",
            "compound-id-lookup",
            "compound-identifier-mapping",
            "identifier-conversion",
            "metadata-extraction",
            "pubchem-api-integration",
            "pubchem-cid-to-sid",
            "pubchem-substance-ids",
            "sid-mapping",
            "substance-id-retrieval"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve SIDs by CID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "string",
                "description": "Compound CID."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string",
                    "description": "Compound CID."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": "2244"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6f8bc7a-9a1f-4e5f-b3eb-2d0a6e6a4a25",
        "name": "PubChem_get_aids_by_cid",
        "description": "Fetches PubChem assay IDs for a given compound CID.",
        "detailed_description": "Get all Assay IDs (AIDs) corresponding to a given CID.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "assay-id-fetcher",
            "bioassay-data",
            "bioinformatics",
            "chemical-identifier-lookup",
            "cheminformatics",
            "cid-to-aid",
            "compound-assay-mapping",
            "drug-discovery",
            "high-throughput-screening",
            "pubchem-assay-retrieval",
            "pubchem-pug-rest",
            "pubchem-query"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve all assay IDs corresponding to a given compound CID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "string",
                "description": "Compound CID."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string",
                    "description": "Compound CID."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": "2244"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b7e9b8a6-5f5d-4c32-9c5a-226b9ae1f0f1",
        "name": "PubChem_get_substances_by_name",
        "description": "Retrieve raw Substance records by name.",
        "detailed_description": "Retrieve raw Substance records by name.",
        "toolType": "API",
        "tags": [
            "chemical-database-search",
            "chemical-informatics",
            "chemical-substance-search",
            "cheminformatics",
            "compound-lookup",
            "json-record-output",
            "laboratory-chemical-identification",
            "name-based-substance-query",
            "pharmacology-research-tool",
            "pubchem-api-integration",
            "pubchem-substance-retrieval",
            "substance-record-fetch"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve raw Substance records by name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Substance name to search."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Substance name to search."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "PubChem_get_substance_by_sid",
        "description": "Retrieve a PubChem Substance object by its SID.",
        "detailed_description": "Retrieve a Substance object by its SID.",
        "toolType": "API",
        "tags": [
            "chemical-data-fetch",
            "chemical-informatics",
            "cheminformatics",
            "compound-information",
            "database-lookup",
            "molecular-substance-data",
            "pubchem-api-access",
            "pubchem-substance-retrieval",
            "sid-lookup",
            "small-molecule-data",
            "substance-id-query",
            "substance-object-fetch"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Substance object by SID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "sid": {
                "type": "string",
                "description": "Substance ID (SID)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "sid": {
                    "type": "string",
                    "description": "Substance ID (SID)."
                }
            },
            "required": [
                "sid"
            ]
        },
        "exampleInput": {
            "sid": "2244"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e163d867-84d3-4d4b-8d6a-12f3456789ab",
        "name": "PubChem_get_properties_single",
        "description": "Fetch a single property for matching compounds.",
        "detailed_description": "Fetch a single property for matching compounds.",
        "toolType": "API",
        "tags": [
            "chemical-data-query",
            "chemical-information-retrieval",
            "cheminformatics",
            "compound-lookup",
            "computational-chemistry",
            "fetch-compound-property",
            "identifier-based-search",
            "molecular-descriptor-retrieval",
            "property-extraction",
            "pubchem-api-integration",
            "pubchem-property-retrieval",
            "single-property-fetch",
            "structure-identifier-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch a single property for matching compounds."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "property": {
                "type": "string",
                "description": "Property name to retrieve."
            },
            "query": {
                "type": "string",
                "description": "Search query."
            },
            "namespace": {
                "type": "string",
                "description": "Identifier type (name,smiles,sdf,inchi,inchikey,formula)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "string",
                    "description": "Property name to retrieve."
                },
                "query": {
                    "type": "string",
                    "description": "Search query."
                },
                "namespace": {
                    "type": "string",
                    "description": "Identifier type (name,smiles,sdf,inchi,inchikey,formula)."
                }
            },
            "required": [
                "property",
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "property": "MolecularWeight",
            "query": "caffeine",
            "namespace": "name"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f2a1e3ab-9cde-4b5f-9c22-3d4a1e8b6cfa",
        "name": "PubChem_get_properties_multiple",
        "description": "Retrieve multiple properties for matching compounds.",
        "detailed_description": "Fetch multiple properties for matching compounds.",
        "toolType": "API",
        "tags": [
            "PubChem-API",
            "bulk-data-retrieval",
            "chemical-data-retrieval",
            "cheminformatics",
            "compound-properties",
            "compound-search",
            "computational-chemistry",
            "identifier-resolution",
            "molecular-property-extraction",
            "multiple-properties-fetch",
            "physicochemical-profiles",
            "structural-descriptors"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve multiple properties of compounds",
            "Query compounds using specified search term",
            "Specify data namespace for retrieval"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "properties": {
                "type": "array",
                "description": "List of property names to retrieve."
            },
            "query": {
                "type": "string",
                "description": ""
            },
            "namespace": {
                "type": "string",
                "description": ""
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property names to retrieve."
                },
                "query": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "required": [
                "properties",
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "properties": [
                "MolecularWeight",
                "CanonicalSMILES"
            ],
            "query": "aspirin",
            "namespace": "CID"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4c24bc4-6a66-4f66-92a5-7989fe1f3f5f",
        "name": "PubChem_get_synonyms_for_compound",
        "description": "Get synonyms for a compound by name.",
        "detailed_description": "Get synonyms for a compound by name.",
        "toolType": "API",
        "tags": [
            "PubChem-API",
            "chemical-nomenclature",
            "cheminformatics",
            "compound-identifiers",
            "compound-synonyms",
            "database-query",
            "identifier-resolution",
            "name-lookup",
            "nomenclature-standardization",
            "pubchem-integration",
            "small-molecule-search",
            "synonym-retrieval"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get synonyms for a given compound name."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Compound name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Compound name."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9b8c1a3-2d5a-4a7b-9e1d-0c8e5146f7a2",
        "name": "get_bokeh_info",
        "description": "Retrieve details about the Bokeh package, an interactive visualization library for modern web browsers.",
        "detailed_description": "Get information about the bokeh package. Interactive visualization library for modern web browsers",
        "toolType": "Scientific Software Package",
        "tags": [
            "bokeh-documentation",
            "bokeh-information",
            "data-visualization",
            "exploratory-data-analysis",
            "interactive-visualization",
            "library-documentation",
            "package-inspection",
            "package-metadata",
            "python-package-query",
            "software-documentation",
            "visualization-library",
            "web-browser-charts"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Bokeh",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the bokeh package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_altair_info",
        "description": "Retrieve information about the Altair package, a declarative statistical visualization library.",
        "detailed_description": "Get information about the altair package. Declarative statistical visualization library",
        "toolType": "Scientific Software Package",
        "tags": [
            "altair-info",
            "altair-metadata",
            "charting-library",
            "data-visualization",
            "declarative-graphics",
            "documentation-fetch",
            "metadata-retrieval",
            "package-documentation",
            "package-inspection",
            "python-viz",
            "statistical-visualization",
            "visualization-package"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Altair",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the altair package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6",
        "name": "get_holoviews_info",
        "description": "Retrieve information about the holoviews Python package for declarative data visualization.",
        "detailed_description": "Get information about the holoviews package. Declarative data visualization in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "data-visualization-library",
            "declarative-visualization",
            "dependency-inspection",
            "feature-summary",
            "holoviews-info",
            "interactive-visualization",
            "library-metadata",
            "package-documentation",
            "python-library-discovery",
            "python-package-info",
            "version-check"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "HoloViews",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the holoviews package",
            "Provide insights on declarative data visualization in Python"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_datashader_info",
        "description": "Fetches details of the datashader package for large-scale visualizations",
        "detailed_description": "Get information about the datashader package. Graphics pipeline system for creating meaningful visualizations of large datasets",
        "toolType": "Scientific Software Package",
        "tags": [
            "big-data-rendering",
            "data-viz-framework",
            "datashader-info",
            "datashader-package",
            "gpu-accelerated-computing",
            "high-performance-rendering",
            "interactive-visualization",
            "large-dataset-visualization",
            "metadata-retrieval",
            "package-introspection",
            "python-graphics-library",
            "spatial-data-rendering",
            "visualization-pipeline"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Datashader",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve datashader package information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d1f5f0a3-3c30-4a49-9e47-8b6b6fddb4b1",
        "name": "get_pyvis_info",
        "description": "Retrieve information on the pyvis package for network visualization.",
        "detailed_description": "Get information about the pyvis package. Python library for visualizing networks",
        "toolType": "Scientific Software Package",
        "tags": [
            "data-visualization",
            "dependency-analysis",
            "documentation-extraction",
            "graph-rendering",
            "graph-visualization",
            "interactive-network-graph",
            "library-metadata",
            "metadata-retrieval",
            "network-science",
            "network-visualization",
            "node-link-diagram",
            "package-documentation",
            "python-metadata-retrieval",
            "python-package-info",
            "software-discovery"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PyVis",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch information about the pyvis package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "07b3c91d-93e4-4a2a-bd0e-5e2154c229a1",
        "name": "get_cellpose_info",
        "description": "Provides comprehensive information about the Cellpose cell segmentation algorithm",
        "detailed_description": "Get comprehensive information about Cellpose \u0013 cell segmentation algorithm",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-quick-start",
            "api-documentation",
            "bioimage-analysis",
            "cell-segmentation-documentation",
            "cellpose-info",
            "deep-learning-segmentation",
            "image-processing-guide",
            "machine-learning-bioimaging",
            "microscopy-image-segmentation",
            "python-package-reference",
            "segmentation-algorithm-info",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Cellpose",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata including description, category, import name, popularity, and keywords",
            "Provide installation instructions for pip and conda",
            "Offer usage examples and quick start guide",
            "Supply documentation and repository URLs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f0484b6-8d13-4d5a-ae5b-3cfe0e543cd2",
        "name": "get_opencv_info",
        "description": "Retrieve detailed information about the OpenCV-Python computer vision library.",
        "detailed_description": "Get comprehensive information about OpenCV-Python \u2013 computer vision library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "computer-vision-library",
            "cv-toolkit",
            "dependency-information",
            "development-reference",
            "image-processing",
            "library-overview",
            "open-source-cv",
            "opencv-python",
            "package-inspection",
            "python-bindings",
            "quickstart-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "OpenCV-Python",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata",
            "Provide installation instructions",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0a1580c-9c31-4e2a-b830-b675bf3c1e97",
        "name": "get_mdanalysis_info",
        "description": "Get comprehensive information about MDAnalysis, a molecular dynamics trajectory analysis package",
        "detailed_description": "Get comprehensive information about MDAnalysis \u2013 molecular dynamics trajectory analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "biophysical-analysis",
            "computational-chemistry",
            "library-inspection",
            "md-simulation",
            "md-trajectory-analysis",
            "mdanalysis-info",
            "molecular-dynamics",
            "package-information",
            "python-package",
            "simulation-data",
            "software-metadata"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "MDAnalysis",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of MDAnalysis",
            "Retrieve installation instructions",
            "Provide usage examples",
            "Fetch documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about MDAnalysis"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about MDAnalysis"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "cb4d2f10-3c28-4e95-a24a-5f0b1b6e9a2c",
        "name": "get_deepxde_info",
        "description": "Fetch comprehensive details about DeepXDE, a PINN library for solving PDEs and inverse problems.",
        "detailed_description": "Get comprehensive information about DeepXDE \u2013 a library for physics-informed neural networks (PINNs) solving PDEs and inverse problems.",
        "toolType": "Scientific Software Package",
        "tags": [
            "autodifferentiation-toolkit",
            "deepxde-documentation",
            "deepxde-library",
            "inverse-problem-solving",
            "neural-pde-framework",
            "pde-solution",
            "physics-informed-neural-networks",
            "pinn-pde-solver",
            "python-machine-learning",
            "quickstart-guide",
            "scientific-computing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DeepXDE",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about the DeepXDE library",
            "Optionally include usage examples and a quick-start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8c1b8d5c-2f49-4e6e-9f0f-5d7734acbd9e",
        "name": "get_flowkit_info",
        "description": "Get comprehensive information about FlowKit \u2013 flow cytometry analysis toolkit",
        "detailed_description": "Get comprehensive information about FlowKit \u2013 flow cytometry analysis toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "cell-gating",
            "computational-biology",
            "cytometry-analysis",
            "fcs-data-processing",
            "flow-cytometry",
            "flowkit-documentation",
            "immunophenotyping",
            "package-metadata",
            "python-bioinformatics",
            "research-toolkit",
            "single-cell-data"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "FlowKit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of FlowKit",
            "Provide installation instructions for FlowKit",
            "Show usage examples of FlowKit",
            "Link to FlowKit documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FlowKit"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FlowKit"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f4a2e8-dc40-4a22-9b39-1ac9f3c07f52",
        "name": "get_cyvcf2_info",
        "description": "Provides comprehensive information and usage details for the cyvcf2 library.",
        "detailed_description": "Get comprehensive information about cyvcf2 \u2013 fast VCF/BCF file processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "bcf-processing",
            "computational-genomics",
            "cyvcf2-library",
            "fast-bcf-io",
            "fast-vcf-io",
            "genomic-variant-analysis",
            "package-documentation",
            "python-bioinformatics",
            "quickstart-guide",
            "sequencing-data-processing",
            "usage-examples",
            "variant-file-management",
            "vcf-parsing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cyvcf2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides library description and summary",
            "Returns installation commands for pip and conda",
            "Supplies usage examples and quick start guide",
            "Fetches metadata including popularity, keywords, documentation links, and repository URL",
            "Provides import information for the cyvcf2 package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7ae3ff0-4771-4b36-8ba9-7e1f9e17d97f",
        "name": "get_pandas_info",
        "description": "Get comprehensive information about pandas - powerful data structures and data analysis tools for Python",
        "detailed_description": "Get comprehensive information about pandas - powerful data structures and data analysis tools for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "analytics-library-reference",
            "data-structures-overview",
            "dataframe-attributes",
            "dataframe-introspection",
            "metadata-extraction",
            "pandas-documentation",
            "python-data-analysis",
            "python-library-info",
            "quick-start-guide",
            "series-data-structure",
            "tabular-data-inspection",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Pandas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide information about the pandas package",
            "Retrieve package description and metadata",
            "Include usage examples and quick start guide (optional)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9c741a-4b4f-4fca-9e7e-2b7efc113d1a",
        "name": "get_pdbfixer_info",
        "description": "Provides detailed information about PDBFixer, a protein structure preparation tool.",
        "detailed_description": "Get comprehensive information about PDBFixer \u2013 protein structure preparation tool",
        "toolType": "Scientific Software Package",
        "tags": [
            "macromolecular-modeling",
            "missing-residue-addition",
            "model-preparation",
            "molecular-simulation-prep",
            "pdb-file-processing",
            "pdbfixer-info",
            "protein-model-fixing",
            "protein-structure-preparation",
            "structural-bioinformatics",
            "structure-cleanup",
            "structure-refinement",
            "topology-generation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PDBFixer",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about PDBFixer",
            "Provide installation instructions for PDBFixer",
            "Outline usage examples of PDBFixer",
            "Link to PDBFixer documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PDBFixer"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PDBFixer"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a12bdc3e-4f6a-4d1b-8e9f-2c6a3b7d9e0f",
        "name": "get_scanpy_info",
        "description": "Provides detailed information about Scanpy, a scalable Python toolkit for single-cell analysis.",
        "detailed_description": "Get comprehensive information about Scanpy \u2013 scalable single-cell analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "anndata-integration",
            "bioinformatics-overview",
            "computational-biology",
            "package-info",
            "python-data-analysis",
            "quickstart-guide",
            "scRNA-seq-processing",
            "scalable-computing",
            "scanpy-documentation",
            "single-cell-analysis",
            "single-cell-omics",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Scanpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive Scanpy package information",
            "Include usage examples and quick start guide if requested",
            "Provide installation instructions",
            "List documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0256d23-4cd7-4b05-9e85-0d2c7bb029d8",
        "name": "get_cryosparc_tools_info",
        "description": "Retrieve information about cryosparc-tools for CryoSPARC cryo-EM processing.",
        "detailed_description": "Get comprehensive information about cryosparc-tools \u2013 interface to CryoSPARC cryo-EM processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-cryoem",
            "cryo-em-processing",
            "cryosparc-interface",
            "cryosparc-tools-info",
            "electron-microscopy",
            "info-retrieval",
            "package-management",
            "pipeline-configuration",
            "processing-workflow",
            "structural-biology",
            "tool-catalog",
            "tool-discovery"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "CryoSPARC-Tools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of cryosparc-tools",
            "Provide installation instructions",
            "Provide usage guidance",
            "Provide documentation reference"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about cryosparc-tools"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about cryosparc-tools"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4e5f6a7-b8c9-01d2-3e4f-567890abcdef",
        "name": "get_loompy_info",
        "description": "Retrieve information about loompy, an efficient storage solution for large omics datasets",
        "detailed_description": "Get comprehensive information about loompy \u2013 efficient storage for large omics datasets",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "data-organization",
            "file-format-specification",
            "hdf5-based-storage",
            "high-throughput-sequencing",
            "loom-file-format",
            "loompy-info",
            "metadata-retrieval",
            "omics-data-storage",
            "package-documentation",
            "python-package",
            "single-cell-omics",
            "workflow-integration"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "LoomPy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get overview of loompy",
            "Get installation instructions for loompy",
            "Get usage examples of loompy",
            "Get documentation link for loompy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about loompy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about loompy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c4a1e2b0-3fcb-4a28-a8df-123456789abc",
        "name": "get_structure_title_by_pdb_id",
        "description": "Retrieve the PDB entry's structure title.",
        "detailed_description": "Retrieve the structure title for a given PDB entry.",
        "toolType": "API",
        "tags": [
            "macromolecule-title",
            "molecular-structure-title",
            "pdb-id-query",
            "pdb-metadata",
            "pdb-structure-lookup",
            "pdb-title-retrieval",
            "protein-structure-title",
            "rcsb-pdb",
            "rcsb-structure-info",
            "structural-bioinformatics",
            "structure-metadata-access",
            "structure-title-fetch"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve structure title for a given PDB entry"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a31b267f-3f44-4b58-8f0e-7548b8f39a9e",
        "name": "get_polymer_entity_count_by_pdb_id",
        "description": "Retrieve the number of polymer entities in a PDB entry.",
        "detailed_description": "Get the number of distinct polymer entities (chains) in a structure.",
        "toolType": "API",
        "tags": [
            "biomolecular-assembly",
            "chain-count",
            "chain-enumeration",
            "entity-counting",
            "macromolecular-structure",
            "pdb-id-query",
            "pdb-structure-analysis",
            "polymer-entity-count",
            "rcsb-pdb-query",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides polymer entity count for a given PDB entry",
            "Accepts 4-character PDB ID as input"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "get_emdb_ids_by_pdb_id",
        "description": "Retrieve EMDB IDs associated with a given PDB entry.",
        "detailed_description": "Retrieve Electron Microscopy Data Bank (EMDB) identifiers linked to a PDB entry.",
        "toolType": "API",
        "tags": [
            "cryo-em-database",
            "data-bank-query",
            "database-integration",
            "electron-microscopy",
            "emdb-identifiers",
            "id-mapping",
            "macromolecular-structures",
            "pdb-crossreference",
            "pdb-emdb-mapping",
            "rcsb-pdb-api",
            "structural-biology",
            "structural-data-retrieval"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve EMDB identifiers linked to a given PDB entry."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1A2B"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d1b07157-5e28-405b-a637-8674fa3c1c72",
        "name": "get_uniprot_accession_by_entity_id",
        "description": "Retrieve UniProt accession numbers for a given polymer entity ID.",
        "detailed_description": "Fetch UniProt accession numbers associated with a specific polymer entity.",
        "toolType": "API",
        "tags": [
            "accession-retrieval",
            "biomolecular-annotation",
            "cross-reference-service",
            "database-crossref",
            "entity-id-mapping",
            "pdb-polymer-entity",
            "protein-database-query",
            "rcsb-pdb-integration",
            "sequence-identifier",
            "structural-bioinformatics",
            "uniprot-accession",
            "uniprot-mapping"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch UniProt accession numbers by polymer entity ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Polymer entity ID (e.g., '1A8M_1')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Polymer entity ID (e.g., '1A8M_1')",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "14a2c28f-b034-4e67-a2f5-d0fe6337a4a2",
        "name": "get_crystallization_ph_by_pdb_id",
        "description": "Fetch the pH used in crystallization for a given PDB entry.",
        "detailed_description": "Fetch the pH used during crystallization of the sample.",
        "toolType": "API",
        "tags": [
            "buffer-pH",
            "crystallization-conditions",
            "crystallization-ph",
            "experimental-parameters",
            "macromolecular-crystallography",
            "pdb-ph-retrieval",
            "ph-extraction",
            "ph-lookup",
            "protein-crystallization",
            "rcsb-pdb-metadata",
            "rcsb-pdb-query",
            "structural-bioinformatics",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch the pH used during crystallization of a PDB sample",
            "Retrieve the exptl_crystal_grow.pH field from RCSB"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "RCSB PDB ID of the structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "RCSB PDB ID of the structure",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_space_group_by_pdb_id",
        "description": "Retrieves the crystallographic space group of a structure from its PDB entry ID.",
        "detailed_description": "Get the crystallographic space group of the structure.",
        "toolType": "API",
        "tags": [
            "crystallographic-space-group",
            "lattice-symmetry",
            "macromolecular-structure",
            "pdb-id-query",
            "pdb-metadata",
            "protein-crystallography",
            "rcsb-pdb",
            "space-group-retrieval",
            "structural-biology",
            "structural-database-access",
            "symmetry-determination",
            "x-ray-crystallography"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Accepts a 4-character PDB ID as input",
            "Searches the RCSB database via rcsb_id",
            "Returns the symmetry.space_group_name_H_M field"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4HHB"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_protein_classification_by_pdb_id",
        "description": "Retrieve classification of a protein structure by PDB ID",
        "detailed_description": "Get the classification of the protein structure (e.g., transferase, oxidoreductase).",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "computational-biology",
            "ec-number",
            "enzyme-classification",
            "function-annotation",
            "pdb-annotation",
            "pdb-id-query",
            "protein-annotation",
            "protein-classification",
            "protein-function",
            "rcsb-pdb",
            "structural-classification"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get protein classification for a given PDB ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB ID of the entry"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB ID of the entry",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1HHP"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e28f4c37-6a5a-4d72-b439-2fabc3d445e6",
        "name": "get_structure_determination_software_by_pdb_id",
        "description": "Retrieve software used in structure determination by PDB entry.",
        "detailed_description": "Retrieve names of software used during structure determination.",
        "toolType": "API",
        "tags": [
            "cryo-em-pipeline",
            "experimental-method-annotation",
            "method-data-extraction",
            "nmr-spectroscopy-software",
            "pdb-id-query",
            "pdb-software-metadata",
            "protein-structure-methods",
            "rcsb-pdb-retrieval",
            "software-identification",
            "software-provenance",
            "structural-bioinformatics",
            "structure-determination-software",
            "x-ray-crystallography-tools"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve software names",
            "Retrieve software versions",
            "Retrieve software types"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "RCSB PDB entry ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "RCSB PDB entry ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4HHB"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f1e9d0c-0c34-4d40-9d3a-2f4b7e5a6c7d",
        "name": "get_refinement_resolution_by_pdb_id",
        "description": "Retrieve the reported resolution from X-ray structure refinement data.",
        "detailed_description": "Retrieve the reported resolution from refinement data for X-ray structures.",
        "toolType": "API",
        "tags": [
            "crystallographic-data",
            "experimental-structure-metrics",
            "macromolecular-structure",
            "model-quality-assessment",
            "pdb-id-query",
            "pdb-refinement-data",
            "rcsb-pdb",
            "refinement-resolution",
            "resolution-retrieval",
            "structural-biology",
            "structural-resolution",
            "x-ray-crystallography"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve the reported resolution for a given PDB entry",
            "Search X-ray refinement data by PDB ID",
            "Return the high-resolution limit field refine.ls_d_res_high"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB entry ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB entry ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_binding_affinity_by_pdb_id",
        "description": "Retrieve binding affinity constants (Kd, Ki, IC50) for ligands in a PDB entry.",
        "detailed_description": "Retrieve binding affinity constants (Kd, Ki, IC50) associated with ligands in a PDB entry.",
        "toolType": "API",
        "tags": [
            "binding-affinity",
            "biophysical-parameters",
            "computational-chemistry",
            "crystallographic-data-query",
            "drug-discovery-support",
            "kd-ki-ic50-retrieval",
            "ligand-binding-characterization",
            "molecular-interaction-metrics",
            "pdb-id-query",
            "protein-ligand-interaction",
            "rcsb-pdb-integration",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve binding affinity constants (Kd, Ki, IC50) for ligands in a given PDB entry",
            "Accepts a PDB ID as input",
            "Returns affinity value, unit, provenance code, and symbol"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "RCSB PDB ID (e.g., 1A8M)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "RCSB PDB ID (e.g., 1A8M)",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1A8M"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e1f0591-5ea5-4fcc-a68e-2c5a879077b4",
        "name": "get_ligand_smiles_by_chem_comp_id",
        "description": "Retrieve the SMILES string of a ligand by its chemical component ID.",
        "detailed_description": "Retrieve the SMILES chemical structure string for a given chemical component (ligand) ID.",
        "toolType": "API",
        "tags": [
            "chem-comp-id-lookup",
            "chemical-database-access",
            "chemical-identifier-query",
            "cheminformatics-tool",
            "computational-chemistry",
            "drug-discovery-support",
            "ligand-smiles-extraction",
            "ligand-structure-fetch",
            "molecular-modeling",
            "rcsb-pdb-integration",
            "smiles-retrieval",
            "structure-string-output",
            "virtual-screening-preparation"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve SMILES structure",
            "Fetch chemical structure by component ID",
            "Query RCSB chemical component data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chem_comp_id": {
                "type": "string",
                "description": "Chemical component ID (e.g., 'ATP')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chem_comp_id": {
                    "type": "string",
                    "description": "Chemical component ID (e.g., 'ATP')",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chem_comp_id": "ATP"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_core_refinement_statistics",
        "description": "Retrieve key refinement statistics for a PDB structure such as R-factors, occupancy, phase errors, and solvent model parameters.",
        "detailed_description": "Retrieve essential refinement statistics for a given PDB structure including R-factors, occupancy, phase errors, and solvent model parameters.",
        "toolType": "API",
        "tags": [
            "crystallographic-analysis",
            "crystallographic-parameters",
            "macromolecular-structure",
            "occupancy-estimation",
            "pdb-refinement",
            "pdb-structure",
            "phase-error-analysis",
            "protein-crystallography",
            "r-factors",
            "rcsb-pdb",
            "refinement-statistics",
            "solvent-model-parameters",
            "structural-bioinformatics",
            "x-ray-crystallography"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides R-factor values (R_work, R_free)",
            "Provides occupancy statistics (min, max)",
            "Provides overall phase error",
            "Provides solvent model parameters (bsol, ksol)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB entry ID (e.g., '1ABC')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB entry ID (e.g., '1ABC')",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_target_cofactor_info",
        "description": "Retrieve cofactor IDs, mechanisms of action, literature references, and resource metadata for a specified target",
        "detailed_description": "Retrieve essential cofactor information for a given target including cofactor IDs, mechanism of action, literature references, and resource metadata.",
        "toolType": "API",
        "tags": [
            "biochemical-interactions",
            "bioinformatics",
            "cofactor-id-retrieval",
            "cofactor-information",
            "drug-discovery-support",
            "enzymology",
            "literature-reference-extraction",
            "mechanism-of-action",
            "molecular-resources",
            "pdb-id-query",
            "protein-annotation",
            "rcsb-resource",
            "resource-metadata",
            "structural-biology",
            "target-cofactors"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve cofactor identifiers for a given target",
            "Provide mechanism of action details",
            "Fetch literature references (PubMed IDs and patent numbers)",
            "Return resource metadata (resource name and version)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "Target ID or entity identifier (e.g., UniProt ID or internal target id)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "Target ID or entity identifier (e.g., UniProt ID or internal target id)",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "P12345"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "71b1f693-8a9c-4c68-ac8d-412f53e3b925",
        "name": "get_chem_comp_audit_info",
        "description": "Retrieve audit history for a chemical component including action type, date, details, ordinal, and processing site.",
        "detailed_description": "Fetch audit history for a chemical component: action type, date, details, ordinal, and processing site.",
        "toolType": "API",
        "tags": [
            "audit-history-fetch",
            "change-log-extraction",
            "chem-comp-audit",
            "cheminformatics",
            "compliance-tracking",
            "data-curation",
            "metadata-fetching",
            "pdb-component-audit",
            "processing-site-info",
            "quality-assurance",
            "rcsb-pdb-api",
            "revision-tracking"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch audit history for a specified chemical component",
            "Retrieve action type, date, details, ordinal, and processing site fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "Chemical component ID to retrieve audit info for"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "Chemical component ID to retrieve audit info for",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "ATP"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa0a8b1c-5d9a-4cde-8f2e-2bfc4dedbc7f",
        "name": "get_chem_comp_charge_and_ambiguity",
        "description": "Gets a chemical component's formal charge and ambiguity flag.",
        "detailed_description": "Retrieve the formal charge and ambiguity flag of a chemical component.",
        "toolType": "API",
        "tags": [
            "ambiguity-annotation",
            "charge-ambiguity-flag",
            "chemical-component-charge",
            "chemoinformatics",
            "component-id-query",
            "crystallography-data-service",
            "formal-charge-retrieval",
            "ligand-characterization",
            "molecular-charge-analysis",
            "pdb-chemical-component",
            "rcsb-data-service",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query chemical component by PDB ID",
            "Retrieve formal charge of the component",
            "Retrieve ambiguity flag of the component"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "Chemical component ID to query charge and ambiguity"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "Chemical component ID to query charge and ambiguity",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "HEM"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "mcp_auto_loader_expert_feedback",
        "description": "Automatically discovers and loads tools from the Human Expert Feedback MCP Server for consulting on complex medical decisions.",
        "detailed_description": "Automatically discover and load all tools from Human Expert Feedback MCP Server. Provides tools for consulting human experts on complex medical decisions.",
        "toolType": "MCP",
        "tags": [
            "api-connector",
            "clinical-decision-support",
            "dynamic-tool-loading",
            "expert-consultation",
            "feedback-automation",
            "health-it-integration",
            "human-expert-feedback",
            "mcp-auto-loader",
            "mcp-server-integration",
            "medical-decision-assist",
            "medical-informatics",
            "remote-tool-discovery",
            "tool-discovery",
            "tool-loading"
        ],
        "category": "MCPAutoLoaderTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Automatically discover and load tools from the Human Expert Feedback MCP Server",
            "Enable consultation with human experts on complex medical decisions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_prefix": {
                "type": "string",
                "description": "Prefix for tool names loaded from the server"
            },
            "server_url": {
                "type": "string",
                "description": "URL of the MCP server to discover tools from"
            },
            "required_api_keys": {
                "type": "array",
                "description": "List of required API key environment variables"
            }
        },
        "inputSchema": {},
        "exampleInput": {
            "tool_prefix": "expert_",
            "server_url": "http://feedback-server.example.com/mcp",
            "required_api_keys": [
                "EXPERT_FEEDBACK_MCP_SERVER_URL"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f0d3f02-4d3b-4b2f-9af1-7ec95e8b2cde",
        "name": "mcp_auto_loader_txagent",
        "description": "Automatically discover and load tools from a TxAgent MCP Server, registering them or providing configurations.",
        "detailed_description": "Automatically discover and load all tools from TxAgent MCP Server. Can register discovered tools as individual ToolUniverse tools or provide tool configurations.",
        "toolType": "MCP",
        "tags": [
            "agent-framework-management",
            "api-service-discovery",
            "auto-tool-discovery",
            "configuration-generation",
            "dynamic-plugin-loader",
            "dynamic-tool-registration",
            "mcp-server-loader",
            "microservice-orchestration",
            "plugin-architecture",
            "remote-service-scanning",
            "tool-configurator",
            "tool-universe-registration",
            "txagent-integration"
        ],
        "category": "MCPAutoLoaderTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Discover tools from TxAgent MCP Server",
            "Load discovered tools automatically",
            "Register tools as individual ToolUniverse tools",
            "Provide configurations for discovered tools"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "server_url": {
                "type": "string",
                "description": "URL of the TxAgent MCP Server"
            }
        },
        "inputSchema": {},
        "exampleInput": {
            "server_url": "http://localhost:7000/mcp"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e5729fae-f104-4e7a-a12c-7d5a6e8f9b10",
        "name": "OpenTargets_get_disease_synonyms_by_efoId",
        "description": "Retrieves disease synonyms by EFO ID.",
        "detailed_description": "Retrieve disease synonyms by its EFO ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biomedical-research",
            "disease-aliases",
            "disease-ontology",
            "disease-synonym-retrieval",
            "disease-terminology",
            "efo-id-lookup",
            "efo-ontology",
            "ontology-query",
            "open-targets-api",
            "open-targets-integration",
            "phenotype-annotation",
            "semantic-expansion"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves disease synonyms by EFO ID",
            "Returns disease id and name",
            "Provides synonyms with relation and terms",
            "Supports GraphQL queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6c8e2a2-1f29-4db3-ae95-7d5f1208b7d4",
        "name": "OpenTargets_get_disease_description_by_efoId",
        "description": "Retrieve disease information by EFO ID, including name, description, cross references, obsolete terms, and therapeutic area status.",
        "detailed_description": "Retrieve disease description, name, database cros references, obsolete terms, and whether it's a therapeutic area, all using the specified efoId.",
        "toolType": "API",
        "tags": [
            "biomedical-data-query",
            "database-cross-references",
            "disease-description-retrieval",
            "disease-metadata-fetch",
            "efo-id-lookup",
            "experimental-factor-ontology",
            "json-response-format",
            "obsolete-term-detection",
            "ontology-based-disease-info",
            "open-targets-api-integration",
            "target-discovery-support",
            "therapeutic-area-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease name",
            "Retrieve disease description",
            "Retrieve database cross references",
            "Retrieve obsolete terms",
            "Determine if disease is a therapeutic area"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a53b7f84-2e5a-4d8a-b7c1-f19e2c6d8a9b",
        "name": "OpenTargets_get_disease_therapeutic_areas_by_efoId",
        "description": "Get therapeutic areas for a disease using its EFO ID.",
        "detailed_description": "Retrieve the therapeutic areas associated with a specific disease efoId.",
        "toolType": "API",
        "tags": [
            "biomedical-ontology",
            "disease-classification",
            "disease-ontology-mapping",
            "disease-therapeutic-areas",
            "drug-discovery-support",
            "efo-based-annotation",
            "efo-id-query",
            "ontology-based-retrieval",
            "open-targets-api",
            "precision-medicine-research",
            "target-discovery-tool",
            "therapeutic-area-mapping",
            "translational-medicine-data"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease therapeutic areas by EFO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4c1a7fa2-3dfe-4bfc-bba1-9c2898bc64c1",
        "name": "OpenTargets_get_drug_adverse_events_by_chemblId",
        "description": "Retrieve significant adverse events for a given drug by its ChEMBL ID.",
        "detailed_description": "Retrieve significant adverse events reported for a specific drug chemblId.",
        "toolType": "API",
        "tags": [
            "adverse-event-retrieval",
            "biomedical-data-access",
            "chembl-id-query",
            "drug-safety-analysis",
            "drug-toxicity-reporting",
            "open-targets-api",
            "pagination-support",
            "pharmacoepidemiology",
            "pharmacovigilance-data",
            "safety-signal-access",
            "side-effect-data",
            "translational-medicine"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug adverse events by ChEMBL ID",
            "Support GraphQL queries",
            "Paginate results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            },
            "page": {
                "type": "object",
                "description": "Pagination settings with index and size."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                },
                "page": {
                    "type": "object",
                    "properties": {
                        "index": {
                            "type": "integer",
                            "description": "Index of the page to fetch, starting from 0.",
                            "required": true
                        },
                        "size": {
                            "type": "integer",
                            "description": "Number of entries per page.",
                            "required": true
                        }
                    },
                    "description": "Pagination settings.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25",
            "page": {
                "index": 0,
                "size": 10
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6a8b1ad-4f1e-4bdb-9f1a-4c5a76e4ddc2",
        "name": "OpenTargets_get_known_drugs_by_drug_chemblId",
        "description": "Retrieve known drugs and associated information for a given ChEMBL ID.",
        "detailed_description": "Get a list of known drugs and associated information using the specified chemblId.",
        "toolType": "API",
        "tags": [
            "chembl-id-query",
            "chemoinformatics",
            "compound-data-retrieval",
            "drug-database-query",
            "drug-discovery-support",
            "drug-information-extraction",
            "drug-target-association",
            "known-drug-retrieval",
            "open-targets-api",
            "pharmacology-database-access",
            "precision-medicine-data",
            "small-molecule-profiling",
            "therapeutic-compound-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve a list of known drugs for a given ChEMBL ID",
            "Provide detailed information such as drug ID, name, status, mechanism of action, targets, and related diseases"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9c42a1-8a72-4e56-9fad-3e9d2c1b5a6f",
        "name": "OpenTargets_get_parent_child_molecules_by_drug_chembl_ID",
        "description": "Retrieve parent and child molecules for a given drug by ChEMBL ID.",
        "detailed_description": "Get parent and child molecules of specified drug chemblId.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chembl-id-query",
            "cheminformatics",
            "data-retrieval",
            "drug-development",
            "drug-ontology",
            "drug-relationship-mapping",
            "molecule-hierarchy",
            "open-targets-api",
            "parent-child-molecules",
            "pharmacology",
            "small-molecule-data"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Accepts a ChEMBL ID as input",
            "Fetches parent molecule information",
            "Fetches child molecule information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8c3fa0f-5b1e-4f79-8f10-403a9d8a6c4d",
        "name": "OpenTargets_get_approved_indications_by_drug_chemblId",
        "description": "Retrieve detailed drug information, including approved indications, via a ChEMBL ID.",
        "detailed_description": "Retrieve detailed information about multiple drugs using a list of ChEMBL IDs.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "approved-indications-retrieval",
            "batch-drug-query",
            "chembl-id-lookup",
            "cheminformatics",
            "drug-discovery",
            "drug-indication-mapping",
            "json-response",
            "open-targets-api",
            "pharmacology",
            "target-validation",
            "translational-medicine"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed information about drugs using a ChEMBL ID",
            "Obtain approved indications for a drug"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL1234567"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7e4a9f23-8c5d-4b1b-9e2a-9f4e86d4a123",
        "name": "OpenTargets_get_drug_description_by_chemblId",
        "description": "Retrieve drug information by ChEMBL ID, including name, first approval year, type, cross references, and maximum clinical trial phase.",
        "detailed_description": "Get drug name, year of first approval, type, cross references, and max clinical trial phase based on specified chemblId.",
        "toolType": "API",
        "tags": [
            "approval-history",
            "chembl-id-lookup",
            "cheminformatics",
            "clinical-trial-phase",
            "cross-reference-extraction",
            "drug-annotation",
            "drug-description-retrieval",
            "drug-discovery",
            "drug-type-classification",
            "fetch-drug-metadata",
            "json-output",
            "open-targets-integration",
            "pharmacology-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug ID and name",
            "Fetch year of first approval",
            "Get drug type",
            "List cross references",
            "Obtain maximum clinical trial phase"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f8c1a9-34b2-4d5f-9a1c-5e8b2f7d4c90",
        "name": "OpenTargets_get_drug_synonyms_by_chemblId",
        "description": "Get synonyms for a drug using its ChEMBL ID.",
        "detailed_description": "Retrieve the synonyms associated with a specific drug chemblId.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "chembl-id-query",
            "chemical-entity-mapping",
            "cheminformatics",
            "data-integration",
            "drug-database-lookup",
            "drug-synonyms-retrieval",
            "identifier-resolution",
            "open-targets-api",
            "pharmacological-terminology",
            "synonym-database-access",
            "therapeutic-agent-synonyms"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve synonyms for a given ChEMBL ID",
            "Returns drug id, name, and synonyms",
            "GraphQL query support"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b9a9c4f-5d3e-4e4a-a9c3-1d2f3a4b5c6d",
        "name": "OpenTargets_get_drug_trade_names_by_chemblId",
        "description": "Retrieve trade names for a specific drug by its ChEMBL ID.",
        "detailed_description": "Retrieve the trade names associated with a specific drug chemblId.",
        "toolType": "API",
        "tags": [
            "biomedical-informatics",
            "brand-name-lookup",
            "chembl-id-mapping",
            "chembl-id-query",
            "chembl-integration",
            "drug-identifier-conversion",
            "drug-information-retrieval",
            "drug-nomenclature",
            "drug-trade-name-lookup",
            "open-targets-api",
            "pharmacology-data-retrieval",
            "trade-name-retrieval"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves trade names for a drug by its ChEMBL ID",
            "Fetches drug ID",
            "Fetches drug name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8d8a4f5-9c5a-4f7f-b512-3fd5e25e6d3b",
        "name": "OpenTargets_get_drug_approval_status_by_chemblId",
        "description": "Get drug approval status by ChEMBL ID.",
        "detailed_description": "Retrieve the approval status of a specific drug chemblId.",
        "toolType": "API",
        "tags": [
            "chembl-database-query",
            "chembl-id-lookup",
            "cheminformatics",
            "clinical-approval-status",
            "drug-approval-status",
            "drug-development",
            "drug-discovery",
            "drug-licensing-information",
            "json-data-retrieval",
            "open-targets-api",
            "regulatory-approval-status",
            "regulatory-intelligence",
            "restful-api"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve approval status for a drug by ChEMBL ID",
            "Fetch drug ID and name from OpenTarget GraphQL API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL1234"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6fbac5a-3d7c-4e44-9f75-3e1d2a9b8c40",
        "name": "OpenTargets_get_chemical_probes_by_target_ensemblID",
        "description": "Retrieve chemical probes for a target by Ensembl ID.",
        "detailed_description": "Retrieve chemical probes associated with a specific target using its ensemblID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chemical-probe-discovery",
            "chemical-probe-retrieval",
            "cheminformatics",
            "drug-discovery",
            "ensemblid-lookup",
            "ligand-profiling",
            "molecular-probe-discovery",
            "open-targets-api",
            "pharmacology",
            "protein-target-analysis",
            "small-molecule-probes",
            "target-chemical-probes"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve chemical probes by target Ensembl ID",
            "Provide probe details including id, control, drugId, mechanism of action, quality metrics, origin, scores, and URLs",
            "Query data via GraphQL"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target for which to retrieve chemical probes."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target for which to retrieve chemical probes.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7c3b8a2-4f58-4d89-ae8f-2d4c5072b6a0",
        "name": "OpenTargets_drug_pharmacogenomics_data",
        "description": "Fetch pharmacogenomics data for a drug, including evidence levels and genotype annotations.",
        "detailed_description": "Retrieve pharmacogenomics data for a specific drug, including evidence levels and genotype annotations.",
        "toolType": "API",
        "tags": [
            "chembl-id-query",
            "clinical-pharmacology",
            "drug-genotype-annotation",
            "drug-response-biomarkers",
            "evidence-levels",
            "genomic-biomarkers",
            "open-targets-integration",
            "personalized-therapy",
            "pharmacogenetic-profiling",
            "pharmacogenomics-data",
            "precision-medicine",
            "variant-annotation"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pharmacogenomics data for a drug",
            "Include evidence levels",
            "Provide genotype annotations",
            "Support pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            },
            "page": {
                "type": "object",
                "description": "Pagination options."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                },
                "page": {
                    "type": "object",
                    "description": "Pagination options.",
                    "properties": {
                        "index": {
                            "type": "integer",
                            "description": "Pagination index.",
                            "required": true
                        },
                        "size": {
                            "type": "integer",
                            "description": "Number of records to fetch per page.",
                            "required": true
                        }
                    },
                    "required": false
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL123",
            "page": {
                "index": 1,
                "size": 20
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5f8d04b2-5d59-4cfa-8b94-3d9c3130b1a8",
        "name": "OpenTargets_get_associated_drugs_by_target_ensemblID",
        "description": "Retrieve drugs linked to a target Ensembl ID, including trial phase and mechanism of action.",
        "detailed_description": "Get known drugs and information (e.g. id, name, MoA) associated with a specific target ensemblID, including clinical trial phase and mechanism of action of the drugs.",
        "toolType": "API",
        "tags": [
            "clinical-trial-phase",
            "cursor-based-pagination",
            "drug-discovery",
            "drug-information",
            "drug-target-association",
            "ensembl-id-query",
            "genomic-identifier",
            "mechanism-of-action",
            "open-targets-api",
            "pharmacogenomics",
            "pharmacology-data-retrieval",
            "target-based-drug-search",
            "therapeutic-targets"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve known drugs associated with a target Ensembl ID",
            "Include drug details such as id, name, trade names, and approval status",
            "Provide clinical trial phase information",
            "Report mechanism of action of the drugs",
            "Support pagination via cursor and size parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            },
            "size": {
                "type": "integer",
                "description": "Number of entries to fetch."
            },
            "cursor": {
                "type": "string",
                "description": "Cursor for pagination."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of entries to fetch.",
                    "required": true
                },
                "cursor": {
                    "type": "string",
                    "description": "Cursor for pagination.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618",
            "size": 10,
            "cursor": null
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2c130cc-48b6-4f03-a67c-3b78c327e89e",
        "name": "OpenTargets_get_associated_diseases_by_drug_chemblId",
        "description": "Get diseases linked to a drug by its ChEMBL ID using clinical trial and post-market data.",
        "detailed_description": "Retrieve the list of diseases associated with a specific drug chemblId based on clinical trial data or post-marketed drugs.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biomedical-data-retrieval",
            "chembl-id-lookup",
            "cheminformatics",
            "clinical-trial-data-integration",
            "drug-disease-association",
            "drug-indication-mapping",
            "drug-repurposing",
            "open-targets",
            "pharmacovigilance",
            "post-market-surveillance",
            "therapeutic-target-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch diseases linked to a drug by ChEMBL ID",
            "Retrieve disease count and details",
            "Supports GraphQL queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "OpenTargets_get_associated_targets_by_drug_chemblId",
        "description": "Get targets associated with a drug by its ChEMBL ID.",
        "detailed_description": "Retrieve the list of targets linked to a specific drug chemblId based on its mechanism of action.",
        "toolType": "API",
        "tags": [
            "bioinformatics-annotation",
            "chemblid-query",
            "cheminformatics",
            "drug-target-discovery",
            "drug-target-identification",
            "drug-target-mapping",
            "mechanism-of-action-retrieval",
            "molecular-pharmacology",
            "open-targets-integration",
            "pharmacology-data",
            "small-molecule-targets",
            "therapeutic-target-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve linked targets for a given drug",
            "Fetch targets by ChEMBL ID",
            "Provide target count and details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3b3c02d-442f-4a6f-ac37-4e3e443d00b5",
        "name": "FDA_get_drug_names_by_application_number_NDC_number",
        "description": "Retrieve drug names given an FDA application or NDC number.",
        "detailed_description": "Retrieve drug names based on the specified FDA application number or National Drug Code (NDC) number.",
        "toolType": "API",
        "tags": [
            "application-number-query",
            "drug-database-api",
            "drug-name-retrieval",
            "fda-application-lookup",
            "fda-label-database",
            "healthcare-data-retrieval",
            "ndc-code-lookup",
            "ndc-number-query",
            "pagination-support",
            "pharmaceutical-product-search",
            "pharmacovigilance-data-access",
            "regulatory-drug-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug data by FDA application number, manufacturer name, or NDC code",
            "Return brand and generic drug names",
            "Support pagination via 'limit' and 'skip' parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "application_manufacturer_or_NDC_info": {
                "type": "string",
                "description": "FDA application, manufacturer, or NDC number info"
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "application_manufacturer_or_NDC_info": {
                    "type": "string",
                    "description": "FDA application, manufacturer, or NDC number info",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "application_manufacturer_or_NDC_info": "ANDA123456",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3a8e0f2-7f0c-4e94-82e0-0f0d302b9c25",
        "name": "FDA_get_drug_name_by_adverse_reaction",
        "description": "Retrieve drug names associated with specific adverse reactions. Note: limited predefined drug list; not comprehensive.",
        "detailed_description": "Retrieve the drug name based on specific adverse reactions reported. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "adverse-event-reporting",
            "adverse-reaction-search",
            "drug-name-retrieval",
            "drug-safety-analysis",
            "fda-adverse-events",
            "fdadruglabel-api",
            "json-api-pagination",
            "medical-informatics",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "safety-monitoring",
            "side-effect-database",
            "string-input-output"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by adverse reaction",
            "Limit number of records returned",
            "Skip a number of records",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "adverse_reaction": {
                "type": "string",
                "description": "The adverse reaction to search for."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "adverse_reaction": {
                    "type": "string",
                    "description": "The adverse reaction to search for.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "adverse_reaction": "headache",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5b4a8e3-6f10-4a2d-b723-123456789abc",
        "name": "FDA_get_adverse_reactions_by_drug_name",
        "description": "Retrieve adverse reactions for a specified drug name via FDA's database.",
        "detailed_description": "Retrieve adverse reactions information based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-reaction-retrieval",
            "clinical-safety-query",
            "drug-adverse-event-reporting",
            "drug-name-filtering",
            "fda-api-integration",
            "fda-drug-safety",
            "label-information-retrieval",
            "medication-risk-assessment",
            "paginated-json-results",
            "pharmacovigilance-api",
            "real-world-adverse-events",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve adverse reactions information by drug name",
            "Support pagination via limit",
            "Support pagination via skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b7d7a25b-247c-4f5c-9c75-3ea12e6954d8",
        "name": "FDA_get_drug_names_by_alarm",
        "description": "Retrieve drug names associated with specified adverse reaction alarms; results are limited to a predefined subset.",
        "detailed_description": "Retrieve drug names based on the presence of specific alarms, which are related to adverse reaction events. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "adverse-event-alarm-search",
            "adverse-reaction-lookup",
            "alarm-driven-search",
            "alarm-type-filtering",
            "drug-name-retrieval",
            "drug-safety-surveillance",
            "fda-druglabel-category",
            "indication-based-query",
            "json-response-format",
            "paginated-data-access",
            "pharmacovigilance",
            "safety-signal-detection"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on specific alarm types",
            "Filter by drug indication",
            "Supports pagination with limit and skip",
            "Returns brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "alarm_type": {
                "type": "string",
                "description": "The type of alarm to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "alarm_type": {
                    "type": "string",
                    "description": "The type of alarm to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "alarm_type": "hepatotoxicity",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0b7f8a4-5c9a-4d2e-b5f3-1b2d3c4e5f6a",
        "name": "FDA_get_alarms_by_drug_name",
        "description": "Retrieve alarms for a specified drug name.",
        "detailed_description": "Retrieve alarms based on the specified drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-alarms",
            "drug-name-search",
            "drug-safety-alerts",
            "fda-alarm-retrieval",
            "fda-open-data-api",
            "healthcare-regulatory-affairs",
            "json-api-query",
            "pagination-support",
            "pharma-safety-reports",
            "pharmacovigilance-data",
            "post-marketing-surveillance",
            "regulatory-data-query",
            "safety-monitoring"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve alarms for a given drug name",
            "Support limiting the number of records returned",
            "Support skipping a number of records for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2c2a2a6-0b4a-4e55-9f5b-c6b3b40a9e95",
        "name": "FDA_get_drug_names_by_animal_pharmacology_info",
        "description": "Retrieve drug names based on animal pharmacology information.",
        "detailed_description": "Retrieve drug names based on animal pharmacology and toxicology information. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "animal-pharmacology",
            "drug-name-retrieval",
            "fda-database-query",
            "fda-drug-label",
            "indication-based-search",
            "integer-parameter",
            "limited-results",
            "pagination-offset",
            "pharmaceutical-development",
            "preclinical-research",
            "string-parameter",
            "toxicology-data",
            "veterinary-pharmacology"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names using animal pharmacology and toxicology information",
            "Filter results by indication",
            "Support pagination with limit and skip parameters",
            "Return brand and generic names of drugs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pharmacology_info": {
                "type": "string",
                "description": "Information from studies of the drug in animals."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pharmacology_info": {
                    "type": "string",
                    "description": "Information from studies of the drug in animals.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pharmacology_info": "Reduces inflammation in rodent lung models",
            "indication": "Asthma",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fd8b7b6e-94a0-4a06-9c64-1f8b4fc8b3d9",
        "name": "FDA_get_animal_pharmacology_info_by_drug_name",
        "description": "Retrieve animal pharmacology and toxicology information by drug name.",
        "detailed_description": "Retrieve animal pharmacology and toxicology information based on drug names.",
        "toolType": "API",
        "tags": [
            "animal-pharmacology-data",
            "animal-toxicology-info",
            "drug-development-research",
            "drug-name-query",
            "drug-safety-profiles",
            "fda-animal-studies",
            "fda-data-retrieval",
            "in-vivo-pharmacology",
            "paginated-api-results",
            "pharmacological-profiles",
            "preclinical-toxicology",
            "regulatory-toxicology"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve animal pharmacology and toxicology information by drug name",
            "Supports limiting and skipping records for pagination",
            "Searches using brand or generic drug names",
            "Returns animal pharmacology and/or toxicology details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a6d9c33-7f8a-4e11-9e42-5bbfd00b7670",
        "name": "FDA_get_drug_name_by_info_on_conditions_for_doctor_consultation",
        "description": "Retrieve drug names requiring doctor consultation based on patient conditions and symptoms; returns a limited predefined list.",
        "detailed_description": "Retrieve the drug names that require asking a doctor before use due to a patient's specific conditions and symptoms.  Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "condition-based-recommendations",
            "contraindication-check",
            "doctor-consultation-alerts",
            "drug-name-retrieval",
            "fda-drug-safety",
            "fda-label-lookup",
            "medication-precaution",
            "pagination-limit-skip",
            "patient-condition-check",
            "pharmacovigilance",
            "prescribing-guidance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drugs requiring doctor consultation by medical condition",
            "Return openfda brand and generic drug names",
            "Support limit and skip parameters for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "condition": {
                "type": "string",
                "description": "The condition or symptom that requires consulting a doctor."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "The condition or symptom that requires consulting a doctor.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "condition": "hypertension",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8a1d5-3f16-4f60-9c2e-1234567890ab",
        "name": "FDA_get_info_on_conditions_for_doctor_consultation_by_drug_name",
        "description": "Retrieve when a doctor should be consulted before using a specific drug.",
        "detailed_description": "Get information about when a doctor should be consulted before using a specific drug.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "consultation-preconditions",
            "doctor-consultation-guidelines",
            "drug-safety-consultation",
            "fda-drug-label",
            "integer-parameter",
            "medication-guidelines",
            "paginated-output",
            "patient-education",
            "pharmacovigilance",
            "premedication-checklist",
            "regulatory-affairs",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve consultation recommendations based on drug name search"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Ibuprofen",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c6a4d6e8-4f12-4d9e-9a8c-ec3b2e2acb8d",
        "name": "FDA_get_drug_names_by_consulting_doctor_pharmacist_info",
        "description": "Retrieve a limited list of drug names when consultation with a doctor or pharmacist is advised for potential interactions.",
        "detailed_description": "Retrieve drug names based on information about when a doctor or pharmacist should be consulted regarding drug interactions. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "doctor-consultation",
            "drug-interaction-query",
            "drug-name-retrieval",
            "fda-drug-label",
            "healthcare-decision-support",
            "indication-filter",
            "interaction-warning",
            "json-api-endpoint",
            "medication-safety",
            "pagination-parameters",
            "pharmacist-consultation",
            "pharmacovigilance",
            "prescription-guidance",
            "string-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on consultation information",
            "Optional filtering by drug indication",
            "Supports pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "interaction_info": {
                "type": "string",
                "description": "Information about when a doctor or pharmacist should be consulted regarding drug interactions."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "interaction_info": {
                    "type": "string",
                    "description": "Information about when a doctor or pharmacist should be consulted regarding drug interactions.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "interaction_info": "Consult a doctor if you experience severe dizziness",
            "indication": "analgesic",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-5678-90ab-cdef-1234567890ab",
        "name": "FDA_get_info_on_consulting_doctor_pharmacist_by_drug_name",
        "description": "Provides guidelines on consulting a doctor or pharmacist about drug interactions for a given drug.",
        "detailed_description": "Get information about when a doctor or pharmacist should be consulted regarding drug interactions for a specific drug.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "doctor-pharmacist-consultation",
            "drug-advisory-service",
            "drug-interaction-guidance",
            "drug-name-query",
            "fda-drug-label-api",
            "healthcare-consultation-alert",
            "medication-safety-information",
            "patient-education-resource",
            "pharmacology-reference",
            "regulatory-information",
            "structured-data-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve consultation guidelines for drug interactions",
            "Search by drug name across brand and generic names",
            "Support result pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f47bb5-9c27-4abc-8c7d-1e2f3a456789",
        "name": "FDA_get_drug_names_by_assembly_installation_info",
        "description": "Retrieve a limited list of drug names based on assembly or installation instructions.",
        "detailed_description": "Retrieve drug names based on assembly or installation instructions. Warning: This tool only outputs a predefined limited number of drug names and does not cover all possible drugs. Use with caution.",
        "toolType": "API",
        "tags": [
            "assembly-instruction-search",
            "database-paginated-query",
            "drug-indexing",
            "drug-label-information",
            "fda-drug-name-retrieval",
            "fda-label-database-access",
            "indication-based-filter",
            "installation-info-query",
            "limit-skip-pagination",
            "medication-discovery-assist",
            "predefined-drug-list",
            "regulatory-compliance-data"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on assembly or installation instructions",
            "Filter results by drug indication",
            "Control pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "field_info": {
                "type": "string",
                "description": "Information related to assembly or installation instructions."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "field_info": {
                    "type": "string",
                    "description": "Information related to assembly or installation instructions.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "field_info": "Use 5 screws to assemble the device as shown",
            "indication": "Pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f1c2e7-5d6b-4c8e-a4b5-2e3d4f6a7b8c",
        "name": "FDA_get_assembly_installation_info_by_drug_name",
        "description": "Retrieve assembly or installation instructions for a specified drug",
        "detailed_description": "Retrieve assembly or installation instructions based on drug names.",
        "toolType": "API",
        "tags": [
            "administration-guidelines",
            "api-pagination",
            "assembly-instructions-extraction",
            "compliance-documentation",
            "drug-instruction-retrieval",
            "drug-name-lookup",
            "fda-api-endpoint",
            "fda-drug-label",
            "healthcare-informatics",
            "installation-guidelines-access",
            "medication-packaging-info",
            "pharmaceutical-regulatory-data",
            "pharmacology",
            "text-data-extraction"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for assembly or installation instructions by drug name",
            "Supports pagination through limit and skip parameters",
            "Searches both brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9b8d4e-0cde-4e7b-9b17-2ef1a6d4ecf2",
        "name": "FDA_get_drug_names_by_boxed_warning",
        "description": "Retrieve FDA drug names based on specified boxed warnings.",
        "detailed_description": "Retrieve drug names that have specific boxed warnings and adverse effects.",
        "toolType": "API",
        "tags": [
            "adverse-drug-reactions",
            "black-box-warning",
            "boxed-warning-search",
            "drug-adverse-effects",
            "drug-indication-filter",
            "drug-label-database",
            "drug-safety-alerts",
            "fda-drug-labeling",
            "fda-label-api",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "regulatory-affairs",
            "warning-text-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search FDA drug labels by boxed warning text",
            "Filter results by drug indication",
            "Supports pagination with limit and skip parameters",
            "Retrieve brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "warning_text": {
                "type": "string",
                "description": "The text of the boxed warning to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "warning_text": {
                    "type": "string",
                    "description": "The text of the boxed warning to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "warning_text": "Risk of fetal harm",
            "indication": "Diabetes",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3d9b2c0-8c34-4e2a-9bb3-6d91f343d1c8",
        "name": "FDA_get_boxed_warning_info_by_drug_name",
        "description": "Fetch boxed warning and adverse effect details for a drug by name.",
        "detailed_description": "Retrieve boxed warning and adverse effects information for a specific drug.",
        "toolType": "API",
        "tags": [
            "adverse-effect-retrieval",
            "adverse-event-reporting",
            "drug-name-query",
            "drug-safety-alerts",
            "fda-boxed-warning",
            "fda-label-database",
            "medication-precautions",
            "medication-safety",
            "pharmaceutical-compliance",
            "pharmacovigilance-data",
            "public-health-informatics",
            "regulatory-science"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve boxed warning information for a given drug",
            "Retrieve adverse effects information for a given drug",
            "Allow pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a12f8b32-4d2e-4c6f-9d77-2b7c9e1d0f02",
        "name": "FDA_get_drug_name_by_calibration_instructions",
        "description": "Retrieve drug name from calibration instructions.",
        "detailed_description": "Retrieve the drug name based on the calibration instructions provided.",
        "toolType": "API",
        "tags": [
            "calibration-instructions-search",
            "calibration-protocol-matching",
            "dosage-calibration-mapping",
            "drug-identification",
            "drug-label-extraction",
            "drug-name-retrieval",
            "fdadruglabel-query",
            "limit-skip-filtering",
            "medication-naming",
            "pagination-parameters",
            "pharmacological-data-access",
            "regulatory-drug-info",
            "search-by-calibration-text",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names using calibration instructions",
            "Return brand and generic drug names",
            "Support limit and skip pagination parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "calibration_instructions": {
                "type": "string",
                "description": "Instructions used for calibration of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "calibration_instructions": {
                    "type": "string",
                    "description": "Instructions used for calibration of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "calibration_instructions": "Use spectrophotometry to calibrate dosage",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c6e99fbb-3f8e-4d35-9b4a-5efc7b2b9a66",
        "name": "FDA_get_calibration_instructions_by_drug_name",
        "description": "Retrieve calibration instructions for a specified drug.",
        "detailed_description": "Retrieve calibration instructions based on the specified drug name.",
        "toolType": "API",
        "tags": [
            "analytical-method-calibration",
            "calibration-protocol-retrieval",
            "drug-calibration-guidelines",
            "drug-name-query",
            "fda-calibration-instructions",
            "fda-drug-label-data",
            "instrument-calibration",
            "lab-instrument-calibration",
            "method-validation",
            "pharmaceutical-calibration",
            "quality-control-procedures",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve calibration instructions by drug name",
            "Support limiting and skipping of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2b6f3ae-ffee-4c21-9e19-5b80b7259d12",
        "name": "get_tiledbsoma_info",
        "description": "Fetch information about TileDB-SOMA for single-cell data storage and usage",
        "detailed_description": "Get comprehensive information about TileDB-SOMA \u2013 single-cell data storage with TileDB",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-based-storage",
            "bioinformatics-package",
            "computational-biology",
            "data-discovery",
            "high-dimensional-data",
            "metadata-retrieval",
            "omics-data-management",
            "package-documentation",
            "schema-inspection",
            "single-cell-data-storage",
            "tiledb-array",
            "tiledb-soma",
            "tiledb-soma-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "TileDB-SOMA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of TileDB-SOMA",
            "Provide installation instructions",
            "Describe usage examples",
            "Fetch documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about TileDB-SOMA"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about TileDB-SOMA"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f5d81cf-40ae-4cd0-9b41-1e3692895a11",
        "name": "get_scvi_tools_info",
        "description": "Retrieve metadata and details about the scvi-tools software package for probabilistic analysis of single-cell omics data",
        "detailed_description": "Get information about the scvi-tools package. Deep probabilistic analysis of single-cell omics data",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "bioinformatics-framework",
            "computational-genomics",
            "deep-learning-biology",
            "metadata-retrieval",
            "package-metadata",
            "probabilistic-modeling",
            "python-package-inspection",
            "scvi-tools-info",
            "single-cell-analysis",
            "single-cell-omics",
            "variational-inference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scvi-tools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the scvi-tools package",
            "Provide details on probabilistic analysis of single-cell omics data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8e8dcd-1d54-4fca-8b3f-2adf7231a674",
        "name": "get_cellrank_info",
        "description": "Provides information about the cellrank package for trajectory inference and cell fate mapping in single-cell data",
        "detailed_description": "Get information about the cellrank package. Trajectory inference and cell fate mapping in single-cell data",
        "toolType": "Scientific Software Package",
        "tags": [
            "cell-fate-mapping",
            "cell-state-dynamics",
            "cellrank-package",
            "computational-biology",
            "documentation-retrieval",
            "lineage-tracing",
            "package-information",
            "pseudotime-analysis",
            "python-bioinformatics",
            "scrna-seq",
            "single-cell-analysis",
            "stem-cell-differentiation",
            "trajectory-inference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "CellRank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the cellrank package",
            "Provide details on trajectory inference and cell fate mapping in single-cell data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8f0a2-1bd4-4a4f-8a2f-3a2b3c4d5e6f",
        "name": "get_velocyto_info",
        "description": "Get information about the velocyto package for RNA velocity analysis of single cell RNA-seq data.",
        "detailed_description": "Get information about the velocyto package. RNA velocity analysis for single cell RNA-seq data",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-pipeline",
            "cell-fate-prediction",
            "computational-genomics",
            "developmental-lineage-tracing",
            "dynamic-transcriptomics",
            "gene-expression-matrices",
            "loom-file-processing",
            "package-inspection",
            "rna-velocity-analysis",
            "single-cell-rna-seq",
            "transcriptomic-velocity",
            "velocity-estimation",
            "velocyto-documentation",
            "velocyto-package-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Velocyto",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves information about the velocyto package",
            "Details RNA velocity analysis for single cell RNA-seq data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a6d7f0-1c2b-4d3a-9be6-4f1c2ba3d5ef",
        "name": "get_scanorama_info",
        "description": "Provides information about the scanorama package for batch correction and integration of single-cell data",
        "detailed_description": "Get information about the scanorama package. Batch correction and integration of single-cell data",
        "toolType": "Scientific Software Package",
        "tags": [
            "batch-correction",
            "bioinformatics",
            "computational-biology",
            "cross-batch-alignment",
            "data-integration",
            "high-dimensional-transcriptomics",
            "multi-batch-analysis",
            "python-package",
            "scanorama",
            "single-cell-data",
            "single-cell-integration",
            "single-cell-rna-seq"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Scanorama",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the scanorama package",
            "Batch correction and integration details for single-cell data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f1c4d2a-8e9b-4b47-9e1d-2e6a9b5c8f3d",
        "name": "get_palantir_info",
        "description": "Retrieves information about the palantir package, which models continuous cell state transitions",
        "detailed_description": "Get information about the palantir package. Algorithm for modeling continuous cell state transitions",
        "toolType": "Scientific Software Package",
        "tags": [
            "cell-differentiation-modeling",
            "cell-fate-mapping",
            "computational-biology",
            "continuous-state-transition",
            "package-documentation",
            "package-inspection",
            "palantir-package-info",
            "pseudotime-analysis",
            "python-package",
            "single-cell-bioinformatics",
            "single-cell-trajectory",
            "trajectory-inference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Palantir",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch palantir package metadata",
            "Describe algorithm for modeling continuous cell state transitions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2f1c429-4f3e-4d7a-8f21-6fa6db5f3c6b",
        "name": "get_episcanpy_info",
        "description": "Provides information on the episcanpy Python package for epigenomics single-cell analysis.",
        "detailed_description": "Get information about the episcanpy package. Epigenomics single cell analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-introspection",
            "bioinformatics-tool",
            "chromatin-accessibility",
            "computational-epigenetics",
            "epigenomic-analysis",
            "episcanpy",
            "package-metadata",
            "python-epigenomics-package",
            "sc-atac-seq-analysis",
            "single-cell-assay",
            "single-cell-epigenomics",
            "tool-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "EpiScanpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the episcanpy epigenomics single-cell analysis package in Python"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d1a13ea-1c0b-4d70-9a7f-8a8fae4fbe40",
        "name": "get_mne_info",
        "description": "Provides information on the MNE package for MEG and EEG data analysis",
        "detailed_description": "Get information about the mne package. MEG and EEG data analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "brain-signal-processing",
            "eeg-data-processing",
            "eeg-meg-analysis",
            "library-inspection",
            "meg-data-processing",
            "mne-package-info",
            "mne-toolbox-discovery",
            "neuroinformatics-library",
            "package-documentation-tool",
            "package-introspection",
            "pipeline-development",
            "python-neuroimaging",
            "research-toolbox",
            "software-metadata-extraction",
            "version-and-dependency-reporting"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "MNE",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the mne package",
            "Provide insights for MEG and EEG data analysis"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f46a2c3-5e13-4db7-9f75-8ea4071b6d5c",
        "name": "get_nilearn_info",
        "description": "Retrieve information about the nilearn Python package for neuroimaging machine learning.",
        "detailed_description": "Get information about the nilearn package. Machine learning for neuroimaging",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "brain-imaging-analysis",
            "computational-neuroscience",
            "documentation-extraction",
            "fmri-processing",
            "metadata-retrieval",
            "module-metadata",
            "neuroimaging-machine-learning",
            "nilearn-info",
            "package-documentation",
            "package-version",
            "python-package-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Nilearn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the nilearn package",
            "Machine learning for neuroimaging"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_brian2_info",
        "description": "Retrieves information about the brian2 spiking neural network simulator package",
        "detailed_description": "Get information about the brian2 package. Spiking neural network simulator",
        "toolType": "Scientific Software Package",
        "tags": [
            "brian2-package-info",
            "code-inspection",
            "computational-neuroscience",
            "event-driven-simulation",
            "neural-dynamics-simulation",
            "neuroscience-research",
            "package-metadata",
            "python-simulation-package",
            "snn-simulator",
            "software-documentation",
            "spiking-neural-networks",
            "synaptic-plasticity-modeling"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Brian2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves information about the brian2 package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d46a173a-9ab9-4b1f-8c40-74b2c135e6ba",
        "name": "get_elephant_info",
        "description": "Retrieves details of the Elephant electrophysiology analysis toolkit.",
        "detailed_description": "Get information about the elephant package. Electrophysiology analysis toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "brain-signal-analysis",
            "computational-neuroscience",
            "electrophysiology-analysis",
            "elephant-package-info",
            "ephys-toolkit",
            "metadata-retrieval",
            "neural-data-processing",
            "neural-signal-processing",
            "open-source-library",
            "package-documentation",
            "python-neuroscience",
            "signal-processing",
            "spike-train-analysis",
            "time-series-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Elephant",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the Elephant electrophysiology analysis toolkit"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f21957-2b5c-4c16-8fbe-1c0a4d5e9f77",
        "name": "get_neo_info",
        "description": "Retrieve metadata about the neo electrophysiology data package",
        "detailed_description": "Get information about the neo package. Representation of electrophysiology data",
        "toolType": "Scientific Software Package",
        "tags": [
            "data-model-inspection",
            "electrophysiology-data",
            "ephys-file-format",
            "neo-package-inspector",
            "neuroinformatics",
            "neurophysiology-toolkit",
            "package-documentation",
            "package-metadata",
            "python-neo",
            "signal-data-structure",
            "software-exploration",
            "time-series-representation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Neo",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package information",
            "Describe electrophysiology data representation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8a8e8f1-9c83-4b88-9f5c-4c7a5b2f3e01",
        "name": "get_rdkit_info",
        "description": "Retrieve detailed info about the RDKit cheminformatics and ML toolkit",
        "detailed_description": "Get comprehensive information about RDKit \u2013 cheminformatatics and machine learning toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "chemical-data-analysis",
            "chemical-structure-analysis",
            "cheminformatics-library",
            "cheminformatics-toolkit",
            "computational-chemistry",
            "drug-discovery",
            "fingerprint-generation",
            "graph-based-ml",
            "machine-learning-chemistry",
            "molecular-descriptors",
            "molecular-featurization",
            "molecule-processing",
            "rdkit-information",
            "virtual-screening"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "RDKit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve RDKit description and key features",
            "Provide installation instructions (pip and conda)",
            "Return documentation and repository links",
            "Include usage examples and quick start guide if requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_openbabel_info",
        "description": "Retrieve comprehensive information about OpenBabel for chemical format conversion and analysis",
        "detailed_description": "Get comprehensive information about OpenBabel \u2013 chemical format conversion and analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "chemical-data-processing",
            "chemical-format-conversion",
            "chemical-format-support",
            "cheminformatics",
            "computational-chemistry",
            "drug-discovery",
            "file-format-interconversion",
            "molecular-data-management",
            "molecular-format-parsing",
            "molecular-modeling",
            "open-source-chemistry",
            "openbabel-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "OpenBabel",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide OpenBabel description and features",
            "List supported chemical file formats",
            "Provide installation instructions",
            "Optionally include usage examples and quick start guide",
            "Offer documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2f1c425-9b1d-4d3c-8f2e-5c87476a8fa1",
        "name": "get_deepchem_info",
        "description": "Retrieve information about DeepChem, an open-source AI/ML toolkit for drug discovery, materials science, and quantum chemistry.",
        "detailed_description": "Get comprehensive information about DeepChem \u2013 an open-source toolkit that brings advanced AI/ML techniques to drug discovery, materials science and quantum chemistry.",
        "toolType": "Scientific Software Package",
        "tags": [
            "cheminformatics-library",
            "deepchem-info",
            "drug-discovery-ai",
            "graph-neural-networks",
            "materials-science-ml",
            "molecular-modeling",
            "open-source-toolkit",
            "package-documentation",
            "package-quickstart",
            "python-ml-toolkit",
            "quantum-chemistry-ai",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DeepChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides library description and details",
            "Retrieves installation instructions (pip and conda)",
            "Fetches usage examples and quick start guide",
            "Returns metadata such as popularity, keywords, documentation, and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7a7d4de-f0c1-4d7a-9c7b-2fd82d5838f1",
        "name": "get_dscribe_info",
        "description": "Fetch detailed information on DScribe, a library for generating machine-learning descriptors for materials and molecules.",
        "detailed_description": "Get comprehensive information about DScribe \u2013 a library for generating machine-learning descriptors for materials and molecules.",
        "toolType": "Scientific Software Package",
        "tags": [
            "chemoinformatics",
            "computational-materials",
            "descriptor-calculation",
            "dscribe-library",
            "feature-engineering",
            "feature-extraction",
            "interatomic-descriptors",
            "materials-informatics",
            "materials-machine-learning",
            "ml-descriptor-generation",
            "molecular-descriptors",
            "python-package",
            "quick-start-guide"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DScribe",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get comprehensive DScribe library information",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "ToolOutputSummarizer",
        "description": "AI-powered tool that generates concise summaries of long tool outputs, emphasizing key information relevant to the original query.",
        "detailed_description": "AI-powered tool for summarizing long tool outputs, focusing on key information relevant to the original query",
        "toolType": "AI Agent",
        "tags": [
            "ai-summarizer",
            "automated-summarization",
            "concise-report-generation",
            "content-highlighting",
            "context-aware-summarization",
            "information-extraction",
            "long-text-condensation",
            "nlp-summarization",
            "output-summarization",
            "query-focused-summary",
            "summary-generation",
            "tool-output-condensation"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Summarizes long tool outputs",
            "Highlights key findings and results",
            "Preserves critical technical details",
            "Focuses on information relevant to original query"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_output": {
                "type": "string",
                "description": "The original tool output to be summarized"
            },
            "query_context": {
                "type": "string",
                "description": "Context about the original query that triggered the tool"
            },
            "tool_name": {
                "type": "string",
                "description": "Name of the tool that generated the output"
            },
            "focus_areas": {
                "type": "string",
                "description": "Specific areas to focus on in the summary"
            },
            "max_length": {
                "type": "integer",
                "description": "Maximum length of the summary in characters"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_output": {
                    "type": "string",
                    "description": "The original tool output to be summarized",
                    "required": true
                },
                "query_context": {
                    "type": "string",
                    "description": "Context about the original query that triggered the tool",
                    "required": true
                },
                "tool_name": {
                    "type": "string",
                    "description": "Name of the tool that generated the output",
                    "required": true
                },
                "focus_areas": {
                    "type": "string",
                    "description": "Specific areas to focus on in the summary",
                    "required": false,
                    "default": "key_findings_and_results"
                },
                "max_length": {
                    "type": "integer",
                    "description": "Maximum length of the summary in characters",
                    "required": false,
                    "default": 32000
                }
            },
            "required": [
                "tool_output",
                "query_context",
                "tool_name"
            ]
        },
        "exampleInput": {
            "tool_output": "System profiling output: CPU usage peaked at 85%, memory usage stabilized at 2.3GB, disk I/O averaged 120MB/s.",
            "query_context": "Identify peak resource usage during system profiling.",
            "tool_name": "SystemProfiler",
            "focus_areas": "performance_metrics",
            "max_length": 500
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f1e2d3c-4b5a-6c7d-8e9f-102938475601",
        "name": "OutputSummarizationComposer",
        "description": "Composes a workflow that chunks long outputs, summarizes each chunk, and merges the summaries.",
        "detailed_description": "Composes output summarization workflow by chunking long outputs, processing each chunk with AI summarization, and merging results",
        "toolType": "Compositional Tool",
        "tags": [
            "ai-driven-summarization",
            "chunk-based-processing",
            "focus-area-highlighting",
            "long-text-chunking",
            "max-summary-length",
            "merge-summaries",
            "multi-step-summarization",
            "nlp-pipeline",
            "output-condensation",
            "query-contextualization",
            "summary-aggregation",
            "text-summarization",
            "workflow-composition"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Chunks long outputs",
            "Summarizes chunks using AI",
            "Merges summarized results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_output": {
                "type": "string",
                "description": "The original tool output to be summarized"
            },
            "query_context": {
                "type": "string",
                "description": "Context about the original query"
            },
            "tool_name": {
                "type": "string",
                "description": "Name of the tool that generated the output"
            },
            "chunk_size": {
                "type": "integer",
                "description": "Size of each chunk for processing"
            },
            "focus_areas": {
                "type": "string",
                "description": "Areas to focus on in summarization"
            },
            "max_summary_length": {
                "type": "integer",
                "description": "Maximum length of final summary"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_output": {
                    "type": "string",
                    "description": "The original tool output to be summarized",
                    "required": true
                },
                "query_context": {
                    "type": "string",
                    "description": "Context about the original query",
                    "required": true
                },
                "tool_name": {
                    "type": "string",
                    "description": "Name of the tool that generated the output",
                    "required": true
                },
                "chunk_size": {
                    "type": "integer",
                    "description": "Size of each chunk for processing",
                    "required": false,
                    "default": 2000
                },
                "focus_areas": {
                    "type": "string",
                    "description": "Areas to focus on in summarization",
                    "required": false,
                    "default": "key_findings_and_results"
                },
                "max_summary_length": {
                    "type": "integer",
                    "description": "Maximum length of final summary",
                    "required": false,
                    "default": 3000
                }
            },
            "required": [
                "tool_output",
                "query_context",
                "tool_name"
            ]
        },
        "exampleInput": {
            "tool_output": "The model produced a lengthy report on protein interactions and highlighted potential drug targets across multiple signaling pathways.",
            "query_context": "Summarize the key findings of the model regarding protein-protein interactions.",
            "tool_name": "ProteinInteractionTool",
            "chunk_size": 2000,
            "focus_areas": "key_findings_and_results",
            "max_summary_length": 3000
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8f1c9e19-0a30-4a71-b013-1d4b3c0d3b4e",
        "name": "DailyMed_search_spls",
        "description": "Search SPL entries using various filters and retrieve metadata with results.",
        "detailed_description": "Search SPL list using multiple filter conditions (drug_name/ndc/rxcui/setid) and return metadata + data array.",
        "toolType": "API",
        "tags": [
            "date-filtering",
            "drug-information-retrieval",
            "drug-label-search",
            "json-response",
            "metadata-extraction",
            "ndc-lookup",
            "paginated-results",
            "pharmacovigilance-support",
            "regulatory-compliance",
            "rxcui-query",
            "setid-retrieval",
            "spl-filtering",
            "spl-search",
            "structured-product-labeling"
        ],
        "category": "SearchSPLTool",
        "lab": "Zitnik Lab",
        "source": "DailyMed",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search SPL list with multiple filter conditions",
            "Return metadata and data array"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "Generic or brand name of the drug, e.g., 'TAMSULOSIN HYDROCHLORIDE'."
            },
            "ndc": {
                "type": "string",
                "description": "National Drug Code (NDC)."
            },
            "rxcui": {
                "type": "string",
                "description": "RxNorm Code (RXCUI)."
            },
            "setid": {
                "type": "string",
                "description": "Set ID corresponding to the SPL."
            },
            "published_date_gte": {
                "type": "string",
                "description": "Published date >= specified date, format 'YYYY-MM-DD'."
            },
            "published_date_eq": {
                "type": "string",
                "description": "Published date == specified date, format 'YYYY-MM-DD'."
            },
            "pagesize": {
                "type": "integer",
                "description": "Number of items per page, maximum 100, default 100."
            },
            "page": {
                "type": "integer",
                "description": "Page number, starts from 1, default 1."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "Generic or brand name of the drug, e.g., 'TAMSULOSIN HYDROCHLORIDE'."
                },
                "ndc": {
                    "type": "string",
                    "description": "National Drug Code (NDC)."
                },
                "rxcui": {
                    "type": "string",
                    "description": "RxNorm Code (RXCUI)."
                },
                "setid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Set ID corresponding to the SPL."
                },
                "published_date_gte": {
                    "type": "string",
                    "description": "Published date >= specified date, format 'YYYY-MM-DD'."
                },
                "published_date_eq": {
                    "type": "string",
                    "description": "Published date == specified date, format 'YYYY-MM-DD'."
                },
                "pagesize": {
                    "type": "integer",
                    "description": "Number of items per page, maximum 100, default 100.",
                    "default": 100
                },
                "page": {
                    "type": "integer",
                    "description": "Page number, starts from 1, default 1.",
                    "default": 1
                }
            },
            "required": []
        },
        "exampleInput": {
            "drug_name": "TAMSULOSIN HYDROCHLORIDE",
            "ndc": "0002-0800-01",
            "rxcui": "857316",
            "setid": "123e4567-e89b-12d3-a456-426614174000",
            "published_date_gte": "2020-01-01",
            "published_date_eq": "2021-01-01",
            "pagesize": 100,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4b1c9d4-2a57-4af3-8c3a-9d9a56701a12",
        "name": "DailyMed_get_spl_by_setid",
        "description": "Retrieve the complete label for a given SPL Set ID in XML format.",
        "detailed_description": "Get complete label corresponding to SPL Set ID, returns content in XML or JSON format.",
        "toolType": "API",
        "tags": [
            "clinical-documentation",
            "daily-med-spl",
            "drug-label-data",
            "fda-label-retrieval",
            "fda-structured-label",
            "health-regulatory-labels",
            "healthcare-xml-api",
            "label-content-fetch",
            "medication-information",
            "pharmaceutical-regulatory-data",
            "programmatic-label-access",
            "spl-setid-retrieval",
            "structured-product-label",
            "xml-label-output",
            "xml-response"
        ],
        "category": "GetSPLBySetIDTool",
        "lab": "Zitnik Lab",
        "source": "DailyMed",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve SPL label by set ID",
            "Return data in XML format"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "setid": {
                "type": "string",
                "description": "SPL Set ID to query."
            },
            "format": {
                "type": "string",
                "description": "Return format, only supports 'xml'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "setid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "SPL Set ID to query."
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "xml"
                    ],
                    "default": "xml",
                    "description": "Return format, only supports 'xml'."
                }
            },
            "required": [
                "setid"
            ]
        },
        "exampleInput": {
            "setid": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "format": "xml"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3a5b5c1-3f93-4af2-9c84-7d511adb3c06",
        "name": "gwas_search_associations",
        "description": "Search GWAS associations by trait, rs ID, or study with sorting and pagination support.",
        "detailed_description": "Search for GWAS associations by various criteria including EFO trait, rs ID, accession ID, with sorting and pagination support.",
        "toolType": "API",
        "tags": [
            "accession-id-search",
            "association-sorting",
            "computational-genomics",
            "efo-trait-query",
            "genetic-epidemiology",
            "genomic-variant-discovery",
            "gwas-association-search",
            "odds-ratio-sorting",
            "p-value-sorting",
            "result-pagination",
            "rsid-lookup",
            "snp-trait-associations"
        ],
        "category": "GWASAssociationSearch",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search GWAS associations",
            "Filter by EFO trait",
            "Filter by rs ID",
            "Filter by accession ID",
            "Sort results",
            "Paginate results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efo_trait": {
                "type": "string",
                "description": "EFO trait identifier or name"
            },
            "rs_id": {
                "type": "string",
                "description": "dbSNP rs identifier"
            },
            "accession_id": {
                "type": "string",
                "description": "Study accession identifier"
            },
            "sort": {
                "type": "string",
                "description": "Sort field (e.g., 'p_value', 'or_value')"
            },
            "direction": {
                "type": "string",
                "description": "Sort direction ('asc' or 'desc')"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efo_trait": {
                    "type": "string",
                    "description": "EFO trait identifier or name",
                    "required": false
                },
                "rs_id": {
                    "type": "string",
                    "description": "dbSNP rs identifier",
                    "required": false
                },
                "accession_id": {
                    "type": "string",
                    "description": "Study accession identifier",
                    "required": false
                },
                "sort": {
                    "type": "string",
                    "description": "Sort field (e.g., 'p_value', 'or_value')",
                    "required": false
                },
                "direction": {
                    "type": "string",
                    "description": "Sort direction ('asc' or 'desc')",
                    "required": false
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "efo_trait": "EFO_0004321",
            "rs_id": "rs123456",
            "accession_id": "GCST000001",
            "sort": "p_value",
            "direction": "asc",
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a7c9e4b2-6e2f-4b6d-b1a2-9d3f4e5c6a7b",
        "name": "gwas_search_studies",
        "description": "Search GWAS studies by criteria like EFO trait, disease trait, cohort, GxE interactions, or summary statistics availability.",
        "detailed_description": "Search for GWAS studies by various criteria including EFO trait, disease trait, cohort, GxE interactions, and summary statistics availability.",
        "toolType": "API",
        "tags": [
            "biobank-data-retrieval",
            "cohort-specific-search",
            "disease-trait-query",
            "efo-trait-filter",
            "full-pvalue-set-filter",
            "genetic-epidemiology",
            "genome-wide-association",
            "gwas-study-search",
            "gxe-interaction-filter",
            "meta-analysis-data",
            "statistical-genetics",
            "summary-statistics-availability",
            "trait-association-studies"
        ],
        "category": "GWASStudySearch",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search GWAS studies",
            "Filter by EFO trait",
            "Filter by disease trait",
            "Filter by cohort",
            "Filter by gene-environment interaction studies",
            "Filter by availability of full summary statistics",
            "Paginate results using size and page parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efo_trait": {
                "type": "string",
                "description": "EFO trait identifier or name"
            },
            "disease_trait": {
                "type": "string",
                "description": "Disease trait name"
            },
            "cohort": {
                "type": "string",
                "description": "Cohort name (e.g., 'UKB' for UK Biobank)"
            },
            "gxe": {
                "type": "boolean",
                "description": "Filter for Gene-by-Environment interaction studies"
            },
            "full_pvalue_set": {
                "type": "boolean",
                "description": "Filter for studies with full summary statistics"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efo_trait": {
                    "type": "string",
                    "description": "EFO trait identifier or name",
                    "required": false
                },
                "disease_trait": {
                    "type": "string",
                    "description": "Disease trait name",
                    "required": false
                },
                "cohort": {
                    "type": "string",
                    "description": "Cohort name (e.g., 'UKB' for UK Biobank)",
                    "required": false
                },
                "gxe": {
                    "type": "boolean",
                    "description": "Filter for Gene-by-Environment interaction studies",
                    "required": false
                },
                "full_pvalue_set": {
                    "type": "boolean",
                    "description": "Filter for studies with full summary statistics",
                    "required": false
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "efo_trait": "EFO_0000400",
            "disease_trait": "breast cancer",
            "cohort": "UKB",
            "gxe": true,
            "full_pvalue_set": false,
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1b6da3a-8f17-4e35-bf3c-9987c411f69e",
        "name": "gwas_search_snps",
        "description": "Search GWAS SNPs by rsID or mapped gene",
        "detailed_description": "Search for GWAS single nucleotide polymorphisms (SNPs) by rs ID or mapped gene.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "computational-genetics",
            "dbsnp-integration",
            "genetic-variant-search",
            "genome-wide-association",
            "genomics-query",
            "gwas-snp-search",
            "mapped-gene-snps",
            "pagination-support",
            "rsid-query",
            "snp-lookup",
            "variant-annotation"
        ],
        "category": "GWASSNPSearch",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for GWAS SNPs by rs_id",
            "Search for GWAS SNPs by mapped_gene",
            "Supports pagination via size and page parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "rs_id": {
                "type": "string",
                "description": "dbSNP rs identifier"
            },
            "mapped_gene": {
                "type": "string",
                "description": "Gene name or symbol"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "rs_id": {
                    "type": "string",
                    "description": "dbSNP rs identifier",
                    "required": false
                },
                "mapped_gene": {
                    "type": "string",
                    "description": "Gene name or symbol",
                    "required": false
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "rs_id": "rs12345",
            "mapped_gene": "BRCA1",
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4f5c8a0-3fae-4c1a-9e2f-7a5e10d3b8c9",
        "name": "gwas_get_association_by_id",
        "description": "Retrieve a GWAS association using its unique identifier.",
        "detailed_description": "Get a specific GWAS association by its unique identifier.",
        "toolType": "API",
        "tags": [
            "association-by-id",
            "bioinformatics-api",
            "computational-genetics",
            "genetic-epidemiology",
            "gwas-association-retrieval",
            "gwas-data-query",
            "gwas-identifier-fetch",
            "phenotype-genotype-link",
            "research-data-access",
            "snp-association-fetch",
            "statistical-genetics",
            "variant-trait-association"
        ],
        "category": "GWASAssociationByID",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch a GWAS association by its unique ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "association_id": {
                "type": "string",
                "description": "GWAS association identifier"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "association_id": {
                    "type": "string",
                    "description": "GWAS association identifier",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "association_id": "12345"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "21f7f8d2-8a0f-49b3-9c7d-2b2a3ef643fd",
        "name": "gwas_get_study_by_id",
        "description": "Retrieve a GWAS study by its unique identifier.",
        "detailed_description": "Get a specific GWAS study by its unique identifier.",
        "toolType": "API",
        "tags": [
            "bioinformatics-api",
            "genetic-association",
            "genome-wide-association",
            "genomics-data-access",
            "gwas-study-by-id",
            "gwas-study-fetch",
            "gwas-study-retrieval",
            "id-based-query",
            "phenotype-genotype",
            "population-genetics",
            "research-data-retrieval",
            "snp-association",
            "study-id-lookup",
            "trait-association"
        ],
        "category": "GWASStudyByID",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch GWAS study by study_id",
            "Provides detailed metadata including traits, sample sizes, ancestries, and summary statistics availability"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "study_id": {
                "type": "string",
                "description": "GWAS study identifier"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "study_id": {
                    "type": "string",
                    "description": "GWAS study identifier",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "study_id": "GCST90012345"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9c1a647-2b66-4c2d-8c36-138fa1c8a4bc",
        "name": "gwas_get_snp_by_id",
        "description": "Retrieve a specific GWAS SNP by its rs ID.",
        "detailed_description": "Get a specific GWAS SNP by its rs ID.",
        "toolType": "API",
        "tags": [
            "dbsnp-lookup",
            "dbsnp-query",
            "genetic-association-study",
            "genetic-variant-access",
            "genomics-data",
            "gwas-snp-retrieval",
            "gwas-variant-fetch",
            "molecular-genetics",
            "population-genetics",
            "rsid-query",
            "snp-by-rsid",
            "snp-query",
            "variant-lookup"
        ],
        "category": "GWASSNPByID",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch SNP data by rs ID",
            "Provide merged status",
            "Retrieve functional classification",
            "Get last update date",
            "Return genomic locations",
            "Provide allele information",
            "Get most severe consequence",
            "List mapped genes",
            "Provide minor allele frequency",
            "Provide minor allele",
            "Access API links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "rs_id": {
                "type": "string",
                "description": "dbSNP rs identifier"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "rs_id": {
                    "type": "string",
                    "description": "dbSNP rs identifier",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "rs_id": "rs1234"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f3b1c5d-7a48-4d9e-9f6e-e1b2d3a4c5b6",
        "name": "gwas_get_variants_for_trait",
        "description": "Retrieve paginated GWAS variants associated with a specific trait.",
        "detailed_description": "Get all variants associated with a specific trait with pagination support.",
        "toolType": "API",
        "tags": [
            "association-study-extraction",
            "bioinformatics-data-access",
            "complex-trait-mapping",
            "efo-identifier-search",
            "efo-trait-query",
            "epidemiological-genetics",
            "functional-genomics",
            "genetic-variant-fetch",
            "genome-wide-association",
            "gwas-variants-retrieval",
            "paginated-data-retrieval",
            "trait-associated-variants"
        ],
        "category": "GWASVariantsForTrait",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve GWAS variants for a given trait",
            "Support pagination of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efo_trait": {
                "type": "string",
                "description": "EFO trait identifier or name"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efo_trait": {
                    "type": "string",
                    "description": "EFO trait identifier or name",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "efo_trait": "asthma",
            "size": 20,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7a1b3f45-6d78-4bfa-b123-4e5d6c7f8a9b",
        "name": "gwas_get_associations_for_trait",
        "description": "Fetch GWAS associations for a specified trait, sorted by p-value.",
        "detailed_description": "Get all associations for a specific trait, sorted by p-value (most significant first).",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "computational-genomics",
            "efo-trait-lookup",
            "genome-wide-association-study",
            "genomic-association-analysis",
            "gwas-association-query",
            "gwas-data-extraction",
            "p-value-sorted-results",
            "pagination-support",
            "phenotype-genotype-associations",
            "statistical-significance-ranking",
            "trait-association-retrieval"
        ],
        "category": "GWASAssociationsForTrait",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve GWAS associations for a specified trait",
            "Sort associations by statistical significance (p-value)",
            "Support pagination with size and page parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efo_trait": {
                "type": "string",
                "description": "EFO trait identifier or name"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efo_trait": {
                    "type": "string",
                    "description": "EFO trait identifier or name",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "efo_trait": "EFO_0000400",
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3c1e2d4-5b6f-7a8c-9d0e-1f2a3b4c5d6e",
        "name": "gwas_get_associations_for_snp",
        "description": "Retrieve all associations for a specific SNP with optional sorting.",
        "detailed_description": "Get all associations for a specific SNP with optional sorting.",
        "toolType": "API",
        "tags": [
            "association-sorting",
            "bioinformatics-pipeline",
            "computational-genomics",
            "dbsnp-rs-id-query",
            "effect-size-ranking",
            "genetic-variant-analysis",
            "genome-wide-association-study",
            "gwas-snp-association",
            "p-value-ranking",
            "result-pagination",
            "snp-association-retrieval",
            "statistical-genetics",
            "variant-phenotype-associations"
        ],
        "category": "GWASAssociationsForSNP",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve associations for a given SNP",
            "Sort associations by specified field",
            "Paginate association results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "rs_id": {
                "type": "string",
                "description": "dbSNP rs identifier"
            },
            "sort": {
                "type": "string",
                "description": "Sort field (e.g., 'p_value', 'or_value')"
            },
            "direction": {
                "type": "string",
                "description": "Sort direction ('asc' or 'desc')"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "rs_id": {
                    "type": "string",
                    "description": "dbSNP rs identifier",
                    "required": true
                },
                "sort": {
                    "type": "string",
                    "description": "Sort field (e.g., 'p_value', 'or_value')",
                    "required": false
                },
                "direction": {
                    "type": "string",
                    "description": "Sort direction ('asc' or 'desc')",
                    "required": false
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "rs_id": "rs12345",
            "sort": "p_value",
            "direction": "asc",
            "size": 20,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "gwas_get_studies_for_trait",
        "description": "Retrieve GWAS studies for a trait with optional cohort and summary statistics filters.",
        "detailed_description": "Get studies for a specific trait with optional filters for cohort, GxE interactions, and summary statistics.",
        "toolType": "API",
        "tags": [
            "cohort-filtering",
            "disease-trait-search",
            "efo-trait-query",
            "full-pvalue-summary",
            "genetic-epidemiology",
            "genome-wide-association",
            "gwas-study-retrieval",
            "gxe-interaction-filter",
            "pagination-support",
            "phenotype-genetics",
            "summary-statistics-access",
            "trait-specific-gwas",
            "uk-biobank-query"
        ],
        "category": "GWASStudiesForTrait",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve GWAS studies for a given trait",
            "Filter studies by EFO trait",
            "Filter studies by disease trait",
            "Filter studies by cohort",
            "Filter studies by GxE interaction studies",
            "Filter studies with full summary statistics",
            "Paginate through results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efo_trait": {
                "type": "string",
                "description": "EFO trait identifier or name"
            },
            "disease_trait": {
                "type": "string",
                "description": "Disease trait name"
            },
            "cohort": {
                "type": "string",
                "description": "Cohort name (e.g., 'UKB' for UK Biobank)"
            },
            "gxe": {
                "type": "boolean",
                "description": "Filter for Gene-by-Environment interaction studies"
            },
            "full_pvalue_set": {
                "type": "boolean",
                "description": "Filter for studies with full summary statistics"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efo_trait": {
                    "type": "string",
                    "description": "EFO trait identifier or name",
                    "required": false
                },
                "disease_trait": {
                    "type": "string",
                    "description": "Disease trait name",
                    "required": false
                },
                "cohort": {
                    "type": "string",
                    "description": "Cohort name (e.g., 'UKB' for UK Biobank)",
                    "required": false
                },
                "gxe": {
                    "type": "boolean",
                    "description": "Filter for Gene-by-Environment interaction studies",
                    "required": false
                },
                "full_pvalue_set": {
                    "type": "boolean",
                    "description": "Filter for studies with full summary statistics",
                    "required": false
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "efo_trait": "EFO_0003767",
            "disease_trait": "breast cancer",
            "cohort": "UKB",
            "gxe": true,
            "full_pvalue_set": false,
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c3a4e7d4-9a84-4f15-a9bf-8c2fd0ea4c6c",
        "name": "gwas_get_snps_for_gene",
        "description": "Retrieve SNPs mapped to a specific gene with optional pagination",
        "detailed_description": "Get all SNPs mapped to a specific gene.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "gene-associated-snps",
            "gene-name-query",
            "gene-variant-mapping",
            "genome-wide-association",
            "genomic-variants",
            "gwas-data-access",
            "gwas-snp-mapping",
            "paginated-results",
            "pagination-support",
            "population-genetics",
            "snp-retrieval",
            "variant-discovery"
        ],
        "category": "GWASSNPsForGene",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get all SNPs mapped to a specific gene",
            "Support pagination via size and page parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "mapped_gene": {
                "type": "string",
                "description": "Gene name or symbol"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "mapped_gene": {
                    "type": "string",
                    "description": "Gene name or symbol",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "mapped_gene": "BRCA1",
            "size": 10,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "gwas_get_associations_for_study",
        "description": "Retrieve associations for a given study sorted by significance.",
        "detailed_description": "Get all associations for a specific study, sorted by p-value.",
        "toolType": "API",
        "tags": [
            "association-data-pagination",
            "association-extraction",
            "bioinformatics-research",
            "data-query-api",
            "genetic-variant-analysis",
            "genome-wide-association",
            "genotype-phenotype-links",
            "gwas-association-retrieval",
            "gwas-summary-statistics",
            "p-value-sorted-associations",
            "study-accession-query",
            "variant-trait-associations"
        ],
        "category": "GWASAssociationsForStudy",
        "lab": "Zitnik Lab",
        "source": "GWAS Catalog",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve GWAS associations by study accession ID",
            "Sort results by p-value",
            "Support pagination via size and page parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession_id": {
                "type": "string",
                "description": "Study accession identifier"
            },
            "size": {
                "type": "integer",
                "description": "Number of results to return per page"
            },
            "page": {
                "type": "integer",
                "description": "Page number for pagination"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession_id": {
                    "type": "string",
                    "description": "Study accession identifier",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of results to return per page",
                    "required": false
                },
                "page": {
                    "type": "integer",
                    "description": "Page number for pagination",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "accession_id": "GCST000001",
            "size": 20,
            "page": 1
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f2a1e4e-7c9d-4d81-9a8b-2e7d5d1a2b3c",
        "name": "Tool_RAG",
        "description": "Retrieve related tools based on a provided description",
        "detailed_description": "Retrieve related tools from the toolbox based on the provided description",
        "toolType": "Tool Finder Tool",
        "tags": [
            "content-based-retrieval",
            "description-driven-query",
            "embedding-based-search",
            "knowledge-retrieval",
            "nlp-embeddings",
            "related-tool-suggestion",
            "retrieval-augmented-search",
            "semantic-matching",
            "semantic-search",
            "tool-discovery",
            "tool-retrieval",
            "toolbox-navigation",
            "vector-similarity-search"
        ],
        "category": "ToolFinderEmbedding",
        "lab": "Zitnik Lab",
        "source": "mims-harvard-toolrag-t1-gte-qwen2-1.5b",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve related tools based on description",
            "Limit the number of tools returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "description": {
                "type": "string",
                "description": "The description of the tool capability required."
            },
            "limit": {
                "type": "integer",
                "description": "The number of tools to retrieve"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the tool capability required.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of tools to retrieve",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "description": "Find tools that can perform sequence alignment",
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0f12345-67ab-89cd-ef01-234567890abc",
        "name": "FDA_get_population_use_info_by_drug_name",
        "description": "Get usage details of a drug across specific populations by providing its name.",
        "detailed_description": "Retrieve information about the use of a drug in specific populations based on the drug name.",
        "toolType": "API",
        "tags": [
            "api-drug-database",
            "clinical-pharmacology",
            "demographic-stratification",
            "drug-use-demographics",
            "drug-utilization-statistics",
            "fda-drug-population-data",
            "fda-label-information",
            "healthcare-analytics",
            "integer-pagination-parameters",
            "pharmacoepidemiology",
            "population-specific-usage",
            "real-world-evidence",
            "regulatory-science",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve use_in_specific_populations data by drug name",
            "Supports pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1f3c0b2-7f0a-4e49-bbad-2de3f8a6f1c2",
        "name": "FDA_get_user_safety_warning_by_drug_names",
        "description": "Retrieve specific user safety warnings for given drug names.",
        "detailed_description": "Retrieve specific user safety warnings based on drug names.",
        "toolType": "API",
        "tags": [
            "adverse-event-alerts",
            "clinical-safety-data",
            "drug-name-query",
            "drug-safety-warnings",
            "fda-drug-label",
            "healthcare-risk-management",
            "limit-skip-pagination",
            "medical-decision-support",
            "medication-warnings",
            "paginated-json-response",
            "pharmacovigilance",
            "public-health-surveillance",
            "regulatory-compliance",
            "safety-advisory-retrieval",
            "string-parameter-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by brand or generic drug names",
            "Return user safety warnings",
            "Paginate results using limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The specific drug name."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The specific drug name.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2e69483e-1d7b-4d56-9ec5-3f2929b9b678",
        "name": "FDA_get_drug_names_by_user_safety_warning",
        "description": "Fetch drug names by user safety warning.",
        "detailed_description": "Retrieve drug names that have specific user safety warnings.",
        "toolType": "API",
        "tags": [
            "adverse-event-mining",
            "drug-name-retrieval",
            "drug-safety-filtering",
            "fda-drug-label",
            "fda-regulatory-data",
            "healthcare-data-api",
            "indication-based-query",
            "medical-informatics",
            "pharmacovigilance",
            "regulatory-compliance",
            "safety-warning-search",
            "structured-data-query",
            "user-safety-warning"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names with specific safety warnings",
            "Filter by drug indication",
            "Limit number of records returned",
            "Skip a set of records for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "safety_warning": {
                "type": "string",
                "description": "The specific safety warning to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "safety_warning": {
                    "type": "string",
                    "description": "The specific safety warning to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "safety_warning": "Cardiotoxicity",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9e0e6b-44d0-4cb0-8d12-5f839a2f3e72",
        "name": "FDA_get_drug_name_by_warnings",
        "description": "Get drug names by warning text",
        "detailed_description": "Retrieve the drug names based on specific warning information.",
        "toolType": "API",
        "tags": [
            "adverse-event-labeling",
            "drug-label-database",
            "drug-name-retrieval",
            "drug-safety-information",
            "drug-warning-search",
            "fda-drug-label",
            "fda-label-explorer",
            "pharmaceutical-safety-alerts",
            "pharmacovigilance",
            "regulatory-compliance-search",
            "text-based-label-search",
            "warning-text-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by warning text",
            "Retrieve brand and generic names",
            "Supports pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "warning_text": {
                "type": "string",
                "description": "The warning text to search for in the drug labeling."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "warning_text": {
                    "type": "string",
                    "description": "The warning text to search for in the drug labeling.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "warning_text": "drowsiness",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6f3d1e5-8d2a-4b6b-a9c1-3e174f4d5e97",
        "name": "FDA_get_warnings_by_drug_name",
        "description": "Fetch warning details for a specified drug",
        "detailed_description": "Retrieve warning information based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-data",
            "drug-name-query",
            "drug-safety-warnings",
            "fda-drug-label",
            "fda-warning-retrieval",
            "healthcare-api",
            "limit-skip-paging",
            "medical-safety-info",
            "pharmaceutical-alerts",
            "pharmacovigilance",
            "regulatory-compliance",
            "safety-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug warnings using brand or generic name",
            "Return warnings and boxed warnings",
            "Paginate results with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3cde2a7-4f66-4a24-9b0d-2f511e6a4f5d",
        "name": "FDA_get_warnings_and_cautions_by_drug_name",
        "description": "Fetch warnings and cautions for a specific drug by its name.",
        "detailed_description": "Retrieve warnings and cautions information for a specific drug based on its name.",
        "toolType": "API",
        "tags": [
            "adverse-event-alerts",
            "drug-cautions",
            "drug-label-extraction",
            "drug-name-query",
            "drug-safety-data",
            "fda-drug-warnings",
            "healthcare-research",
            "medicine-compliance",
            "pagination-parameters",
            "pharmacovigilance",
            "precautionary-labels",
            "regulatory-safety"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve warnings and cautions for a given drug name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_warnings_and_cautions",
        "description": "Fetch drug names by specified warnings and cautions information.",
        "detailed_description": "Retrieve drug names based on specific warnings and cautions information.",
        "toolType": "API",
        "tags": [
            "adverse-event-monitoring",
            "drug-labeling-data",
            "drug-safety-query",
            "fda-label-retrieval",
            "indication-based-filter",
            "json-api",
            "pharmacovigilance",
            "prescription-drug-info",
            "regulatory-compliance",
            "safety-warning-extraction",
            "string-search",
            "text-based-filtering",
            "warnings-and-cautions-search"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on warnings and cautions",
            "Filter results by indication",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "warnings_and_cautions_info": {
                "type": "string",
                "description": "The warnings and cautions text to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "warnings_and_cautions_info": {
                    "type": "string",
                    "description": "The warnings and cautions text to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "warnings_and_cautions_info": "hepatotoxicity risk",
            "indication": "liver disease",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f041a3e-23b7-4c5a-8d4a-2e3b419fb547",
        "name": "FDA_get_when_using_info",
        "description": "Retrieve side effects and avoidance information for a specified drug.",
        "detailed_description": "Retrieve information about side effects and substances or activities to avoid while using a specific drug.",
        "toolType": "API",
        "tags": [
            "contraindications",
            "drug-interactions",
            "drug-safety-information",
            "fda-drug-label",
            "integer-parameters",
            "medication-guidelines",
            "paginated-results",
            "pharmacovigilance",
            "risk-management",
            "side-effect-retrieval",
            "string-input",
            "substance-avoidance",
            "usage-warnings"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve side effects information for a specific drug",
            "Provide substances to avoid when using a specific drug",
            "Provide activities to avoid when using a specific drug"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f5e6d78-9abc-4def-0123-456789abcdef",
        "name": "FDA_get_brand_name_generic_name",
        "description": "Retrieve a drug's brand and generic names given its generic or brand name.",
        "detailed_description": "Retrieve the brand name and generic name from generic name or brand name of a drug.",
        "toolType": "API",
        "tags": [
            "brand-generic-conversion",
            "brand-name-lookup",
            "clinical-research",
            "drug-identification",
            "drug-label-retrieval",
            "drug-name-mapping",
            "drug-nomenclature",
            "fda-drug-database",
            "generic-name-lookup",
            "health-informatics",
            "medication-name-retrieval",
            "pharmaceutical-information",
            "prescription-drug-info"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve brand name of a drug",
            "Retrieve generic name of a drug",
            "Search by generic or brand name",
            "Limit the number of returned records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The generic name or the brand name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The generic name or the brand name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Lipitor",
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3c8b2d7-9f4e-4c1a-b2d3-e5f6a7b8c9d0",
        "name": "FDA_get_do_not_use_info_by_drug_name",
        "description": "Retrieve contraindication information for a drug by its name.",
        "detailed_description": "Retrieve information about all contraindications for use based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-reaction-guidelines",
            "clinical-pharmacology",
            "contraindication-lookup",
            "do-not-use-info",
            "drug-contraindications",
            "drug-safety-monitoring",
            "fda-drug-label",
            "medication-precautions",
            "pagination-support",
            "pharmacovigilance",
            "prescription-safety",
            "regulatory-science",
            "safety-warning-retrieval",
            "string-input-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve contraindications by drug name",
            "Supports pagination with limit and skip parameters",
            "Returns do_not_use fields from FDA drug labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-5678-90ab-cdef-1234567890ab",
        "name": "FDA_get_purpose_info_by_drug_name",
        "description": "Retrieve drug indications by drug name.",
        "detailed_description": "Retrieve about the drug product\u2019s indications for use based on the drug name.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "clinical-indications",
            "drug-indications",
            "drug-name-query",
            "drug-purpose-info",
            "fda-drug-label",
            "fda-indication-retrieval",
            "healthcare-api",
            "indication-info",
            "medication-guidance",
            "pharmaceutical-regulation",
            "pharmacology-database",
            "regulatory-compliance",
            "string-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug product indications based on drug name",
            "Search by brand and generic names",
            "Supports pagination with limit and skip parameters",
            "Returns purpose field"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8f0a1-3f4c-4d2e-9b1c-7a2d6e5f3b8a",
        "name": "FDA_get_drug_generic_name",
        "description": "Fetches a drug\u2019s generic name from its brand or generic name.",
        "detailed_description": "Get the drug\u2019s generic name based on the drug's generic or brand name.",
        "toolType": "API",
        "tags": [
            "brand-to-generic-conversion",
            "drug-info-standardization",
            "drug-labeling-api",
            "drug-name-normalization",
            "drug-nomenclature-lookup",
            "fda-drug-database",
            "fda-label-data-fetch",
            "generic-name-retrieval",
            "medication-information-query",
            "pharmaceutical-data-access",
            "pharmacovigilance-support"
        ],
        "category": "FDADrugLabelGetDrugGenericNameTool",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves a drug's generic name given a generic or brand name."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The generic or brand name of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The generic or brand name of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "drug_name": "Lipitor"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b435d00-c1ef-4b2a-9e05-3ad4f5c6e7b8",
        "name": "google-scholar",
        "description": "Search Google Scholar and return structured results: title, authors, summary, and citation count.",
        "detailed_description": "Search Google Scholar for a query and return structured results (title, authors, summary, citation count).",
        "toolType": "API",
        "tags": [
            "academic-article-retrieval",
            "academic-publication-discovery",
            "academic-research-tool",
            "author-metadata",
            "bibliographic-data-extraction",
            "citation-count-analysis",
            "exact-match-query",
            "google-scholar-search",
            "literature-review-helper",
            "publication-summary-generation",
            "scholarly-abstract-extraction",
            "scholarly-literature-search",
            "structured-search-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "Google Scholar",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search Google Scholar for academic papers",
            "Return structured results including title, authors, summary, and citation count",
            "Support exact match queries when exact_match is true"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on Google Scholar."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on Google Scholar."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "machine learning optimization",
            "exact_match": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9b2d63d-a233-4123-847a-0b4a625fad3e",
        "name": "wikipedia",
        "description": "Fetch top Wikipedia search results for a given query.",
        "detailed_description": "Search Wikipedia for a query and return the top results.",
        "toolType": "API",
        "tags": [
            "encyclopedia-query",
            "exact-match-search",
            "information-discovery",
            "knowledge-retrieval",
            "langchain-integration",
            "query-string-input",
            "reference-lookup",
            "research-assistant",
            "search-results-output",
            "semantic-search",
            "wiki-api-integration",
            "wikipedia-search"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "Wikipedia",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for Wikipedia pages based on a query",
            "Return top search results with titles and summaries",
            "Support exact match filtering for queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on Wikipedia."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on Wikipedia."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Machine learning",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b9450a6c-06b3-4e25-8b6a-9afc9c849560",
        "name": "arxiv",
        "description": "Search ArXiv for queries and retrieve structured paper metadata.",
        "detailed_description": "Search ArXiv for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-preprints",
            "arxiv-search",
            "exact-match-filter",
            "json-output",
            "literature-review",
            "metadata-extraction",
            "paper-retrieval",
            "preprint-search",
            "query-interface",
            "research-discovery",
            "scholarly-articles",
            "scientific-publications",
            "structured-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv with a query",
            "Return structured results of papers",
            "Supports exact match filtering"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "deep learning in bioinformatics",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7d1adc5-9bb8-4e8a-b74d-6f681bd0cca4",
        "name": "duckduckgo-search",
        "description": "Search DuckDuckGo for a query and return results.",
        "detailed_description": "Search DuckDuckGo for a query and return results.",
        "toolType": "API",
        "tags": [
            "api-based-search",
            "content-aggregation",
            "duckduckgo-search",
            "exact-match-search",
            "information-retrieval",
            "knowledge-discovery",
            "langchain-integration",
            "privacy-focused-search",
            "query-execution",
            "real-time-web-query",
            "search-automation",
            "text-query-processing",
            "web-search-api"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DuckDuckGo for a given query",
            "Optionally perform exact match searches",
            "Return raw text results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on DuckDuckGo."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on DuckDuckGo."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "latest AI research",
            "exact_match": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "arxiv-ml",
        "description": "Search ArXiv Machine Learning (cs.LG) category and return structured paper results.",
        "detailed_description": "Search ArXiv Machine Learning (cs.LG) category for a query and return structured results.",
        "toolType": "API",
        "tags": [
            "academic-paper-search",
            "arxiv-api-integration",
            "arxiv-machine-learning",
            "arxiv-ml-search",
            "cs-lg-query",
            "document-retrieval",
            "exact-match-filtering",
            "literature-review-assistant",
            "metadata-extraction",
            "query-based-search",
            "research-literature-mining",
            "research-paper-discovery",
            "scholarly-article-retrieval",
            "scientific-paper-mining",
            "structured-results"
        ],
        "category": "LangchainTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search ArXiv Machine Learning (cs.LG) category",
            "Support exact match queries",
            "Parse and structure results into Published, Title, Authors, and Summary"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The search query to run on ArXiv Machine Learning category."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Set to True for exact match with query string"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query to run on ArXiv Machine Learning category."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Set to True for exact match with query string"
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "graph neural networks",
            "exact_match": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c9b1ac47-8f3f-4d8c-91cb-1e2f8b6e5a3d",
        "name": "MedicalLiteratureReviewer",
        "description": "Systematic medical literature review tool for evidence synthesis and quality assessment.",
        "detailed_description": "Conducts systematic reviews of medical literature on specific topics. Synthesizes findings from multiple studies and provides evidence-based conclusions with structured analysis and quality assessment.",
        "toolType": "AI Agent",
        "tags": [
            "clinical-evidence-synthesis",
            "cohort-study-analysis",
            "diagnostic-accuracy-evaluation",
            "evidence-based-conclusions",
            "literature-synthesis",
            "medical-research-review",
            "meta-analysis",
            "narrative-review",
            "quality-assessment",
            "randomized-controlled-trials",
            "rapid-review",
            "scoping-review",
            "systematic-review",
            "therapeutic-efficacy-analysis"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Conduct systematic reviews of medical literature",
            "Synthesize findings from multiple studies",
            "Provide evidence-based conclusions",
            "Perform structured analysis",
            "Assess quality of evidence",
            "Follow PRISMA guidelines"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "research_topic": {
                "type": "string",
                "description": "The specific medical/research topic for literature review (e.g., 'efficacy of drug X in treating condition Y')."
            },
            "literature_content": {
                "type": "string",
                "description": "The literature content, abstracts, full studies, or research papers to review and synthesize."
            },
            "focus_area": {
                "type": "string",
                "description": "Primary focus area for the review (e.g., 'therapeutic efficacy', 'safety profile', 'diagnostic accuracy', 'biomarker validation')."
            },
            "study_types": {
                "type": "string",
                "description": "Types of studies to prioritize in the analysis (e.g., 'randomized controlled trials', 'meta-analyses', 'cohort studies', 'case-control studies')."
            },
            "quality_level": {
                "type": "string",
                "description": "Minimum evidence quality level to include (e.g., 'high quality only', 'moderate and above', 'all available evidence')."
            },
            "review_scope": {
                "type": "string",
                "description": "Scope of the review (e.g., 'comprehensive systematic review', 'rapid review', 'scoping review', 'narrative review')."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "research_topic": {
                    "type": "string",
                    "description": "The specific medical/research topic for literature review (e.g., 'efficacy of drug X in treating condition Y').",
                    "required": true
                },
                "literature_content": {
                    "type": "string",
                    "description": "The literature content, abstracts, full studies, or research papers to review and synthesize.",
                    "required": true
                },
                "focus_area": {
                    "type": "string",
                    "description": "Primary focus area for the review (e.g., 'therapeutic efficacy', 'safety profile', 'diagnostic accuracy', 'biomarker validation').",
                    "required": true
                },
                "study_types": {
                    "type": "string",
                    "description": "Types of studies to prioritize in the analysis (e.g., 'randomized controlled trials', 'meta-analyses', 'cohort studies', 'case-control studies').",
                    "required": true
                },
                "quality_level": {
                    "type": "string",
                    "description": "Minimum evidence quality level to include (e.g., 'high quality only', 'moderate and above', 'all available evidence').",
                    "required": true
                },
                "review_scope": {
                    "type": "string",
                    "description": "Scope of the review (e.g., 'comprehensive systematic review', 'rapid review', 'scoping review', 'narrative review').",
                    "required": true
                }
            },
            "required": [
                "research_topic",
                "literature_content",
                "focus_area",
                "study_types",
                "quality_level",
                "review_scope"
            ]
        },
        "exampleInput": {
            "research_topic": "efficacy of drug X in treating condition Y",
            "literature_content": "Abstracts and full-texts of relevant randomized controlled trials and cohort studies on drug X.",
            "focus_area": "therapeutic efficacy",
            "study_types": "randomized controlled trials",
            "quality_level": "high quality only",
            "review_scope": "comprehensive systematic review"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b1a9a3c-8b92-4f70-a4f2-1d5c6e8b7f9a",
        "name": "HypothesisGenerator",
        "description": "Generates novel, testable research hypotheses from given context, domain, and format.",
        "detailed_description": "Generates research hypotheses based on provided background context, domain, and desired format. Uses AI to propose novel, testable hypotheses for scientific exploration.",
        "toolType": "AI Agent",
        "tags": [
            "ai-powered-hypotheses",
            "associative-correlations",
            "context-driven-generation",
            "domain-specific-insights",
            "experimental-design-support",
            "hypothesis-formulation",
            "hypothesis-generation",
            "if-then-hypotheses",
            "mechanistic-propositions",
            "null-alternative-statements",
            "research-hypotheses",
            "scientific-exploration",
            "testable-hypotheses"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generate research hypotheses",
            "Customize number of hypotheses",
            "Support various hypothesis formats",
            "Use domain-specific context"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "context": {
                "type": "string",
                "description": "Background information, observations, or data description from which to derive hypotheses."
            },
            "domain": {
                "type": "string",
                "description": "Field of study or research area (e.g., 'neuroscience', 'ecology', 'materials science')."
            },
            "number_of_hypotheses": {
                "type": "string",
                "description": "Number of hypotheses to generate (e.g., '3', '5')."
            },
            "hypothesis_format": {
                "type": "string",
                "description": "Optional directive on how to structure each hypothesis. Choose from one of the specified formats or use concise declarative sentences."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "string",
                    "description": "Background information, observations, or data description from which to derive hypotheses.",
                    "required": true
                },
                "domain": {
                    "type": "string",
                    "description": "Field of study or research area (e.g., 'neuroscience', 'ecology', 'materials science').",
                    "required": true
                },
                "number_of_hypotheses": {
                    "type": "string",
                    "description": "Number of hypotheses to generate (e.g., '3', '5').",
                    "required": true
                },
                "hypothesis_format": {
                    "type": "string",
                    "description": "Optional directive on how to structure each hypothesis. Choose from one of the following formats:\n\n1. If\u2013Then Statements: \"If [independent variable condition], then [expected outcome].\"\n2. Null and Alternative (Statistical):\n   \u2022 H\u2080 (Null): \"There is no difference/effect/association between X and Y.\"\n   \u2022 H\u2081 (Alt): \"There is a difference/effect/association between X and Y.\"\n3. Associative (Correlation-Focused): \"There is a relationship/association between [Variable A] and [Variable B].\"\n4. Directional (Non-If\u2013Then): \"Increasing/decreasing [Variable A] will lead to [directional change] in [Variable B].\"\n5. Comparative (Group Comparison): \"Group A will show higher/lower [dependent measure] compared to Group B under [condition].\"\n6. Mechanistic: \"Because [mechanism or process], [Variable A] will cause [Variable B].\"\n7. Descriptive (Exploratory/Pattern-Oriented): \"Population X exhibits pattern Y in context Z.\"\n\nIf omitted, defaults to concise declarative sentences.",
                    "default": "concise declarative sentences",
                    "required": false
                }
            },
            "required": [
                "context",
                "domain",
                "number_of_hypotheses"
            ]
        },
        "exampleInput": {
            "context": "Recent studies show that chronic sleep deprivation alters hippocampal synaptic plasticity in rodents.",
            "domain": "neuroscience",
            "number_of_hypotheses": "3",
            "hypothesis_format": "If\u2013Then Statements"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "ExperimentalDesignScorer",
        "description": "Scores and provides structured feedback on key aspects of experimental designs including hypothesis clarity, variables, sample size, controls, measurements, analysis, bias, ethics, and feasibility.",
        "detailed_description": "Assesses a proposed experimental design by assigning scores and structured feedback on hypothesis clarity, variable definitions, sample size, controls, randomization, measurement methods, statistical analysis, bias mitigation, ethical considerations, and overall feasibility.",
        "toolType": "AI Agent",
        "tags": [
            "bias-mitigation-review",
            "control-group-assessment",
            "ethical-compliance-check",
            "experimental-design-evaluation",
            "hypothesis-clarity-check",
            "measurement-method-assessment",
            "randomization-validator",
            "research-methodology-assessment",
            "sample-size-analysis",
            "statistical-analysis-evaluator",
            "study-design-scorer",
            "variable-definition-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Assign scores for hypothesis clarity & alignment",
            "Evaluate definitions of variables & controls",
            "Assess sample size justification & randomization",
            "Review measurement methods & data collection",
            "Validate statistical analysis plan",
            "Identify biases & limitations",
            "Check ethical considerations & practical feasibility",
            "Provide overall feasibility score & recommendations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "hypothesis": {
                "type": "string",
                "description": "A clear statement of the research hypothesis to be tested."
            },
            "design_description": {
                "type": "string",
                "description": "A detailed description of the proposed experimental design, including variables, methods, sample details, and planned analyses."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "hypothesis": {
                    "type": "string",
                    "description": "A clear statement of the research hypothesis to be tested.",
                    "required": true
                },
                "design_description": {
                    "type": "string",
                    "description": "A detailed description of the proposed experimental design, including variables, methods, sample details, and planned analyses.",
                    "required": true
                }
            },
            "required": [
                "hypothesis",
                "design_description"
            ]
        },
        "exampleInput": {
            "hypothesis": "Increasing daily light exposure will significantly accelerate the growth rate of tomato plants.",
            "design_description": "Two groups of tomato seedlings (n=30 each) will be grown under 6 hours vs. 12 hours of light daily. Plants will be randomized into groups, height measured weekly using a calibrated ruler, and data analyzed using repeated-measures ANOVA to test for growth rate differences."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "bd0e3761-0d9c-4f2a-bfa4-31ea0c3839f7",
        "name": "MedicalTermNormalizer",
        "description": "Normalizes misspelled drug and disease names into standardized biomedical terms.",
        "detailed_description": "Identifies and corrects misspelled drug or disease names, returning a list of plausible standardized terms.",
        "toolType": "AI Agent",
        "tags": [
            "biomedical-text-processing",
            "clinical-text-normalization",
            "disease-name-standardization",
            "drug-name-correction",
            "fuzzy-string-matching",
            "healthcare-nlp",
            "input-text-cleaning",
            "medical-entity-normalization",
            "medical-term-normalization",
            "ontology-term-mapping",
            "spelling-error-correction",
            "terminology-standardization"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Identifies misspelled drug or disease names",
            "Generates plausible standardized biomedical terms",
            "Returns results as a JSON array ordered by likelihood"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "raw_terms": {
                "type": "string",
                "description": "A comma- or whitespace-separated string containing one misspelled drug or disease name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "raw_terms": {
                    "type": "string",
                    "description": "A comma- or whitespace-separated string containing one misspelled drug or disease name.",
                    "required": true
                }
            },
            "required": [
                "raw_terms"
            ]
        },
        "exampleInput": {
            "raw_terms": "aspirn"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "NoveltySignificanceReviewer",
        "description": "Structured peer-review of a manuscript's originality and impact.",
        "detailed_description": "Provides a structured peer-review of the work's originality and potential impact.",
        "toolType": "AI Agent",
        "tags": [
            "academic-manuscript-review",
            "manuscript-critique",
            "natural-language-processing",
            "novelty-assessment",
            "originality-assessment",
            "peer-review-automation",
            "publication-quality-review",
            "research-impact-analysis",
            "research-paper-assessment",
            "scholarly-feedback",
            "significance-evaluation",
            "structured-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Assign ratings for research originality, contribution, and innovation level",
            "Provide 2-3 sentences justifying each rating",
            "Offer specific improvement advice",
            "Give overarching recommendations to strengthen contributions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "paper_title": {
                "type": "string",
                "description": "Manuscript title"
            },
            "abstract": {
                "type": "string",
                "description": "Manuscript abstract"
            },
            "manuscript_text": {
                "type": "string",
                "description": "Full manuscript text"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "paper_title": {
                    "type": "string",
                    "description": "Manuscript title",
                    "required": true
                },
                "abstract": {
                    "type": "string",
                    "description": "Manuscript abstract",
                    "required": true
                },
                "manuscript_text": {
                    "type": "string",
                    "description": "Full manuscript text",
                    "required": true
                }
            },
            "required": [
                "paper_title",
                "abstract",
                "manuscript_text"
            ]
        },
        "exampleInput": {
            "paper_title": "Deep Learning for Protein Structure Prediction",
            "abstract": "We propose a novel deep learning method to predict protein tertiary structures with high accuracy.",
            "manuscript_text": "Introduction:\nProtein structure prediction remains a key challenge...\nMethods:\nWe developed a convolutional neural network...\nResults:\nOur approach achieves state-of-the-art performance..."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f1c3ac7-2d45-4e6d-b1f6-9b3e4a2d7c88",
        "name": "LiteratureContextReviewer",
        "description": "Reviews coverage, relevance, and critical synthesis of prior scholarship.",
        "detailed_description": "Reviews coverage, relevance, and critical synthesis of prior scholarship.",
        "toolType": "AI Agent",
        "tags": [
            "academic-literature-curation",
            "academic-writing-support",
            "coverage-assessment",
            "critical-synthesis",
            "evidence-synthesis",
            "knowledge-synthesis",
            "literature-review-analysis",
            "prior-scholarship-review",
            "relevance-evaluation",
            "research-gaps-identification",
            "scholarly-context-analysis",
            "text-analysis"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Assess comprehensiveness of sources",
            "Evaluate relevance and accuracy of summaries",
            "Assess critical synthesis and identify research gaps",
            "Provide 1-5 ratings for literature review aspects",
            "Offer 2-3 sentence feedback and suggest missing citations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "paper_title": {
                "type": "string",
                "description": "Title of the paper"
            },
            "literature_review": {
                "type": "string",
                "description": "Full literature-review text"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "paper_title": {
                    "type": "string",
                    "required": true
                },
                "literature_review": {
                    "type": "string",
                    "description": "Full literature-review text",
                    "required": true
                }
            },
            "required": [
                "paper_title",
                "literature_review"
            ]
        },
        "exampleInput": {
            "paper_title": "Deep Learning for Bioinformatics",
            "literature_review": "This literature review covers deep learning applications in genomics and proteomics, highlighting key studies, summarizing methodologies, and identifying research gaps."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "MethodologyRigorReviewer",
        "description": "Evaluates research methodology design, sampling, and transparency.",
        "detailed_description": "Evaluates design appropriateness, sampling, and procedural transparency.",
        "toolType": "AI Agent",
        "tags": [
            "academic-manuscript-assistance",
            "experimental-design-assessment",
            "methodology-rigor-assessment",
            "methods-section-analysis",
            "nlp-driven-methodology-review",
            "peer-review-support",
            "procedural-transparency-check",
            "research-design-evaluation",
            "research-reporting-evaluation",
            "sampling-method-review",
            "scholarly-methodology-audit",
            "study-protocol-assessment"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Critically appraise the Methods section",
            "Rate design appropriateness to research question",
            "Assess variable definition and operationalization clarity",
            "Evaluate sampling strategy and randomization adequacy",
            "Check procedural transparency for replicability",
            "Provide ratings with justification",
            "Recommend top methodological revisions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "methods_section": {
                "type": "string",
                "description": "Full Methods text"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "methods_section": {
                    "type": "string",
                    "description": "Full Methods text",
                    "required": true
                }
            },
            "required": [
                "methods_section"
            ]
        },
        "exampleInput": {
            "methods_section": "In this study, we conducted a randomized controlled trial with 200 participants to evaluate the effect of intervention X on outcome Y. Participants were randomly assigned to control or treatment groups, and all procedures were standardized and fully documented to ensure replicability."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f8e0c1f-0b6d-4b9f-b1a2-3e6c19f4a2d5",
        "name": "DataAnalysisValidityReviewer",
        "description": "Reviews statistical choices, tests assumptions, and ensures transparent reporting.",
        "detailed_description": "Checks statistical choices, assumption testing, and reporting transparency.",
        "toolType": "AI Agent",
        "tags": [
            "analysis-section-evaluation",
            "assumption-testing",
            "data-analysis-audit",
            "data-integrity-assessment",
            "manuscript-preparation-support",
            "peer-review-assistance",
            "quantitative-methods-assessment",
            "reporting-transparency",
            "reproducibility-assessment",
            "research-methodology-review",
            "research-quality-assurance",
            "statistical-inference-validation",
            "statistical-report-evaluation",
            "statistical-validity-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide ratings (1-5) for the appropriateness of statistical tests and models.",
            "Evaluate assumption verification and recommend remedies.",
            "Critique reporting completeness (effect sizes, confidence intervals, p-values).",
            "Assess reproducibility regarding code and data availability.",
            "Suggest corrective analyses and transparency improvements."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "analysis_section": {
                "type": "string",
                "description": "Statistical analysis text to be reviewed."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "analysis_section": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "analysis_section"
            ]
        },
        "exampleInput": {
            "analysis_section": "We conducted a t-test comparing group means with alpha set at 0.05. Assumptions were tested with Shapiro-Wilk and Levene's test. Effect sizes (Cohen's d) and 95% CIs were reported. Code is available at https://example.com/code."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f3a5b2-6f4e-4cde-bb27-5e9f2a1c4b8d",
        "name": "ResultsInterpretationReviewer",
        "description": "Assesses if conclusions match data and if limitations are discussed.",
        "detailed_description": "Judges whether conclusions are data-justified and limitations addressed.",
        "toolType": "AI Agent",
        "tags": [
            "academic-text-analysis",
            "argumentation-analysis",
            "conclusion-justification-check",
            "discussion-section-evaluation",
            "evidence-based-evaluation",
            "limitation-assessment",
            "manuscript-peer-review",
            "natural-language-processing",
            "research-methodology",
            "research-reproducibility-check",
            "research-validity-assessment",
            "results-interpretation-review",
            "results-section-evaluation",
            "scientific-publication-review",
            "statistical-inference-check"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Assess alignment of research claims with presented data",
            "Evaluate consideration of alternative explanations",
            "Review discussion of limitations and future work",
            "Provide recommendations for improving interpretive balance and acknowledging uncertainties"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "results_section": {
                "type": "string",
                "description": "Text of the results section to review"
            },
            "discussion_section": {
                "type": "string",
                "description": "Text of the discussion section to review"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "results_section": {
                    "type": "string",
                    "required": true
                },
                "discussion_section": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "results_section",
                "discussion_section"
            ]
        },
        "exampleInput": {
            "results_section": "In the treated group, the average response increased by 15% (p=0.02) compared to baseline, with confidence intervals showing robustness.",
            "discussion_section": "These findings support the hypothesis that compound X enhances performance; however, variability across subjects suggests alternative factors may also contribute."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6e4f5a2-987c-4b7a-9cd1-3e2f4a5b6c7d",
        "name": "WritingPresentationReviewer",
        "description": "Assesses clarity, organization, grammar, and visual presentation quality.",
        "detailed_description": "Assesses clarity, organization, grammar, and visual presentation quality.",
        "toolType": "AI Agent",
        "tags": [
            "clarity-assessment",
            "content-editing",
            "content-quality-assurance",
            "document-structuring",
            "grammar-checker",
            "manuscript-proofreading",
            "organization-analysis",
            "presentation-feedback",
            "readability-scoring",
            "slide-design-review",
            "style-guide-compliance",
            "visual-presentation-evaluation",
            "writing-assistant",
            "writing-presentation-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Evaluates manuscript clarity and conciseness",
            "Assesses logical flow and section organization",
            "Checks grammar, style, and terminology consistency",
            "Reviews figure/table quality and caption adequacy",
            "Provides ratings and concise feedback with examples and suggestions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "manuscript_text": {
                "type": "string",
                "description": "The manuscript text to evaluate."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "manuscript_text": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "manuscript_text"
            ]
        },
        "exampleInput": {
            "manuscript_text": "In this study, we investigate the effects of X on Y. The methodology section outlines the experimental design and analysis."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "ReproducibilityTransparencyReviewer",
        "description": "Evaluates availability of data, code, and protocols for replication.",
        "detailed_description": "Evaluates data, code, and protocol availability for replication.",
        "toolType": "AI Agent",
        "tags": [
            "availability-statement-analysis",
            "code-availability-verification",
            "data-availability-check",
            "methodological-transparency-check",
            "open-data-verification",
            "open-science-compliance",
            "peer-review-assistant",
            "protocol-accessibility-evaluation",
            "publication-reproducibility-evaluation",
            "replication-readiness-assessment",
            "reproducibility-assessment",
            "research-integrity-assurance",
            "transparency-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Rate data accessibility and documentation",
            "Rate code/software availability and licensing",
            "Rate protocol and materials detail for replication",
            "Provide 1-5 ratings and 2-3 sentence critiques",
            "Identify embargoes or missing links",
            "Recommend steps for full transparency"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "availability_statement": {
                "type": "string",
                "description": "Data & Materials Availability Statement to evaluate"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "availability_statement": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "availability_statement"
            ]
        },
        "exampleInput": {
            "availability_statement": "We have deposited all raw data in the Dryad repository (doi:10.5061/dryad.ab12c3) and uploaded analysis scripts to GitHub (https://github.com/example/project) under MIT license. Detailed protocols are provided in Supplementary Document 1."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "EthicalComplianceReviewer",
        "description": "Reviews documents for compliance with ethical standards and disclosures.",
        "detailed_description": "Checks adherence to ethical standards and disclosure practices.",
        "toolType": "AI Agent",
        "tags": [
            "corporate-governance",
            "disclosure-validation",
            "document-analysis",
            "ethical-compliance-checker",
            "ethics-audit",
            "ethics-evaluator",
            "manuscript-evaluation",
            "policy-adherence",
            "publication-prep",
            "regulatory-compliance",
            "research-ethics",
            "research-integrity",
            "text-based-review"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Evaluates approvals & informed consent procedures",
            "Assesses participant welfare measures",
            "Reviews conflict of interest & funding disclosures",
            "Checks data privacy & security protections",
            "Provides ratings and feedback on ethical compliance"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ethics_section": {
                "type": "string",
                "description": "Ethics & Compliance section text to review"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ethics_section": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "ethics_section"
            ]
        },
        "exampleInput": {
            "ethics_section": "The study received approval from the Institutional Review Board at XYZ University. Participants provided written informed consent. No conflicts of interest were reported. Data were stored securely with encryption."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b0a6e574-8a3d-4f6c-9b66-1d9e5f7656c2",
        "name": "QuestionRephraser",
        "description": "Creates three rephrasings of a question, preserving answer option validity.",
        "detailed_description": "Generates three distinct paraphrases of a given question while ensuring answer options remain valid and applicable.",
        "toolType": "AI Agent",
        "tags": [
            "ai-powered-rewording",
            "context-aware-paraphrase",
            "educational-content-editing",
            "multiple-choice-preservation",
            "natural-language-processing",
            "nlp-text-transformation",
            "query-rephrasing",
            "question-paraphrasing",
            "quiz-item-generation",
            "semantic-preservation",
            "string-processing",
            "survey-question-optimization",
            "text-paraphrase-engine",
            "text-processing"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Rephrases questions maintaining original meaning and difficulty",
            "Generates three distinct paraphrases",
            "Ensures validity of provided answer options for rephrased questions",
            "Returns output as a JSON array"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "question": {
                "type": "string",
                "description": "The original question text to be rephrased"
            },
            "options": {
                "type": "string",
                "description": "Answer options (e.g., multiple choice options) that should remain valid for the rephrased questions. Leave empty if no options are provided."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string",
                    "description": "The original question text to be rephrased",
                    "required": true
                },
                "options": {
                    "type": "string",
                    "description": "Answer options (e.g., multiple choice options) that should remain valid for the rephrased questions. Leave empty if no options are provided.",
                    "required": false
                }
            },
            "required": [
                "question"
            ]
        },
        "exampleInput": {
            "question": "What is the capital of France?",
            "options": "A) Paris B) London C) Rome D) Berlin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "ProtocolOptimizer",
        "description": "Optimizes protocols by improving clarity, feasibility, risk management, and evaluation rigor.",
        "detailed_description": "Reviews an initial protocol and delivers targeted revisions that improve clarity, feasibility, risk-management, and evaluation rigor.",
        "toolType": "AI Agent",
        "tags": [
            "clarity-enhancement",
            "document-quality-control",
            "evaluation-rigor",
            "experimental-design",
            "feasibility-assessment",
            "methodology-optimization",
            "protocol-optimization",
            "protocol-review",
            "protocol-revision",
            "protocol-validation",
            "research-methodology",
            "risk-management",
            "scientific-protocol",
            "sop-optimization"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Protocol review and optimization",
            "Provides clarity and completeness ratings",
            "Assesses feasibility and resource efficiency",
            "Evaluates risk mitigation and contingency plans",
            "Analyzes measurement and evaluation metrics",
            "Generates prioritized action-item checklists"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "initial_protocol": {
                "type": "string",
                "description": "The protocol text to be reviewed and optimized."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "initial_protocol": {
                    "type": "string",
                    "required": true
                }
            },
            "required": [
                "initial_protocol"
            ]
        },
        "exampleInput": {
            "initial_protocol": "This study aims to test the efficacy of drug X in reducing blood pressure. We will recruit 100 participants, administer varying doses over 8 weeks, and measure systolic and diastolic pressure weekly."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f8d2b6d8-c871-4a3e-9db9-4f0b5d2e6a7c",
        "name": "TestCaseGenerator",
        "description": "Generates diverse and representative test cases for ToolUniverse tools based on parameter schemas, covering typical usage, edge cases, and feedback-driven scenarios.",
        "detailed_description": "Generates diverse and representative ToolUniverse tool call dictionaries for a given tool based on its parameter schema. Each tool call should be a JSON object with 'name' (the tool's name) and 'arguments' (a dict of input arguments), covering different parameter combinations, edge cases, and typical usage. Can generate targeted test cases based on previous optimization feedback.",
        "toolType": "AI Agent",
        "tags": [
            "api-test-generation",
            "combinatorial-testing",
            "edge-case-generation",
            "feedback-driven-testing",
            "json-schema-based",
            "parameter-combination",
            "qa-automation",
            "regression-test-generation",
            "software-testing",
            "test-case-generation",
            "test-scenario-generation",
            "tool-call-dictionary"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generates multiple tool call JSON objects for a given tool configuration",
            "Covers different parameter combinations, edge cases, and typical usage scenarios",
            "Supports feedback-driven test case optimization based on '_optimization_feedback' and '_iteration'"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "object",
                "description": "The full configuration of the tool to generate test cases for. May include '_optimization_feedback' and '_iteration' fields for feedback-driven test generation."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "object",
                    "description": "The full configuration of the tool to generate test cases for. May include '_optimization_feedback' and '_iteration' fields for feedback-driven test generation.",
                    "required": true
                }
            },
            "required": [
                "tool_config"
            ]
        },
        "exampleInput": {
            "tool_config": {
                "type": "AgenticTool",
                "name": "ExampleTool",
                "description": "An example tool for demonstration purposes.",
                "parameter": {
                    "type": "object",
                    "properties": {
                        "example_param": {
                            "type": "string",
                            "description": "An example parameter."
                        }
                    },
                    "required": [
                        "example_param"
                    ]
                }
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9a30f07-0c9b-4d12-854e-152fec4ade3c",
        "name": "DescriptionAnalyzer",
        "description": "Analyzes tool descriptions and test results to suggest more accurate, comprehensive, and user-friendly descriptions, optionally providing a rationale.",
        "detailed_description": "Analyzes a tool's original description and the results of multiple test cases, then suggests an improved description that is more accurate, comprehensive, and user-friendly. Optionally provides a rationale for the changes.",
        "toolType": "AI Agent",
        "tags": [
            "ai-driven-editing",
            "content-quality-assessment",
            "description-enhancement",
            "description-refinement",
            "documentation-automation",
            "natural-language-processing",
            "rationale-generation",
            "semantic-analysis",
            "test-case-analysis",
            "test-results-evaluation",
            "text-optimization",
            "user-friendly-description"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze tool descriptions and test results",
            "Suggest improved descriptions",
            "Provide rationale for changes"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "original_description": {
                "type": "string",
                "description": "The original description of the tool."
            },
            "test_results": {
                "type": "string",
                "description": "A JSON string containing a list of test case input/output pairs."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "original_description": {
                    "type": "string",
                    "description": "The original description of the tool.",
                    "required": true
                },
                "test_results": {
                    "type": "string",
                    "description": "A JSON string containing a list of test case input/output pairs.",
                    "required": true
                }
            },
            "required": [
                "original_description",
                "test_results"
            ]
        },
        "exampleInput": {
            "original_description": "Extracts keywords from text and returns a ranked list of terms.",
            "test_results": "[{\"input\":\"Analyze this sentence\",\"output\":\"[{\\\"keyword\\\": \\\"sentence\\\", \\\"score\\\": 0.95}]\"}]"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6e3c3aa-9d44-4c71-8c24-12e5edc3d1a9",
        "name": "ArgumentDescriptionOptimizer",
        "description": "Optimizes parameter descriptions using test results and usage patterns for clarity and accuracy.",
        "detailed_description": "Optimizes the descriptions of tool arguments/parameters based on test case results and actual usage patterns. Provides improved descriptions that are more accurate and user-friendly.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-parameter-tuning",
            "api-documentation-enhancement",
            "argument-description-optimization",
            "developer-usability-improvement",
            "documentation-automation",
            "json-schema-clarification",
            "metadata-quality-improvement",
            "nlp-description-generation",
            "parameter-schema-refinement",
            "schema-validation-insights",
            "software-documentation-tool",
            "test-driven-documentation",
            "usage-pattern-analysis",
            "user-friendly-parameter-docs"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyzes parameter schemas",
            "Integrates test case results",
            "Produces concise, accurate descriptions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "parameter_schema": {
                "type": "string",
                "description": "JSON string of the original parameter schema with properties and descriptions."
            },
            "test_results": {
                "type": "string",
                "description": "JSON string of test case input/output pairs showing parameter usage."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "parameter_schema": {
                    "type": "string",
                    "description": "JSON string of the original parameter schema with properties and descriptions.",
                    "required": true
                },
                "test_results": {
                    "type": "string",
                    "description": "A JSON string containing test case input/output pairs showing parameter usage.",
                    "required": true
                }
            },
            "required": [
                "parameter_schema",
                "test_results"
            ]
        },
        "exampleInput": {
            "parameter_schema": "{\"username\": {\"type\": \"string\", \"description\": \"User login name\"}}",
            "test_results": "[{\"input\": {\"username\": \"jdoe\"}, \"output\": \"success\"}]"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9d8b3e-6e2f-4c12-9a9b-ee91d350e7c8",
        "name": "Tool_Finder",
        "description": "Retrieve related tools based on a description with advanced functionality.",
        "detailed_description": "Retrieve related tools from the toolbox based on the provided description, advanced version with more functionality.",
        "toolType": "Tool Finder Tool",
        "tags": [
            "advanced-tool-selector",
            "api-integration",
            "category-filtering",
            "description-based-search",
            "developer-productivity",
            "embedding-based-retrieval",
            "natural-language-query",
            "semantic-tool-matching",
            "tool-discovery",
            "tool-recommendation",
            "toolbox-search",
            "workflow-automation"
        ],
        "category": "ToolFinderEmbedding",
        "lab": "Zitnik Lab",
        "source": "mims-harvard-toolrag-t1-gte-qwen2-1.5b",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve related tools based on description",
            "Limit the number of tools returned",
            "Exclude pre-selected tool names",
            "Optionally return prompts and tool names",
            "Filter tools by categories"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "description": {
                "type": "string",
                "description": "The description of the tool capability required."
            },
            "limit": {
                "type": "integer",
                "description": "The number of tools to retrieve"
            },
            "picked_tool_names": {
                "type": "array",
                "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools."
            },
            "return_call_result": {
                "type": "boolean",
                "description": "Whether to return both prompts and tool names. If false, returns only tool prompts."
            },
            "categories": {
                "type": "array",
                "description": "Optional list of tool categories to filter by"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the tool capability required.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of tools to retrieve",
                    "required": true
                },
                "picked_tool_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools.",
                    "required": false
                },
                "return_call_result": {
                    "type": "boolean",
                    "description": "Whether to return both prompts and tool names. If false, returns only tool prompts.",
                    "required": false
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of tool categories to filter by",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "description": "Find tools for data visualization",
            "limit": 5,
            "picked_tool_names": [
                "Tool_A",
                "Tool_B"
            ],
            "return_call_result": true,
            "categories": [
                "Database",
                "AI Agent"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a23f8c9e-bf4d-42d0-8e73-159c0f3a1332",
        "name": "Tool_Finder_LLM",
        "description": "LLM-based tool finder that uses NLP to select relevant tools based on user queries.",
        "detailed_description": "LLM-based tool finder that uses natural language processing to intelligently select relevant tools based on user queries. This tool analyzes all available tool descriptions and uses an LLM to determine which tools would be most helpful for a given task or question.",
        "toolType": "Tool Finder Tool",
        "tags": [
            "ai-assistant-integration",
            "description-based-filtering",
            "dynamic-tool-picker",
            "knowledge-management",
            "llm-based-tool-discovery",
            "nlp-driven-selection",
            "plugin-discovery",
            "prompt-and-tool-output",
            "query-to-tools-mapping",
            "resource-discovery",
            "semantic-tool-search",
            "tool-recommendation-engine"
        ],
        "category": "ToolFinderLLM",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Selects relevant tools using natural language processing",
            "Analyzes tool descriptions to choose appropriate tools",
            "Filters tools by categories and excludes specified tools",
            "Returns tool prompts and optionally tool names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "description": {
                "type": "string",
                "description": "The description of the tool capability required."
            },
            "limit": {
                "type": "integer",
                "description": "The number of tools to retrieve"
            },
            "picked_tool_names": {
                "type": "array",
                "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools."
            },
            "return_call_result": {
                "type": "boolean",
                "description": "Whether to return both prompts and tool names. If false, returns only tool prompts."
            },
            "categories": {
                "type": "array",
                "description": "Optional list of tool categories to filter by"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the tool capability required."
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of tools to retrieve"
                },
                "picked_tool_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools."
                },
                "return_call_result": {
                    "type": "boolean",
                    "description": "Whether to return both prompts and tool names. If false, returns only tool prompts."
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of tool categories to filter by"
                }
            },
            "required": [
                "description",
                "limit"
            ]
        },
        "exampleInput": {
            "description": "Find summarization tools",
            "limit": 5,
            "picked_tool_names": [
                "ToolA",
                "ToolB"
            ],
            "return_call_result": true,
            "categories": [
                "Text",
                "Summarization"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d2b1f23-4a56-7890-bcde-f123456789ab",
        "name": "Tool_Finder_Keyword",
        "description": "Keyword-based tool finder for discovering relevant tools via text matching.",
        "detailed_description": "Simple keyword-based tool finder for discovering relevant tools using text matching",
        "toolType": "Tool Finder Tool",
        "tags": [
            "category-filtering",
            "information-retrieval",
            "keyword-based-search",
            "metadata-search",
            "parameter-driven-query",
            "query-processor",
            "relevance-ranking",
            "result-filtering",
            "semantic-search",
            "text-matching",
            "tool-discovery",
            "tool-recommendation"
        ],
        "category": "ToolFinderKeyword",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Keyword-based tool search",
            "Limit number of tools to retrieve",
            "Exclude pre-selected tools",
            "Optional return of call results",
            "Filter by tool categories"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "description": {
                "type": "string",
                "description": "The description of the tool capability required."
            },
            "limit": {
                "type": "integer",
                "description": "The number of tools to retrieve"
            },
            "picked_tool_names": {
                "type": "array",
                "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools."
            },
            "return_call_result": {
                "type": "boolean",
                "description": "Whether to return both prompts and tool names. If false, returns only tool prompts."
            },
            "categories": {
                "type": "array",
                "description": "Optional list of tool categories to filter by"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the tool capability required.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of tools to retrieve",
                    "required": true
                },
                "picked_tool_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Pre-selected tool names to process. If provided, tool selection will skip these tools.",
                    "required": false
                },
                "return_call_result": {
                    "type": "boolean",
                    "description": "Whether to return both prompts and tool names. If false, returns only tool prompts.",
                    "required": false
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of tool categories to filter by",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "description": "Find tools for data preprocessing",
            "limit": 5,
            "picked_tool_names": [
                "ToolA",
                "ToolB"
            ],
            "return_call_result": true,
            "categories": [
                "Database",
                "ML Model"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b07384-d9f4-45c7-8e3b-3a4f6b1c9d72",
        "name": "mcp_auto_loader_uspto_downloader",
        "description": "Downloads USPTO patent documents (abstract, claims, and full application text) using MCP protocol.",
        "detailed_description": "Download USPTO patent documents (abstract, claims, and full application text) using MCP protocol",
        "toolType": "MCP",
        "tags": [
            "bulk-patent-download",
            "data-pipeline",
            "document-retrieval",
            "full-text-retrieval",
            "ip-data-ingestion",
            "legal-tech-automation",
            "mcp-protocol-download",
            "patent-abstract-extraction",
            "patent-claims-extraction",
            "patent-downloader",
            "patent-text-mining",
            "uspto-patent-documents"
        ],
        "category": "MCPAutoLoaderTool",
        "lab": "Zitnik Lab",
        "source": "USPTO",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Download patent abstract",
            "Download patent claims",
            "Download full application text"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {},
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "ADMETAI_predict_physicochemical_properties",
        "description": "Predicts key physicochemical properties for molecules in SMILES format.",
        "detailed_description": "Predicts physicochemical properties (molecular weight, logP, hydrogen bond acceptors/donors, Lipinski, QED, stereo centers, TPSA) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-property-prediction",
            "cheminformatics-descriptors",
            "drug-discovery-support",
            "hydrogen-bond-count",
            "lipinski-rule-assessment",
            "logp-estimation",
            "molecular-weight-calculation",
            "physicochemical-prediction",
            "qed-scoring",
            "smiles-input",
            "stereocenter-detection",
            "tpsa-calculation"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predict molecular weight",
            "Predict logP",
            "Predict hydrogen bond acceptors",
            "Predict hydrogen bond donors",
            "Evaluate Lipinski rule of five compliance",
            "Compute QED score",
            "Identify stereocenters",
            "Calculate TPSA"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array of strings",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "C1CCCCC1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b9ad0633-ccfa-4c49-b8c6-ba3cdd23a981",
        "name": "ADMETAI_predict_CYP_interactions",
        "description": "Predicts CYP enzyme interactions for a given list of molecular SMILES.",
        "detailed_description": "Predicts CYP enzyme interactions for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-profile-prediction",
            "chemical-structure-analysis",
            "cheminformatics",
            "computational-chemistry",
            "cyp-interaction-prediction",
            "cytochrome-p450-binding",
            "drug-discovery-assistance",
            "drug-metabolism-prediction",
            "enzyme-substrate-prediction",
            "metabolic-risk-assessment",
            "pharmacokinetic-modeling",
            "smiles-input",
            "toxicity-screening"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Accepts a list of SMILES strings",
            "Predicts interactions for multiple CYP isoforms (CYP1A2, CYP2C19, CYP2C9, CYP2D6, CYP3A4)",
            "Outputs predictions based on Veith and CarbonMangels metrics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "CC(=O)O"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f6a2e7f9-cb5a-4e9f-9440-3b9c1e5a8d2f",
        "name": "ADMETAI_predict_BBB_penetrance",
        "description": "Predict BBB penetrance of molecules from SMILES.",
        "detailed_description": "Predicts blood-brain barrier (BBB) penetrance for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-profiling",
            "bbb-penetration-prediction",
            "blood-brain-barrier-permeability",
            "chemoinformatics",
            "cns-drug-design",
            "computational-chemistry",
            "drug-discovery",
            "in-silico-permeability",
            "machine-learning-prediction",
            "permeability-assessment",
            "pharmacokinetics-analysis",
            "smiles-input-processing"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predict BBB penetrance",
            "Accepts SMILES input",
            "Processes multiple molecules"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "C1=CC=CC=C1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b92a3e-5b4c-4f45-9fa9-3c6b8d9a2e14",
        "name": "ADMETAI_predict_toxicity",
        "description": "Predicts various toxicity endpoints for molecules given in SMILES format.",
        "detailed_description": "Predicts toxicity endpoints (AMES, Carcinogens_Lagunin, ClinTox, DILI, LD50_Zhu, Skin_Reaction, hERG) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "acute-toxicity-estimation",
            "admet-toxicity",
            "ames-test-prediction",
            "carcinogenicity-prediction",
            "cheminformatics",
            "computational-toxicology",
            "drug-induced-liver-injury-prediction",
            "herg-blocker-prediction",
            "in-silico-toxicology",
            "machine-learning",
            "skin-sensitization-prediction",
            "smiles-input",
            "toxicity-prediction"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predict AMES endpoint",
            "Predict Carcinogens_Lagunin endpoint",
            "Predict ClinTox endpoint",
            "Predict DILI endpoint",
            "Predict LD50_Zhu endpoint",
            "Predict Skin_Reaction endpoint",
            "Predict hERG endpoint"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "C1=CC=CC=C1",
                "CC(=O)O"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29b8e1-1b3a-4c94-9f8d-2d8a3f5b6c9e",
        "name": "ADMETAI_predict_bioavailability",
        "description": "Predicts bioavailability endpoints for molecules in SMILES format.",
        "detailed_description": "Predicts bioavailability endpoints (Bioavailability_Ma, HIA_Hou, PAMPA_NCATS, Caco2_Wang, Pgp_Broccatelli) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "adme-profiling",
            "admet-prediction",
            "bioavailability-prediction",
            "caco2-permeability",
            "cheminformatics-model",
            "computational-pharmacology",
            "drug-absorption-prediction",
            "drug-discovery-support",
            "human-intestinal-absorption",
            "in-silico-absorption",
            "pamppa-permeability",
            "pgp-efflux-prediction",
            "pharmacokinetic-profiling",
            "smiles-input-format"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predicts Bioavailability_Ma",
            "Predicts HIA_Hou",
            "Predicts PAMPA_NCATS",
            "Predicts Caco2_Wang",
            "Predicts Pgp_Broccatelli",
            "Accepts list of SMILES strings"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array of string",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "c1ccccc1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "ADMETAI_predict_clearance_distribution",
        "description": "Predicts clearance and distribution endpoints for molecules using their SMILES representations.",
        "detailed_description": "Predicts clearance and distribution endpoints (Clearance_Hepatocyte_AZ, Clearance_Microsome_AZ, Half_Life_Obach, VDss_Lombardo, PPBR_AZ) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-prediction",
            "chemoinformatics",
            "clearance-prediction",
            "distribution-prediction",
            "drug-discovery",
            "half-life-estimation",
            "hepatocyte-clearance",
            "in-silico-pharmacokinetics",
            "lead-optimization",
            "microsomal-clearance",
            "pharmacokinetic-modeling",
            "plasma-protein-binding",
            "smiles-input",
            "volume-of-distribution"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predicts clearance endpoints (Hepatocyte, Microsome)",
            "Predicts distribution endpoints (Half-life, VDss, PPBR)",
            "Processes input SMILES strings"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "CNC(=O)C"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f1d2a34-5c6b-4d77-8f50-1e7fb2ae630d",
        "name": "ADMETAI_predict_nuclear_receptor_activity",
        "description": "Predict nuclear receptor activity for molecules in SMILES format.",
        "detailed_description": "Predicts nuclear receptor activity endpoints (NR-AR-LBD, NR-AR, NR-AhR, NR-Aromatase, NR-ER-LBD, NR-ER, NR-PPAR-gamma) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-activity-prediction",
            "ahr-activation-prediction",
            "ar-receptor-prediction",
            "aromatase-inhibition-prediction",
            "bioactivity-prediction",
            "cheminformatics",
            "drug-discovery",
            "er-receptor-prediction",
            "in-silico-screening",
            "ligand-binding-domain-analysis",
            "nuclear-receptor-activity-prediction",
            "ppar-gamma-prediction",
            "smiles-input",
            "virtual-screening"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predict activity for multiple nuclear receptors",
            "Accepts SMILES format input",
            "Outputs endpoints: NR-AR-LBD, NR-AR, NR-AhR, NR-Aromatase, NR-ER-LBD, NR-ER, NR-PPAR-gamma"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "c1ccccc1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f1d2bc-3b54-4a9a-a230-8ee3b0f957c2",
        "name": "ADMETAI_predict_stress_response",
        "description": "Predicts stress response endpoints for molecules in SMILES format.",
        "detailed_description": "Predicts stress response endpoints (SR-ARE, SR-ATAD5, SR-HSE, SR-MMP, SR-p53) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "adme-tox-prediction",
            "drug-safety-assessment",
            "genotoxicity-assessment",
            "molecular-toxicity-modeling",
            "predictive-cheminformatics",
            "smiles-input",
            "sr-are-prediction",
            "sr-atad5-prediction",
            "sr-hse-prediction",
            "sr-mmp-prediction",
            "sr-p53-prediction",
            "stress-response-prediction",
            "toxicological-screening"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predicts stress response endpoints",
            "Supports multiple endpoints: SR-ARE, SR-ATAD5, SR-HSE, SR-MMP, SR-p53",
            "Accepts list of SMILES strings as input"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "c1ccccc1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2c56db5-dffb-48d2-b060-d0f5a71096e0",
        "name": "ADMETAI_predict_solubility_lipophilicity_hydration",
        "description": "Predicts solubility, lipophilicity, and hydration endpoints for input molecules given as SMILES.",
        "detailed_description": "Predicts solubility, lipophilicity, and hydration endpoints (Solubility_AqSolDB, Lipophilicity_AstraZeneca, HydrationFreeEnergy_FreeSolv) for a given list of molecules in SMILES format.",
        "toolType": "ML Model",
        "tags": [
            "admet-prediction",
            "aqueous-solubility",
            "cheminformatics",
            "computational-chemistry",
            "drug-discovery",
            "free-energy-of-hydration",
            "hydration-energy-prediction",
            "in-silico-modeling",
            "lipophilicity-prediction",
            "logp-estimation",
            "molecular-property-prediction",
            "pharmacokinetics",
            "physicochemical-properties",
            "smiles-input",
            "solubility-prediction"
        ],
        "category": "ADMETAITool",
        "lab": "Zitnik Lab",
        "source": "ADMETAI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Solubility prediction (AqSolDB)",
            "Lipophilicity prediction (AstraZeneca)",
            "Hydration free energy prediction (FreeSolv)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "array",
                "description": "The list of SMILES strings."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of SMILES strings."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": [
                "CCO",
                "c1ccccc1"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5d9f1c3a-2b4e-4d6f-9a7b-8c2e4f3d5a6b",
        "name": "EuropePMC_search_articles",
        "description": "Search for Europe PMC articles by keywords, returning titles, abstracts, journals, publication years, and URLs.",
        "detailed_description": "Search for articles on Europe PMC including abstracts. The tool queries the Europe PMC web service using provided keywords and returns articles with details such as title, abstract, journal, publication year, and a URL to the full article.",
        "toolType": "API",
        "tags": [
            "abstract-fetching",
            "article-retrieval",
            "biomedical-literature",
            "europe-pmc-api",
            "full-text-link",
            "journal-publication",
            "keyword-search",
            "literature-search",
            "publication-year-filter",
            "query-based-search",
            "research-articles",
            "scientific-publications"
        ],
        "category": "EuropePMCTool",
        "lab": "Zitnik Lab",
        "source": "Europe PMC",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search Europe PMC articles by keyword",
            "Retrieve article abstracts",
            "Return article metadata including title, journal, publication year, and URL"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query for Europe PMC. Use keywords separated by spaces to refine your search."
            },
            "limit": {
                "type": "integer",
                "description": "Number of articles to return. This sets the maximum number of articles retrieved from Europe PMC."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Search query for Europe PMC. Use keywords separated by spaces to refine your search."
                },
                "limit": {
                    "type": "integer",
                    "description": "Number of articles to return. This sets the maximum number of articles retrieved from Europe PMC.",
                    "default": 5
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer therapy",
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c9f1c60-7afb-4a01-8f7d-4b1c9d2f6c2a",
        "name": "get_webpage_title",
        "description": "Fetches a webpage and returns its title tag content.",
        "detailed_description": "Fetch a webpage and return the content of its <title> tag.",
        "toolType": "API",
        "tags": [
            "content-discovery",
            "data-mining",
            "html-title-parsing",
            "http-request",
            "http-response-handling",
            "metadata-extraction",
            "page-title-fetcher",
            "seo-title-extraction",
            "text-content-extraction",
            "title-tag-scraping",
            "url-fetching",
            "web-scraping",
            "webpage-title-extraction"
        ],
        "category": "URLHTMLTagTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch HTML content from a given URL",
            "Extract the text within the specified <title> HTML tag",
            "Return the extracted title text under the 'title' key"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "url": {
                "type": "string",
                "description": "HTTP or HTTPS URL to fetch (e.g. https://www.example.com)"
            },
            "timeout": {
                "type": "integer",
                "description": "Request timeout in seconds"
            }
        },
        "inputSchema": {
            "type": "object",
            "required": [
                "url"
            ],
            "additionalProperties": false,
            "properties": {
                "url": {
                    "type": "string",
                    "description": "HTTP or HTTPS URL to fetch (e.g. https://www.example.com)",
                    "format": "uri",
                    "minLength": 10
                },
                "timeout": {
                    "type": "integer",
                    "description": "Request timeout in seconds",
                    "minimum": 1,
                    "maximum": 300,
                    "default": 20
                }
            }
        },
        "exampleInput": {
            "url": "https://www.example.com",
            "timeout": 30
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c8d2-1f2a-4a3b-9c2d-5e6f7a8b9c0d",
        "name": "get_webpage_text_from_url",
        "description": "Render a URL as PDF and extract its text (JavaScript supported).",
        "detailed_description": "Render a URL as PDF and extract its text (JavaScript supported).",
        "toolType": "API",
        "tags": [
            "content-indexing",
            "data-mining",
            "document-conversion",
            "headless-browser-rendering",
            "html-to-text-conversion",
            "javascript-rendering",
            "pdf-text-extraction",
            "url-fetching",
            "url-to-pdf-conversion",
            "web-scraping",
            "webpage-text-extraction",
            "website-archiving"
        ],
        "category": "URLToPDFTextTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Render a URL to PDF",
            "Extract text from PDF",
            "JavaScript support",
            "Configurable timeout"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "url": {
                "type": "string",
                "description": "Webpage URL to fetch and render"
            },
            "timeout": {
                "type": "integer",
                "description": "Request timeout in seconds"
            }
        },
        "inputSchema": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Webpage URL to fetch and render",
                    "format": "uri"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Request timeout in seconds",
                    "minimum": 5,
                    "maximum": 120,
                    "default": 30
                }
            }
        },
        "exampleInput": {
            "url": "https://example.com",
            "timeout": 30
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f2a93b27-8ec9-4c2a-ad63-a7439dcfd123",
        "name": "MedlinePlus_search_topics_by_keyword",
        "description": "Search MedlinePlus for relevant health topics or sub-library information by keyword.",
        "detailed_description": "Search for relevant information in MedlinePlus Web Service by keyword across health topics or other sub-libraries (such as drugs, genetics, etc.).",
        "toolType": "API",
        "tags": [
            "bilingual-content-search",
            "brief-response-format",
            "detailed-topic-lookup",
            "drug-information-search",
            "genetics-data-access",
            "health-information-retrieval",
            "health-topic-search",
            "keyword-based-retrieval",
            "medlineplus-rest-api",
            "medlineplus-search",
            "url-encoded-query",
            "xml-record-fetch"
        ],
        "category": "MedlinePlusRESTTool",
        "lab": "Zitnik Lab",
        "source": "MedlinePlus",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MedlinePlus by keyword across health topics and sub-libraries",
            "Filter searches by database (healthTopics, healthTopicsSpanish, drugs, etc.)",
            "Specify result return format (brief, topic, all)",
            "Return MedlinePlus Web Service XML responses"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "term": {
                "type": "string",
                "description": "Search keyword, e.g., \"diabetes\", needs to be URL encoded before passing."
            },
            "db": {
                "type": "string",
                "description": "Specify the database to search, e.g., healthTopics (English health topics), healthTopicsSpanish (Spanish health topics), drugs (English drugs), etc."
            },
            "rettype": {
                "type": "string",
                "description": "Result return format, options: brief (concise information, default), topic (detailed XML record), all (includes all available information)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "term": {
                    "type": "string",
                    "description": "Search keyword, e.g., \"diabetes\", needs to be URL encoded before passing."
                },
                "db": {
                    "type": "string",
                    "enum": [
                        "healthTopics",
                        "healthTopicsSpanish",
                        "drugs",
                        "drugsSpanish",
                        "genetics",
                        "medicalTests",
                        "medicalEncyclopedia"
                    ],
                    "description": "Specify the database to search, e.g., healthTopics (English health topics), healthTopicsSpanish (Spanish health topics), drugs (English drugs), etc."
                },
                "rettype": {
                    "type": "string",
                    "enum": [
                        "brief",
                        "topic",
                        "all"
                    ],
                    "description": "Result return format, options: brief (concise information, default), topic (detailed XML record), all (includes all available information).",
                    "default": "topic"
                }
            },
            "required": [
                "term",
                "db"
            ]
        },
        "exampleInput": {
            "term": "cancer",
            "db": "healthTopics",
            "rettype": "topic"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9d3d9a-2b8d-4cf8-9bc7-7a1eb8a9a3c4",
        "name": "OpenTargets_multi_entity_search_by_query_string",
        "description": "Search multiple entities using a query string with optional filters and pagination.",
        "detailed_description": "Perform a multi-entity search based on a query string, filtering by entity names and pagination settings.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "biomedical-query",
            "cross-entity-query",
            "data-retrieval",
            "disease-association",
            "drug-discovery",
            "entity-filtering",
            "genomics-search",
            "multi-entity-search",
            "open-targets-search",
            "pagination-support",
            "pharmacology-data",
            "query-string-search",
            "target-disease-drug",
            "target-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform multi-entity searches using a query string",
            "Filter results by specified entity names",
            "Support pagination with index and size parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "queryString": {
                "type": "string",
                "description": "The search string for querying information."
            },
            "entityNames": {
                "type": "array",
                "description": "List of entity names to search for (e.g., target, disease, drug)."
            },
            "page": {
                "type": "object",
                "description": "Pagination settings with index and size."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "queryString": {
                    "type": "string",
                    "description": "The search string for querying information.",
                    "required": true
                },
                "entityNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of entity names to search for (e.g., target, disease, drug).",
                    "required": false
                },
                "page": {
                    "type": "object",
                    "properties": {
                        "index": {
                            "type": "integer",
                            "description": "Pagination index.",
                            "required": "True"
                        },
                        "size": {
                            "type": "integer",
                            "description": "Pagination size.",
                            "required": "True"
                        }
                    },
                    "description": "Pagination settings with index and size.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "queryString": "BRCA1",
            "entityNames": [
                "target",
                "disease"
            ],
            "page": {
                "index": 1,
                "size": 10
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2c1e3d1a-4f7b-4f33-b5f3-1e2a3b4c5d6e",
        "name": "OpenTargets_get_gene_ontology_terms_by_goID",
        "description": "Fetch Gene Ontology term IDs and names for given GO IDs via OpenTargets.",
        "detailed_description": "Retrieve Gene Ontology terms based on a list of GO IDs.",
        "toolType": "API",
        "tags": [
            "array-input-processing",
            "bio-ontology-access",
            "computational-biology",
            "data-fetching-api",
            "functional-annotation",
            "functional-genomics",
            "gene-ontology",
            "go-term-retrieval",
            "goid-to-term",
            "id-based-query",
            "ontology-lookup",
            "open-targets-integration",
            "standardized-annotation"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Gene Ontology terms using GO IDs",
            "Returns GO term id and name via GraphQL API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "goIds": {
                "type": "array",
                "description": "A list of Gene Ontology (GO) IDs to fetch the corresponding terms."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "goIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of Gene Ontology (GO) IDs to fetch the corresponding terms.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "goIds": [
                "GO:0008150",
                "GO:0003674"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f4c08f49-2e96-478d-8f12-d736c25ef1e3",
        "name": "OpenTargets_get_target_constraint_info_by_ensemblID",
        "description": "Fetch genetic constraint metrics for a given Ensembl ID.",
        "detailed_description": "Retrieve genetic constraint information for a specific target ensemblID, including expected and observed values, and scores.",
        "toolType": "API",
        "tags": [
            "constraint-scores",
            "disease-gene-discovery",
            "ensembl-id-query",
            "expected-variant-count",
            "functional-genomics",
            "genetic-constraint",
            "observed-variant-count",
            "open-targets-api",
            "pli-score",
            "population-genetics",
            "target-annotation",
            "variant-constraint-analysis"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves genetic constraint data for a given Ensembl ID",
            "Provides expected, observed, and o/e ratio values",
            "Returns constraint score and related metrics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d7f8a0c4-e588-4c79-9aad-12f8e4b8d3ef",
        "name": "OpenTargets_get_publications_by_disease_efoId",
        "description": "Retrieve publications related to a disease EFO ID, including PubMed and PMC IDs with dates.",
        "detailed_description": "Retrieve publications related to a disease efoId, including PubMed IDs and publication dates.",
        "toolType": "API",
        "tags": [
            "bibliometric-data-collection",
            "biomedical-literature-search",
            "computational-biology-tool",
            "disease-articles-extraction",
            "disease-literature-mining",
            "efo-ontology-search",
            "entity-id-query",
            "evidence-based-research",
            "open-targets-integration",
            "publication-temporal-filtering",
            "pubmed-id-fetch",
            "pubmed-publication-retrieval"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve publications for a disease using its EFO ID",
            "Filter search by additional identifiers",
            "Filter publications by date range",
            "Return counts and earliest publication year",
            "Provide PubMed and PMC IDs with publication dates",
            "Include sentence-level context with matched entities"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entityId": {
                "type": "string",
                "description": "The ID of the entity (efoId)."
            },
            "additionalIds": {
                "type": "array",
                "description": "List of additional IDs to include in the search."
            },
            "startYear": {
                "type": "integer",
                "description": "Year at the lower end of the filter."
            },
            "startMonth": {
                "type": "integer",
                "description": "Month at the lower end of the filter."
            },
            "endYear": {
                "type": "integer",
                "description": "Year at the higher end of the filter."
            },
            "endMonth": {
                "type": "integer",
                "description": "Month at the higher end of the filter."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "The ID of the entity (efoId).",
                    "required": true
                },
                "additionalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional IDs to include in the search.",
                    "required": false
                },
                "startYear": {
                    "type": "integer",
                    "description": "Year at the lower end of the filter.",
                    "required": false
                },
                "startMonth": {
                    "type": "integer",
                    "description": "Month at the lower end of the filter.",
                    "required": false
                },
                "endYear": {
                    "type": "integer",
                    "description": "Year at the higher end of the filter.",
                    "required": false
                },
                "endMonth": {
                    "type": "integer",
                    "description": "Month at the higher end of the filter.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "entityId": "EFO_0000311",
            "additionalIds": [
                "UMLS:C0011849"
            ],
            "startYear": 2010,
            "startMonth": 1,
            "endYear": 2020,
            "endMonth": 12
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f1e8b7f8-03a3-4c16-b5a1-d0f5997b876d",
        "name": "OpenTargets_get_publications_by_target_ensemblID",
        "description": "Retrieve publications for a given target Ensembl ID, including PubMed IDs and dates.",
        "detailed_description": "Retrieve publications related to a target ensemblID, including PubMed IDs and publication dates.",
        "toolType": "API",
        "tags": [
            "api-data-extraction",
            "bibliometric-analysis",
            "biomedical-literature",
            "ensembl-id-query",
            "gene-literature-mining",
            "literature-curation",
            "open-targets-integration",
            "publication-fetch",
            "pubmed-publication-retrieval",
            "target-publication-search",
            "temporal-filtering",
            "translational-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch publications for a target using Ensembl ID",
            "Provide publication counts and filtered counts",
            "Return earliest publication year",
            "Retrieve publication details including PubMed ID and PMCID",
            "Extract sentences with matched labels",
            "Filter publications by date range"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entityId": {
                "type": "string",
                "description": "The ID of the entity (ensemblID)."
            },
            "additionalIds": {
                "type": "array",
                "description": "List of additional IDs to include in the search."
            },
            "startYear": {
                "type": "integer",
                "description": "Year at the lower end of the filter."
            },
            "startMonth": {
                "type": "integer",
                "description": "Month at the lower end of the filter."
            },
            "endYear": {
                "type": "integer",
                "description": "Year at the higher end of the filter."
            },
            "endMonth": {
                "type": "integer",
                "description": "Month at the higher end of the filter."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "The ID of the entity (ensemblID).",
                    "required": true
                },
                "additionalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional IDs to include in the search.",
                    "required": false
                },
                "startYear": {
                    "type": "integer",
                    "description": "Year at the lower end of the filter.",
                    "required": false
                },
                "startMonth": {
                    "type": "integer",
                    "description": "Month at the lower end of the filter.",
                    "required": false
                },
                "endYear": {
                    "type": "integer",
                    "description": "Year at the higher end of the filter.",
                    "required": false
                },
                "endMonth": {
                    "type": "integer",
                    "description": "Month at the higher end of the filter.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "entityId": "ENSG00000141510",
            "additionalIds": [
                "P04637",
                "7157"
            ],
            "startYear": 2000,
            "startMonth": 1,
            "endYear": 2023,
            "endMonth": 12
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa2b1c75-6d45-4cc8-9d2a-1e5b345a5678",
        "name": "OpenTargets_get_publications_by_drug_chemblId",
        "description": "Fetch publications for a drug by its ChEMBL ID, including identifiers and publication dates.",
        "detailed_description": "Retrieve publications related to a drug chemblId, including PubMed IDs and publication dates.",
        "toolType": "API",
        "tags": [
            "bibliographic-data-fetch",
            "biomedical-text-mining",
            "chembl-publication-retrieval",
            "cheminformatics-literature",
            "drug-discovery-research",
            "drug-literature-mining",
            "drug-publication-search",
            "entity-id-query",
            "id-based-literature-search",
            "multi-identifier-search",
            "publication-date-filter",
            "pubmed-id-extraction",
            "small-molecule-publications",
            "temporal-filtering"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve publications for a given ChEMBL ID",
            "Filter results by additional IDs",
            "Filter publications within a specific date range",
            "Return PubMed and PMC identifiers with publication dates",
            "Extract sentences with matched entities and labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entityId": {
                "type": "string",
                "description": "The ID of the entity (chemblId)."
            },
            "additionalIds": {
                "type": "array",
                "description": "List of additional IDs to include in the search."
            },
            "startYear": {
                "type": "integer",
                "description": "Year at the lower end of the filter."
            },
            "startMonth": {
                "type": "integer",
                "description": "Month at the lower end of the filter."
            },
            "endYear": {
                "type": "integer",
                "description": "Year at the higher end of the filter."
            },
            "endMonth": {
                "type": "integer",
                "description": "Month at the higher end of the filter."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "The ID of the entity (chemblId).",
                    "required": true
                },
                "additionalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of additional IDs to include in the search.",
                    "required": false
                },
                "startYear": {
                    "type": "integer",
                    "description": "Year at the lower end of the filter.",
                    "required": false
                },
                "startMonth": {
                    "type": "integer",
                    "description": "Month at the lower end of the filter.",
                    "required": false
                },
                "endYear": {
                    "type": "integer",
                    "description": "Year at the higher end of the filter.",
                    "required": false
                },
                "endMonth": {
                    "type": "integer",
                    "description": "Month at the higher end of the filter.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "entityId": "CHEMBL25",
            "additionalIds": [
                "CHEMBL1234",
                "CHEMBL5678"
            ],
            "startYear": 2015,
            "startMonth": 1,
            "endYear": 2020,
            "endMonth": 12
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e6a48fdd-7e0a-4d6e-9b5f-91b4c2d7a8e3",
        "name": "OpenTargets_get_target_id_description_by_name",
        "description": "Get the Ensembl ID and description by target name.",
        "detailed_description": "Get the ensemblId and description based on the target name.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "disease-target-annotation",
            "drug-target-discovery",
            "ensembl-id-retrieval",
            "functional-genomics",
            "gene-annotation",
            "gene-identifier-mapping",
            "gene-target-lookup",
            "genomic-target-identification",
            "open-targets-api",
            "target-annotation",
            "target-description-fetching",
            "target-name-to-id"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "open-target",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for targets by name",
            "Retrieve Ensembl ID",
            "Retrieve target description by name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "targetName": {
                "type": "string",
                "description": "The name of the target for which the ID is required."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "targetName": {
                    "type": "string",
                    "description": "The name of the target for which the ID is required.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "targetName": "TP53"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c7e4b5a2-92e0-4fa8-a638-2fda3c4b9f28",
        "name": "run_pinnacle_ppi_retrieval",
        "description": "Retrieve cell-type-specific protein-protein interaction embeddings from PINNACLE.",
        "detailed_description": "Retrieves cell-type-specific protein-protein interaction embeddings from PINNACLE. This tool provides access to pre-computed PINNACLE (Protein Interaction Network Contextualized Learning) embeddings that represent protein-protein interactions in specific cellular contexts. These embeddings encode functional relationships between proteins as dense vector representations, capturing both direct physical interactions and functional associations.",
        "toolType": "ML Model",
        "tags": [
            "bioinformatics",
            "cell-context-analysis",
            "cell-type-ppi-embeddings",
            "contextualized-ppi-vectors",
            "deep-learning-embeddings",
            "functional-genomics",
            "network-representation-learning",
            "pinnacle-ppi-embeddings",
            "ppi-embedding-retrieval",
            "protein-interaction-vectors",
            "pytorch-embeddings-pth",
            "systems-biology",
            "tissue-specific-ppi"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "pinnacle",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve embeddings for a specified cell type",
            "Intelligently match flexible cell type names to available data",
            "Return protein-to-embedding mappings as dense vectors"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cell_type": {
                "type": "string",
                "description": "Target cell type for embedding retrieval. Supports flexible naming: Standard formats: 'b_cell', 'hepatocyte', 'cardiomyocyte'; Alternative formats: 'B-cell', 'T cell', 'NK cells'; Tissue types: 'liver', 'heart', 'brain', 'immune'. The tool performs intelligent matching to find the best available match."
            },
            "embed_path": {
                "type": "string",
                "description": "Path to the PINNACLE embeddings file (.pth format). If None, uses PINNACLE_DATA_PATH/pinnacle_embeds/ppi_embed_dict.pth."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cell_type": {
                    "type": "string",
                    "description": "Target cell type for embedding retrieval. Supports flexible naming: Standard formats: 'b_cell', 'hepatocyte', 'cardiomyocyte'; Alternative formats: 'B-cell', 'T cell', 'NK cells'; Tissue types: 'liver', 'heart', 'brain', 'immune'. The tool performs intelligent matching to find the best available match."
                },
                "embed_path": {
                    "type": "string",
                    "description": "Path to the PINNACLE embeddings file (.pth format). If None, uses PINNACLE_DATA_PATH/pinnacle_embeds/ppi_embed_dict.pth."
                }
            },
            "required": [
                "cell_type"
            ]
        },
        "exampleInput": {
            "cell_type": "hepatocyte",
            "embed_path": "/data/pinnacle_embeds/ppi_embed_dict.pth"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a12f3e45-6789-4abc-def0-123456789abc",
        "name": "boltz2_docking",
        "description": "Performs protein-ligand docking with Boltz-2 to predict complex structures and confidence scores from a protein sequence and ligand SMILES.",
        "detailed_description": "Perform protein-ligand docking via Boltz-2: input a protein sequence plus one or more ligands (SMILES), get back predicted structures and confidence scores.",
        "toolType": "ML Model",
        "tags": [
            "binding-affinity-scoring",
            "boltz-diffusion-model",
            "computational-chemistry",
            "confidence-score-estimation",
            "diffusion-sampling",
            "drug-discovery",
            "force-field-potentials",
            "overfold-iterations",
            "protein-ligand-docking",
            "protein-sequence-input",
            "smiles-ligand-input",
            "structural-biology",
            "structure-prediction",
            "virtual-screening"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Protein-ligand docking via Boltz-2",
            "Accepts protein sequence and ligand SMILES inputs",
            "Predicts complex structures",
            "Provides confidence and affinity predictions",
            "Configurable sampling and diffusion parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "sequence": {
                "type": "string",
                "description": "One-letter amino acid sequence of the target protein (FASTA format, without header)."
            },
            "ligands": {
                "type": "array",
                "description": "List of ligand definitions to dock against the protein."
            },
            "recycling_steps": {
                "type": "integer",
                "description": "Number of recycling steps (overfold iterations)."
            },
            "sampling_steps": {
                "type": "integer",
                "description": "Number of sampling steps for diffusion process."
            },
            "diffusion_samples": {
                "type": "integer",
                "description": "How many diffusion-sampled structures to generate."
            },
            "step_scale": {
                "type": "number",
                "description": "Scaling factor for diffusion step size."
            },
            "use_potentials": {
                "type": "boolean",
                "description": "If true, omit external force-field potentials from the diffusion process."
            },
            "return_structure": {
                "type": "boolean",
                "description": "If false, the predicted structure will not be read or returned. Defaults to false."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "sequence": {
                    "type": "string",
                    "description": "One-letter amino acid sequence of the target protein (FASTA format, without header)."
                },
                "ligands": {
                    "type": "array",
                    "description": "List of ligand definitions to dock against the protein.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "Arbitrary ligand identifier (e.g. \"L1\")."
                            },
                            "smiles": {
                                "type": "string",
                                "description": "Ligand SMILES string."
                            }
                        },
                        "required": [
                            "id",
                            "smiles"
                        ]
                    }
                },
                "recycling_steps": {
                    "type": "integer",
                    "description": "Number of recycling steps (overfold iterations).",
                    "default": 3,
                    "minimum": 0
                },
                "sampling_steps": {
                    "type": "integer",
                    "description": "Number of sampling steps for diffusion process.",
                    "default": 200,
                    "minimum": 1
                },
                "diffusion_samples": {
                    "type": "integer",
                    "description": "How many diffusion-sampled structures to generate.",
                    "default": 1,
                    "minimum": 1
                },
                "step_scale": {
                    "type": "number",
                    "description": "Scaling factor for diffusion step size.",
                    "default": 1.638
                },
                "use_potentials": {
                    "type": "boolean",
                    "description": "If true, omit external force-field potentials from the diffusion process.",
                    "default": false
                },
                "return_structure": {
                    "type": "boolean",
                    "description": "If false, the predicted structure will not be read or returned. Defaults to false.",
                    "default": false
                }
            },
            "required": [
                "sequence",
                "ligands"
            ]
        },
        "exampleInput": {
            "sequence": "MEEPQSDPSV",
            "ligands": [
                {
                    "id": "L1",
                    "smiles": "CCO"
                }
            ],
            "recycling_steps": 3,
            "sampling_steps": 200,
            "diffusion_samples": 1,
            "step_scale": 1.638,
            "use_potentials": false,
            "return_structure": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6d58a31-f5d2-4c4d-9a0a-1ae6f62b4c7e",
        "name": "compute_depmap24q2_gene_correlations",
        "description": "Computes gene-gene correlations of knockout effects across 1,320+ cancer cell lines using DepMap 24Q2 CRISPR data to uncover genetic dependencies and synthetic lethal relationships.",
        "detailed_description": "Analyzes gene-gene correlations from DepMap CRISPR knockout screening data. This tool validates genetic interactions using empirical cell viability data from 1,320+ cancer cell lines in the DepMap 24Q2 dataset. It determines if two genes have correlated knockout effects, providing insights into genetic dependencies and synthetic lethal relationships.",
        "toolType": "ML Model",
        "tags": [
            "bioinformatics-pipeline",
            "cancer-cell-line-data",
            "cell-viability-correlation",
            "computational-cancer-biology",
            "correlation-matrix-processing",
            "crispr-knockout-screening",
            "depmap-24q2-dataset",
            "functional-genomics-tool",
            "gene-coessentiality-analysis",
            "gene-correlation-analysis",
            "gene-dependency-inference",
            "genetic-interaction-mapping",
            "hugo-gene-symbols",
            "synthetic-lethality-prediction"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "depmap-crispr-24q2-dataset",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze gene-gene correlations",
            "Compute Pearson correlation coefficient",
            "Evaluate statistical significance (p-value, adjusted p-value)",
            "Interpret biological context of gene interactions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_a": {
                "type": "string",
                "description": "First gene symbol for correlation analysis (e.g., 'BRAF', 'TP53'). Must use standard HUGO gene nomenclature."
            },
            "gene_b": {
                "type": "string",
                "description": "Second gene symbol for correlation analysis (e.g., 'MAPK1', 'MDM2'). Must use standard HUGO gene nomenclature."
            },
            "data_dir": {
                "type": "string",
                "description": "Path to directory containing DepMap correlation matrices. If None, uses DEPMAP_DATA_PATH/depmap_24q2."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_a": {
                    "type": "string",
                    "description": "First gene symbol for correlation analysis (e.g., 'BRAF', 'TP53'). Must use standard HUGO gene nomenclature."
                },
                "gene_b": {
                    "type": "string",
                    "description": "Second gene symbol for correlation analysis (e.g., 'MAPK1', 'MDM2'). Must use standard HUGO gene nomenclature."
                },
                "data_dir": {
                    "type": "string",
                    "description": "Path to directory containing DepMap correlation matrices. If None, uses DEPMAP_DATA_PATH/depmap_24q2."
                }
            },
            "required": [
                "gene_a",
                "gene_b"
            ]
        },
        "exampleInput": {
            "gene_a": "TP53",
            "gene_b": "MDM2",
            "data_dir": "/data/depmap_24q2"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f8b7e2-1c9d-4b5a-8e21-4567f8901234",
        "name": "run_transcriptformer_embedding_retrieval",
        "description": "Retrieve gene embeddings contextualized by disease state and cell type using pre-computed Transcriptformer models.",
        "detailed_description": "Retrieves contextualized gene embeddings from Transcriptformer models. This tool provides access to pre-computed Transcriptformer embeddings that capture gene expression patterns learned from single-cell RNA sequencing data. The embeddings are contextualized for specific combinations of disease states and cell types, enabling precise analysis of gene behavior in relevant biological contexts.",
        "toolType": "ML Model",
        "tags": [
            "biomedical-informatics",
            "cell-type-specific-embeddings",
            "computational-genomics",
            "contextual-gene-embeddings",
            "deep-learning-omics",
            "disease-state-embeddings",
            "gene-embedding-retrieval",
            "gene-expression-vector",
            "precomputed-embeddings",
            "representation-learning",
            "single-cell-rna-seq",
            "transcriptformer-embeddings"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "transcriptformer",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve gene embeddings",
            "Contextualize embeddings by disease state",
            "Contextualize embeddings by cell type",
            "Support retrieval by gene symbols or Ensembl IDs",
            "Access pre-computed single-cell RNA-seq embeddings"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "state": {
                "type": "string",
                "description": "Disease state context for embedding retrieval. Examples: 'control': Healthy/normal condition; 'disease': Disease-affected state; 'treated': Post-treatment condition; 'untreated': Pre-treatment condition. Must match available states in the disease-specific store."
            },
            "cell_type": {
                "type": "string",
                "description": "Cell type context for embeddings. Examples: 'b_cell': B lymphocytes; 't_cell': T lymphocytes; 'macrophage': Tissue macrophages; 'epithelial_cell': Epithelial cells; 'fibroblast': Connective tissue fibroblasts. Must match available cell types in the disease store."
            },
            "gene_names": {
                "type": "array",
                "description": "Gene identifiers for embedding retrieval: Gene symbols: ['TP53', 'BRCA1', 'EGFR', 'MYC']; Ensembl IDs: ['ENSG00000141510', 'ENSG00000139618']; Mixed formats supported; Empty list retrieves all available genes."
            },
            "disease": {
                "type": "string",
                "description": "Disease/dataset identifier. Examples: 'breast_cancer': Breast cancer scRNA-seq data; 'lung_cancer': Lung cancer contexts; 'diabetes': Diabetes-related datasets; 'alzheimer': Alzheimer's disease contexts. Must match available disease stores."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "state": {
                    "type": "string",
                    "description": "Disease state context for embedding retrieval. Examples: 'control': Healthy/normal condition; 'disease': Disease-affected state; 'treated': Post-treatment condition; 'untreated': Pre-treatment condition. Must match available states in the disease-specific store."
                },
                "cell_type": {
                    "type": "string",
                    "description": "Cell type context for embeddings. Examples: 'b_cell': B lymphocytes; 't_cell': T lymphocytes; 'macrophage': Tissue macrophages; 'epithelial_cell': Epithelial cells; 'fibroblast': Connective tissue fibroblasts. Must match available cell types in the disease store."
                },
                "gene_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Gene identifiers for embedding retrieval: Gene symbols: ['TP53', 'BRCA1', 'EGFR', 'MYC']; Ensembl IDs: ['ENSG00000141510', 'ENSG00000139618']; Mixed formats supported; Empty list retrieves all available genes."
                },
                "disease": {
                    "type": "string",
                    "description": "Disease/dataset identifier. Examples: 'breast_cancer': Breast cancer scRNA-seq data; 'lung_cancer': Lung cancer contexts; 'diabetes': Diabetes-related datasets; 'alzheimer': Alzheimer's disease contexts. Must match available disease stores."
                }
            },
            "required": [
                "state",
                "cell_type",
                "gene_names",
                "disease"
            ]
        },
        "exampleInput": {
            "state": "disease",
            "cell_type": "t_cell",
            "gene_names": [
                "TP53",
                "BRCA1"
            ],
            "disease": "breast_cancer"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b9d6c8-4f14-4ac1-aefd-dc8e74b1b2f3",
        "name": "mcp_auto_loader_human_expert",
        "description": "Automatically discover and load tools from Human Expert MCP Server and register them for expert consultation.",
        "detailed_description": "Automatically discover and load all tools from Human Expert MCP Server. Can register discovered tools as individual ToolUniverse tools for expert consultation in complex scientific decisions requiring human judgment.",
        "toolType": "Human Expert Feedback",
        "tags": [
            "auto-tool-discovery",
            "complex-science-workflow",
            "dynamic-tool-registration",
            "expert-system-orchestration",
            "human-expert-consultation",
            "human-in-the-loop",
            "mcp-server-integration",
            "mcp-tool-orchestrator",
            "plugin-architecture",
            "remote-tool-loader",
            "scientific-decision-support",
            "service-discovery",
            "systems-integration",
            "tool-universe-integration"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "MCP",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Discover and load tools from Human Expert MCP Server",
            "Register discovered tools for expert consultation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {}
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7a1be90-3c45-4e7f-b42a-2f8d53ef6b63",
        "name": "consult_human_expert",
        "description": "Submit complex scientific questions to human experts for clinical decision support, analysis validation, treatment recommendations, and specialized opinions.",
        "detailed_description": "Consult a human expert for complex scientific questions requiring human judgment. This tool submits questions to human experts who can provide clinical decision support, analysis validation, treatment recommendations, and specialized opinions.",
        "toolType": "Human Expert Feedback",
        "tags": [
            "analysis-validation",
            "case-review",
            "clinical-decision-support",
            "complex-case-consult",
            "expert-feedback",
            "human-expert-consultation",
            "multi-specialty-consultation",
            "remote-expertise-access",
            "second-opinion",
            "specialist-opinion-request",
            "specialty-specific-query",
            "teleconsultation",
            "treatment-recommendation"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "MCP",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "consult human experts",
            "submit scientific questions",
            "provide clinical decision support",
            "analysis validation",
            "treatment recommendations",
            "specialized opinions",
            "set request priority",
            "include additional context",
            "configure response timeout"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "question": {
                "type": "string",
                "description": "The scientific question or case requiring expert consultation"
            },
            "specialty": {
                "type": "string",
                "description": "Area of expertise needed (e.g., 'cardiology', 'oncology', 'pharmacology', 'neurology', 'emergency', 'general')"
            },
            "priority": {
                "type": "string",
                "description": "Request priority level"
            },
            "context": {
                "type": "string",
                "description": "Additional context or background information about the case"
            },
            "timeout_minutes": {
                "type": "integer",
                "description": "How long to wait for expert response (default: 5 minutes)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string",
                    "description": "The scientific question or case requiring expert consultation"
                },
                "specialty": {
                    "type": "string",
                    "description": "Area of expertise needed (e.g., 'cardiology', 'oncology', 'pharmacology', 'neurology', 'emergency', 'general')",
                    "default": "general"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "low",
                        "normal",
                        "high",
                        "urgent"
                    ],
                    "description": "Request priority level",
                    "default": "normal"
                },
                "context": {
                    "type": "string",
                    "description": "Additional context or background information about the case",
                    "default": ""
                },
                "timeout_minutes": {
                    "type": "integer",
                    "description": "How long to wait for expert response (default: 5 minutes)",
                    "default": 5,
                    "minimum": 1,
                    "maximum": 60
                }
            },
            "required": [
                "question"
            ]
        },
        "exampleInput": {
            "question": "What are the recommended treatment options for a 65-year-old patient with stage II non-small cell lung cancer?",
            "specialty": "oncology",
            "priority": "high",
            "context": "Patient has significant smoking history and hypertension.",
            "timeout_minutes": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9b7a27-8f0e-4e30-9bd1-5b6a4e8d2fa9",
        "name": "get_expert_response",
        "description": "Retrieve status and content of an expert consultation response.",
        "detailed_description": "Check if an expert response is available for a previous consultation request. Use this to retrieve responses when the initial consultation is complete.",
        "toolType": "Human Expert Feedback",
        "tags": [
            "api-status-check",
            "asynchronous-response-fetch",
            "consultation-status-check",
            "domain-expert-access",
            "expert-consultation-service",
            "expert-response-retrieval",
            "knowledge-response-fetch",
            "remote-api-integration",
            "request-id-processing",
            "response-availability-query",
            "string-parameter-input",
            "support-ticket-status"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Check if an expert response is available for a given request_id",
            "Retrieve status of a consultation request",
            "Fetch expert response content",
            "Obtain responding expert's name and response timestamp"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "request_id": {
                "type": "string",
                "description": "The ID of the expert consultation request to check"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string",
                    "description": "The ID of the expert consultation request to check"
                }
            },
            "required": [
                "request_id"
            ]
        },
        "exampleInput": {
            "request_id": "12345-abcde"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1f5c12b-3e92-4b06-8f58-9c6d7e4f1234",
        "name": "get_expert_status",
        "description": "Retrieves the current status of the human expert system, including expert availability, pending requests, and system statistics.",
        "detailed_description": "Get current status of the human expert system including availability, pending requests, and system statistics.",
        "toolType": "Human Expert Feedback",
        "tags": [
            "availability-check",
            "expert-availability",
            "expert-status",
            "performance-metrics",
            "real-time-monitoring",
            "remote-expert-service",
            "request-queue-status",
            "request-tracking",
            "service-health-monitoring",
            "system-health-report",
            "system-statistics",
            "workload-management"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overall system status",
            "Fetch expert information (name, specialties, availability)",
            "Retrieve system usage statistics (pending requests, total requests, completed responses, response rate)",
            "Provide current system timestamp",
            "Provide MCP server port"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f8d9b7-1a1b-4c2f-9dde-4fecf86dcd77",
        "name": "list_pending_expert_requests",
        "description": "List pending expert consultation requests for review.",
        "detailed_description": "List all pending expert consultation requests (for expert use to see waiting questions).",
        "toolType": "Human Expert Feedback",
        "tags": [
            "consultation-requests",
            "expert-consultation",
            "expert-dashboard",
            "knowledge-management",
            "pending-requests",
            "queue-monitoring",
            "request-listing",
            "request-queue",
            "status-tracking",
            "support-queue",
            "workflow-automation",
            "workload-tracking"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "List all pending consultation requests",
            "Provide details including request ID, question, specialty, priority, waiting time, and timestamp",
            "Report the total number of pending requests",
            "Include expert system information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "additionalProperties": false
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b27c5c9d-2f4e-4aad-af5c-1a8b2d9e0fef",
        "name": "drugbank_get_drug_name_and_description_by_pathway_name",
        "description": "Retrieve drug names and descriptions based on a specified pathway name.",
        "detailed_description": "Get drug names and descriptions by pathway name.",
        "toolType": "Database",
        "tags": [
            "bioinformatics",
            "biomedical-data-query",
            "cheminformatics",
            "drug-description-fetch",
            "drug-information-retrieval",
            "drugbank-query",
            "pathway-based-discovery",
            "pathway-centric-search",
            "pathway-to-drug-mapping",
            "pharmacology-database-access",
            "systems-pharmacology",
            "xml-data-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Searches DrugBank XML for drug records by pathway name",
            "Supports case-sensitive and exact-match queries with configurable result limits",
            "Extracts drug names and primary DrugBank IDs",
            "Retrieves pathway details (SMPDB ID, name, category) and metabolic reaction information (sequence, left and right elements)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Pathway name to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Pathway name to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "glycolysis",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b4a2f1c0-3e7d-4a9a-8f2d-7b9f5e6c1d2e",
        "name": "drugbank_filter_drugs_by_name",
        "description": "Filter DrugBank records by drug names using various matching conditions.",
        "detailed_description": "Filter DrugBank records based on conditions applied to drug names. For example, find drugs whose names end with 'cillin' (penicillin antibiotics), contain 'mab', or are exactly 'Insulin'.",
        "toolType": "Database",
        "tags": [
            "contains-filter",
            "drug-discovery-tool",
            "drug-name-filter",
            "drugbank-filtering",
            "ends-with-filter",
            "exact-match-search",
            "name-based-filtering",
            "pharmaceutical-database-query",
            "pharmacoinformatics",
            "starts-with-filter",
            "string-matching",
            "xml-data-filtering"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter DrugBank records by drug name",
            "Support various string matching conditions (contains, starts_with, ends_with, exact, not_empty, has_attribute)",
            "Custom field mappings for XML elements",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "condition": {
                "type": "string",
                "description": "The condition to apply for filtering."
            },
            "value": {
                "type": "string",
                "description": "The value to use with the condition (e.g., 'Aspirin' for 'starts_with'). Required for 'contains', 'starts_with', 'ends_with', and 'exact' conditions."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "The condition to apply for filtering.",
                    "enum": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "exact",
                        "not_empty",
                        "has_attribute"
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "The value to use with the condition (e.g., 'Aspirin' for 'starts_with'). Required for 'contains', 'starts_with', 'ends_with', and 'exact' conditions.",
                    "minLength": 1
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return.",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "condition"
            ]
        },
        "exampleInput": {
            "condition": "contains",
            "value": "mab",
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f8b1fa2-d91e-4ee0-9abc-5d6f7a8e9b01",
        "name": "OpenTargets_get_associated_targets_by_disease_efoId",
        "description": "Retrieve targets linked to a disease or phenotype via its EFO ID.",
        "detailed_description": "Find targets associated with a specific disease or phenotype based on efoId.",
        "toolType": "API",
        "tags": [
            "biomedical-ontology",
            "disease-target-association",
            "drug-discovery-support",
            "efo-id-based-search",
            "experimental-factor-ontology",
            "gene-target-discovery",
            "genetic-association",
            "ontology-driven-query",
            "open-targets-api",
            "phenotype-target-association",
            "target-prioritization",
            "translational-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query targets associated with a specific disease or phenotype using EFO ID",
            "Retrieve disease ID and name",
            "Obtain associated target count and scores"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The efoId of a disease or phenotype."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The efoId of a disease or phenotype.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3fbb0c2-4e4b-4dc9-9f50-2f1a5c9b8e6d",
        "name": "OpenTargets_get_diseases_phenotypes_by_target_ensembl",
        "description": "Retrieve diseases or phenotypes linked to a target by its Ensembl ID.",
        "detailed_description": "Find diseases or phenotypes associated with a specific target using ensemblId.",
        "toolType": "API",
        "tags": [
            "biomarker-discovery",
            "biomedical-data-integration",
            "disease-phenotype-mapping",
            "drug-target-discovery",
            "ensembl-id-query",
            "genetic-association-analysis",
            "genomics-data-retrieval",
            "open-targets-api",
            "precision-medicine-research",
            "target-disease-association",
            "target-phenotype-association",
            "translational-bioinformatics"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve associated diseases and phenotypes for a target by Ensembl ID",
            "Return the count and details of each disease, including ID and name",
            "Provide datasource scores for each association"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The ensemblId of a target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The ensemblId of a target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5e8f74b-1572-4a9c-8f97-3d3e5b6e12a1",
        "name": "OpenTargets_target_disease_evidence",
        "description": "Provides evidence for target-disease associations given an EFO disease ID and an Ensembl target ID.",
        "detailed_description": "Explore evidence that supports a specific target-disease association. Input is disease efoId and target ensemblID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biomedical-data-integration",
            "disease-genomics",
            "drug-target-discovery",
            "efo-ontology-query",
            "ensembl-target-lookup",
            "evidence-explorer",
            "genetic-association-analysis",
            "open-targets-api",
            "phenotype-association",
            "target-disease-association",
            "target-disease-evidence",
            "translational-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query disease details given an EFO ID",
            "Fetch evidence for a specific target-disease association",
            "Retrieve mutation sample statistics and cohort information",
            "Obtain approved target symbols and source disease names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The efoId of a disease or phenotype."
            },
            "ensemblId": {
                "type": "string",
                "description": "The ensemblId of a target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The efoId of a disease or phenotype.",
                    "required": true
                },
                "ensemblId": {
                    "type": "string",
                    "description": "The ensemblId of a target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000311",
            "ensemblId": "ENSG00000157764"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8f76bfb-8c87-4e8e-9cd3-3f5971a8f6e7",
        "name": "OpenTargets_get_drug_warnings_by_chemblId",
        "description": "Fetch safety warnings for a drug using its ChEMBL ID.",
        "detailed_description": "Retrieve warnings for a specific drug using ChEMBL ID.",
        "toolType": "API",
        "tags": [
            "adverse-event-access",
            "adverse-reaction-data",
            "chembl-database",
            "chembl-id-query",
            "cheminformatics",
            "drug-safety-data",
            "drug-warnings-retrieval",
            "open-targets-integration",
            "pharmacovigilance",
            "regulatory-assessment",
            "safety-alerts",
            "safety-signal-detection",
            "side-effect-analysis",
            "toxicity-warning"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch drug warnings by ChEMBL ID",
            "Retrieve warning details including type, description, country, year, toxicity class, EFO ID, and related references"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6ae4a2c-3bae-4a94-9cf0-26f15acafc17",
        "name": "OpenTargets_get_drug_mechanisms_of_action_by_chemblId",
        "description": "Fetch mechanisms of action of a drug using its ChEMBL ID.",
        "detailed_description": "Retrieve the mechanisms of action associated with a specific drug using chemblId.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chembl-id-query",
            "cheminformatics",
            "drug-discovery",
            "drug-mechanism-of-action",
            "drug-target-interaction",
            "moa-annotation",
            "moa-retrieval",
            "open-targets-api",
            "pharmacodynamics",
            "pharmacology",
            "target-identification",
            "therapeutic-targets"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug mechanisms of action",
            "Query OpenTarget GraphQL API",
            "Fetch drug details by ChEMBL ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The ChEMBL ID of the drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The ChEMBL ID of the drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b5e1f8c2-2f6a-4d6c-ae3f-2548f75d8c3a",
        "name": "OpenTargets_get_associated_drugs_by_disease_efoId",
        "description": "Retrieve known drugs associated with a specific disease using its EFO ID.",
        "detailed_description": "Retrieve known drugs associated with a specific disease by disease efoId.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "clinical-pharmacology",
            "disease-ontology-integration",
            "disease-specific-drugs",
            "drug-disease-association",
            "drug-repurposing",
            "efo-id-query",
            "open-targets-api",
            "pharmacological-data-retrieval",
            "precision-medicine",
            "target-identification",
            "therapeutic-discovery"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve known drugs associated with a disease by EFO ID",
            "Support pagination of results via 'size'",
            "Fetch drug details including id, name, trade names, clinical trial phase, approval and withdrawal status",
            "Provide mechanism of action and target information for each drug",
            "Interact via GraphQL endpoint"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            },
            "size": {
                "type": "integer",
                "description": "Number of entries to fetch, recomanding a large number to avoid missing drugs."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of entries to fetch, recomanding a large number to avoid missing drugs.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408",
            "size": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c5f8aa6e-2b17-4cd3-9c82-1d7edce3e5f9",
        "name": "OpenTargets_get_similar_entities_by_disease_efoId",
        "description": "Retrieve similar entities for a given disease EFO ID using a PubMed-trained model.",
        "detailed_description": "Retrieve similar entities for a given disease efoId using a model trained with PubMed.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "biomedical-research",
            "computational-biology",
            "disease-entity-similarity",
            "disease-ontology",
            "efo-id-lookup",
            "entity-recommendation",
            "ontology-based-retrieval",
            "pubmed-trained-model",
            "semantic-similarity-search",
            "similarity-threshold-filter",
            "target-discovery"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve similar entities for a disease EFO ID",
            "Filter results by similarity threshold",
            "Limit the number of returned similar entities"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            },
            "threshold": {
                "type": "number",
                "description": "Threshold similarity between 0 and 1. Only results above threshold are returned."
            },
            "size": {
                "type": "integer",
                "description": "Number of similar entities to fetch."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                },
                "threshold": {
                    "type": "number",
                    "description": "Threshold similarity between 0 and 1. Only results above threshold are returned.",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of similar entities to fetch.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0003767",
            "threshold": 0.8,
            "size": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c3a1-9d0f-4a9b-a8e6-2d5c3f1b2e4f",
        "name": "OpenTargets_get_similar_entities_by_drug_chemblId",
        "description": "Fetch similar biomedical entities for a drug using its ChEMBL ID via a PubMed-trained model.",
        "detailed_description": "Retrieve similar entities for a given drug chemblId using a model trained with PubMed.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "biomedical-text-mining",
            "chemblid-query",
            "cheminformatics-tool",
            "drug-repositioning-support",
            "drug-similarity-search",
            "drug-target-discovery",
            "entity-similarity-scorer",
            "molecular-similarity",
            "open-targets-api",
            "pharmacological-analysis",
            "pubmed-trained-model",
            "similar-entities-retrieval",
            "threshold-based-filtering"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get similar entities for a drug by ChEMBL ID",
            "Filter results by similarity threshold",
            "Specify number of similar entities to return"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The chemblId of the disease."
            },
            "threshold": {
                "type": "number",
                "description": "Threshold similarity between 0 and 1. Only results above threshold are returned."
            },
            "size": {
                "type": "integer",
                "description": "Number of similar entities to fetch."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The chemblId of the disease.",
                    "required": true
                },
                "threshold": {
                    "type": "number",
                    "description": "Threshold similarity between 0 and 1. Only results above threshold are returned.",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of similar entities to fetch.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL25",
            "threshold": 0.8,
            "size": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "OpenTargets_get_similar_entities_by_target_ensemblID",
        "description": "Retrieve similar entities for a target Ensembl ID with a PubMed-trained model.",
        "detailed_description": "Retrieve similar entities for a given target ensemblID using a model trained with PubMed.",
        "toolType": "API",
        "tags": [
            "bioentity-recommendation",
            "biomedical-text-mining",
            "disease-target-discovery",
            "ensembl-id-query",
            "entity-similarity-search",
            "knowledge-discovery",
            "nlp-driven-bioinformatics",
            "open-targets",
            "pubmed-trained-model",
            "result-size-limitation",
            "semantic-similarity",
            "similar-entity-retrieval",
            "target-similarity",
            "threshold-based-filtering"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve similar entities by target ensemblID",
            "Filter results by similarity threshold",
            "Limit the number of results",
            "Use a PubMed-trained similarity model"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The ensemblID of the disease."
            },
            "threshold": {
                "type": "number",
                "description": "Threshold similarity between 0 and 1. Only results above threshold are returned."
            },
            "size": {
                "type": "integer",
                "description": "Number of similar entities to fetch."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The ensemblID of the disease.",
                    "required": true
                },
                "threshold": {
                    "type": "number",
                    "description": "Threshold similarity between 0 and 1. Only results above threshold are returned.",
                    "required": true
                },
                "size": {
                    "type": "integer",
                    "description": "Number of similar entities to fetch.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000141510",
            "threshold": 0.8,
            "size": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8f2a1d-c0e1-43a0-987b-123456789abc",
        "name": "OpenTargets_get_associated_phenotypes_by_disease_efoId",
        "description": "Retrieves HPO phenotypes associated with a given disease EFO ID.",
        "detailed_description": "Find HPO phenotypes associated with the specified disease efoId.",
        "toolType": "API",
        "tags": [
            "associated-phenotypes",
            "clinical-phenotype-discovery",
            "computational-biology",
            "disease-phenotype-mapping",
            "efoid-input",
            "genetic-disease-research",
            "genomic-data-integration",
            "hpo-phenotypes",
            "ontology-mapping",
            "open-targets",
            "phenotype-ontology-lookup",
            "phenotypic-profiling"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve HPO phenotypes associated with a disease EFO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The efoId of a disease or phenotype."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The efoId of a disease or phenotype.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000270"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2e20bda-3d3a-4d1a-b6f5-cec9293ea9f2",
        "name": "OpenTargets_get_drug_withdrawn_blackbox_status_by_chemblId",
        "description": "Retrieve drug withdrawal and black-box warning statuses by ChEMBL ID.",
        "detailed_description": "Find withdrawn and black-box warning statuses for a specific drug by chemblId.",
        "toolType": "API",
        "tags": [
            "black-box-warning-status",
            "chembl-id-query",
            "cheminformatics",
            "drug-safety-assessment",
            "drug-safety-information",
            "drug-withdrawal-status",
            "open-targets-platform",
            "pharmacovigilance",
            "pharmacovigilance-tool",
            "regulatory-compliance",
            "regulatory-status",
            "safety-warning-retrieval"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug withdrawal status by ChEMBL ID",
            "Retrieve drug black-box warning status by ChEMBL ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "array of string",
                "description": "The chemblId of a drug."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The chemblId of a drug.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": [
                "CHEMBL25"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2b10a6f-4e04-4b65-8b54-f5378b1a9f3c",
        "name": "OpenTargets_search_category_counts_by_query_string",
        "description": "Get counts of disease, target, and drug entries for a given search string.",
        "detailed_description": "Get the count of entries in each entity category (disease, target, drug) based on a query string.",
        "toolType": "API",
        "tags": [
            "bioinformatics-api-search",
            "biomedical-search-tool",
            "disease-ontology-search",
            "disease-target-drug",
            "drug-discovery-analytics",
            "entity-frequency-analysis",
            "open-targets-api",
            "open-targets-search",
            "pharmacological-data-exploration",
            "query-string-analysis",
            "search-category-counts",
            "target-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform search based on query string",
            "Retrieve total counts of entities",
            "Aggregate counts by category (disease, target, drug)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "queryString": {
                "type": "string",
                "description": "The search string for querying information."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "queryString": {
                    "type": "string",
                    "description": "The search string for querying information.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "queryString": "cancer"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c9eafda-77a4-4a5b-8c20-8d1e6a39ffe4",
        "name": "OpenTargets_get_disease_id_description_by_name",
        "description": "Retrieve the EFO ID and details for a disease by its name.",
        "detailed_description": "Retrieve the efoId and additional details of a disease based on its name.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "data-annotation",
            "disease-association",
            "disease-info-retrieval",
            "disease-lookup",
            "disease-name-search",
            "disease-ontology-mapping",
            "drug-target-discovery",
            "efo-id-retrieval",
            "efo-identifier-query",
            "genomic-research",
            "json-output",
            "pharmacogenomics-analysis",
            "string-input"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve EFO ID for a disease by name",
            "Fetch disease name and description",
            "Search diseases using GraphQL"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "diseaseName": {
                "type": "string",
                "description": "The name of the disease to search for."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "diseaseName": {
                    "type": "string",
                    "description": "The name of the disease to search for.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "diseaseName": "diabetes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "OpenTargets_get_drug_id_description_by_name",
        "description": "Fetch drug ChEMBL ID and description using its generic name",
        "detailed_description": "Fetch the drug chemblId and description based on the drug generic name.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chembl-id-lookup",
            "chemical-database-query",
            "cheminformatics",
            "compound-lookup",
            "database-integration",
            "drug-description-retrieval",
            "drug-discovery-support",
            "drug-identifier-mapping",
            "drug-information-retrieval",
            "drug-metadata-extraction",
            "generic-drug-name-search",
            "pharmacology-informatics",
            "target-annotation"
        ],
        "category": "OpentargetToolDrugNameMatch",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch drug ChEMBL ID by generic name",
            "Fetch drug description by generic name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drugName": {
                "type": "string",
                "description": "The name of the drug for which the ID is required."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drugName": {
                    "type": "string",
                    "description": "The name of the drug for which the ID is required.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "drugName": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c9a77723-3f7e-4d36-9c5a-2ecdfd2b9a14",
        "name": "get_cobra_info",
        "description": "Get comprehensive COBRApy constraint-based metabolic modeling information",
        "detailed_description": "Get comprehensive information about COBRApy \u2013 constraint-based metabolic modeling",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "cobrapy",
            "constraint-based-modeling",
            "flux-balance-analysis",
            "in-silico-simulation",
            "metabolic-engineering",
            "metabolic-network-analysis",
            "python-metabolic-modeling",
            "python-package",
            "quickstart-guide",
            "software-documentation",
            "systems-biology",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "COBRApy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve COBRApy package information",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3a77ae6-4b5f-46c5-9c63-1ecd0b2f16f8",
        "name": "get_openchem_info",
        "description": "Fetch information about the OpenChem deep learning toolkit for drug discovery",
        "detailed_description": "Get comprehensive information about OpenChem \u2013 deep learning toolkit for drug discovery",
        "toolType": "Scientific Software Package",
        "tags": [
            "ai-drug-design",
            "api-documentation",
            "cheminformatics",
            "computational-chemistry",
            "deep-learning-toolkit",
            "drug-discovery",
            "feature-description",
            "info-retrieval",
            "model-architecture",
            "openchem-info",
            "package-overview",
            "python-package",
            "toolkit-guides",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "openchem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information",
            "Provide installation instructions",
            "Show usage examples",
            "Link to documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about OpenChem"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about OpenChem"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f66502-1e58-4a0a-9b64-2c4567d890ef",
        "name": "get_molvs_info",
        "description": "Fetch information on the molvs package for molecule validation and standardization",
        "detailed_description": "Get information about the molvs package. Molecule validation and standardization",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-inspection",
            "chemical-normalization",
            "cheminformatics",
            "molecule-standardization",
            "molecule-validation",
            "molvs-package",
            "package-documentation",
            "python-chemistry",
            "rdkit-integration",
            "smiles-canonicalization",
            "structural-cleanup",
            "structure-normalization"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "molvs",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the molvs package",
            "Validate molecules",
            "Standardize molecules"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29d8e2-9c7a-4e6e-98b0-1a2b3c4d5e6f",
        "name": "get_chembl_webresource_client_info",
        "description": "Retrieve info about the chembl-webresource-client Python package for ChEMBL web services.",
        "detailed_description": "Get information about the chembl-webresource-client package. Python client for ChEMBL web services",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioactivity-data",
            "biomedical-informatics",
            "chembl-api-client",
            "chemical-database-access",
            "cheminformatics",
            "client-library-metadata",
            "drug-discovery-api",
            "package-documentation",
            "package-metadata-retrieval",
            "pip-package-inspection",
            "python-package-info",
            "rest-api-integration",
            "small-molecule"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ChEMBL Web Resource Client",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata for chembl-webresource-client package",
            "Interface with ChEMBL web services",
            "Provide package information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "12ab34cd-56ef-78ab-90cd-12ef34ab56cd",
        "name": "get_pubchempy_info",
        "description": "Get information about the PubChemPy package using its Python interface to the PubChem REST API",
        "detailed_description": "Get information about the pubchempy package. Python interface for PubChem REST API",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "chemical-database-api",
            "cheminformatics-tool",
            "developer-tool",
            "json-output",
            "metadata-retrieval",
            "package-metadata",
            "pubchem-integration",
            "pubchempy-info",
            "python-package",
            "rest-api-client",
            "version-check"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PubChemPy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the pubchempy package",
            "Interfaces with the PubChem REST API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2f7f6e1-57bb-4e24-8cf3-54a1a5f3b7a9",
        "name": "get_mordred_info",
        "description": "Get info about the mordred package, a molecular descriptor calculator",
        "detailed_description": "Get information about the mordred package. Molecular descriptor calculator",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-information",
            "cheminformatics-tool",
            "computational-chemistry",
            "descriptor",
            "molecular-properties",
            "mordred-package",
            "package-documentation",
            "package-metadata",
            "python-cheminformatics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "mordred",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the mordred package",
            "Provide details on molecular descriptor calculation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f13b2f0-9c4d-4a6d-8a1e-b1cf85f4d95c",
        "name": "get_datamol_info",
        "description": "Retrieve information about the Datamol package to facilitate molecular manipulation.",
        "detailed_description": "Get information about the datamol package. Molecular manipulation made easy",
        "toolType": "Scientific Software Package",
        "tags": [
            "chemical-data-processing",
            "chemical-format-conversion",
            "cheminformatics",
            "datamol-info",
            "dataset-preprocessing",
            "descriptor",
            "drug-discovery",
            "molecular-manipulation",
            "python-cheminformatics",
            "rdkit-integration",
            "small-molecule",
            "smiles-conversion"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "datamol",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides information on the datamol package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4b5f60b-30c4-4f29-bf7e-18d2a95ea970",
        "name": "get_molfeat_info",
        "description": "Retrieve information about the molfeat package, a tool for simple and robust molecular featurization",
        "detailed_description": "Get information about the molfeat package. Simple and robust molecular featurization",
        "toolType": "Scientific Software Package",
        "tags": [
            "cheminformatics",
            "computational-chemistry",
            "descriptor",
            "drug-discovery",
            "feature-extraction",
            "machine-learning",
            "molecular-featurization",
            "molecule-characterization",
            "molfeat-package",
            "package-information",
            "python-cheminformatics",
            "python-package"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "molfeat",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the molfeat package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4f5e6c3-2a49-4b1b-9e23-7f1234567890",
        "name": "get_matplotlib_info",
        "description": "Fetch comprehensive Matplotlib details, including its features, documentation, and usage examples.",
        "detailed_description": "Get comprehensive information about Matplotlib \u2013 comprehensive library for creating visualizations in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "data-science-visualization",
            "developer-onboarding",
            "library-documentation",
            "matplotlib-reference",
            "package-overview",
            "plotting-toolkit",
            "python-data-visualization",
            "python-graphics",
            "quickstart-guide",
            "scientific-visualization",
            "usage-examples",
            "visualization-library"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Matplotlib",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve library description",
            "Provide usage examples and quick start guide",
            "Offer installation instructions",
            "List key features, keywords, and popularity",
            "Share documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6f8e026-b8b5-4ac9-9fbc-c83ca9c0bb0a",
        "name": "get_seaborn_info",
        "description": "Get detailed information on the Seaborn statistical data visualization library.",
        "detailed_description": "Get comprehensive information about Seaborn \u2013 statistical data visualization",
        "toolType": "Scientific Software Package",
        "tags": [
            "chart-styling",
            "data-science-tool",
            "data-visualization-guide",
            "exploratory-data-analysis",
            "plotting-library",
            "python-data-visualization",
            "python-plotting",
            "quickstart-guide",
            "seaborn",
            "statistical-data-visualization",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Seaborn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Seaborn library overview and description",
            "Provide installation commands for pip and conda",
            "Show documentation and repository URLs",
            "Offer usage examples and quick start guide based on parameter",
            "List key features, keywords, and popularity metrics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c37e2b37-2b9b-4e72-b3cb-57ec4eb57be8",
        "name": "get_opencv_info",
        "description": "Get comprehensive information about the OpenCV-Python computer vision library.",
        "detailed_description": "Get comprehensive information about OpenCV-Python \u2013 computer vision library",
        "toolType": "Scientific Software Package",
        "tags": [
            "computer-vision-library",
            "cv2-api-reference",
            "documentation-extraction",
            "library-metadata",
            "module-overview",
            "opencv-python",
            "package-inspection",
            "python-binding-info",
            "quickstart-guide",
            "tutorial-snippets",
            "usage-examples",
            "version-information"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "opencv-python",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package description and metadata",
            "Provide installation instructions (pip, conda)",
            "Offer documentation and repository links",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c2a1-59d4-4c3b-9e2f-35fa8c6b7d09",
        "name": "get_scikit_image_info",
        "description": "Retrieve comprehensive information about the scikit-image Python package",
        "detailed_description": "Get comprehensive information about scikit-image \u2013 image processing in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "computer-vision",
            "documentation-lookup",
            "image-analysis-library",
            "info-retrieval",
            "library-documentation",
            "open-source-package",
            "package-metadata",
            "python-image-processing",
            "python-package",
            "scikit-image-info",
            "software-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scikit-image",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package overview",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about scikit-image"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about scikit-image"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8f1f1f06-bb95-4b8c-acab-c4c6f357dade",
        "name": "get_cellpose_info",
        "description": "Provides comprehensive information about Cellpose, a deep learning-based cell segmentation algorithm.",
        "detailed_description": "Get comprehensive information about Cellpose \u2013 cell segmentation algorithm",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-documentation",
            "bioimage-analysis",
            "cell-image-segmentation",
            "cell-segmentation",
            "cellpose-algorithm",
            "computational-biology",
            "deep-learning-segmentation",
            "microscopy-image-processing",
            "python-package-info",
            "quickstart-guide",
            "segmentation-algorithm-info",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cellpose",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches detailed information about the Cellpose package",
            "Provides algorithm description",
            "Includes usage examples and quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5f1e6b2-8c4d-4c89-9f4d-2a7b3c8e1234",
        "name": "get_igraph_info",
        "description": "Get comprehensive information about igraph for network analysis and visualization",
        "detailed_description": "Get comprehensive information about igraph \u2013 network analysis and visualization",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "community-detection",
            "data-visualization",
            "graph-algorithms",
            "graph-theory",
            "graph-visualization",
            "igraph",
            "network-analysis",
            "package-reference",
            "python-network-library",
            "quickstart-guide",
            "r-network-library",
            "social-network-analysis",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "igraph",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch igraph package metadata",
            "Provide network analysis and visualization details",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a2f3af2-6a73-4b61-a310-2bafa4e94bb1",
        "name": "get_plantcv_info",
        "description": "Retrieve information about PlantCV, a plant phenotyping image analysis library.",
        "detailed_description": "Get comprehensive information about PlantCV \u2013 plant phenotyping with image analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics",
            "computer-vision",
            "high-throughput-phenotyping",
            "image-analysis",
            "metadata-retrieval",
            "package-documentation",
            "phenomic-analysis",
            "plant-phenotyping",
            "plantcv-info",
            "python-package",
            "version-information"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PlantCV",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the PlantCV package",
            "Provide installation instructions for PlantCV",
            "Supply usage examples for PlantCV",
            "Link to PlantCV documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PlantCV"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PlantCV"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3e2c1b4-9a8d-4c3b-a2f1-5e6d7a8c9b0d",
        "name": "get_plotly_info",
        "description": "Retrieve information about the plotly Python interactive plotting library.",
        "detailed_description": "Get information about the plotly package. Interactive plotting library for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "charting-library",
            "data-visualization",
            "developer-reference",
            "interactive-plotting",
            "package-information",
            "plotly-documentation",
            "plotly-metadata",
            "plotly-version-info",
            "plotting-library-insights",
            "python-visualization-library",
            "visualization-api"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Plotly",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve plotly package information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d590a1be-9fc4-4c71-b415-5c227fd58fdd",
        "name": "get_mutation_annotations_by_pdb_id",
        "description": "Retrieve mutation annotations for a PDB structure by its ID.",
        "detailed_description": "Retrieve mutation annotations for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "mutation-analysis",
            "mutation-annotation-retrieval",
            "mutation-mapping",
            "pdb-id",
            "pdb-structure-annotation",
            "protein-engineering",
            "protein-structure",
            "rcsb-pdb-api",
            "structural-bioinformatics",
            "structural-biology",
            "structural-variation",
            "variant-annotation"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve mutation annotations for a PDB structure",
            "Supports querying by PDB ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f9c2e7-6d8b-4c1e-9f2a-5b7d3c1e4f6a",
        "name": "get_em_3d_fitting_and_reconstruction_details",
        "description": "Retrieve EM 3D fitting and 3D reconstruction details for a PDB entry.",
        "detailed_description": "Retrieve EM 3D fitting model details and associated 3D reconstruction info for a given PDB entry.",
        "toolType": "API",
        "tags": [
            "3d-reconstruction-info",
            "cryo-em-reconstruction",
            "cryoem-model-validation",
            "density-map-fitting",
            "electron-density-map",
            "em-3d-fitting-details",
            "macromolecular-structure",
            "map-model-fitting",
            "pdb-entry-retrieval",
            "rcsb-pdb-integration",
            "reconstruction-metrics",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve EM 3D fitting model details",
            "Retrieve 3D reconstruction information",
            "Query by PDB ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "4ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8ddc6c5-5a98-4a73-bc4b-47fa2e1d2f09",
        "name": "get_assembly_summary",
        "description": "Retrieve assembly composition and symmetry summary for a given PDB entry.",
        "detailed_description": "Get key assembly composition and symmetry summary for an assembly associated with a PDB entry.",
        "toolType": "API",
        "tags": [
            "assembly-summary",
            "bioinformatics",
            "biological-assembly",
            "biomolecular-symmetry",
            "chain-composition",
            "pdb-assembly",
            "pdb-assembly-id",
            "protein-complex",
            "quaternary-structure",
            "rcsb-pdb",
            "structural-biology",
            "symmetry-analysis"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve assembly composition and symmetry summary",
            "Obtain polymer entity instance counts for protein, DNA, and RNA",
            "Report number of homomeric and heteromeric interfaces",
            "Provide total assembly buried surface area",
            "Determine oligomeric state and symmetry type"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "assembly_id": {
                "type": "string",
                "description": "Assembly ID in format 'PDBID-assemblyNumber' (e.g., '1A8M-1')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "assembly_id": {
                    "type": "string",
                    "description": "Assembly ID in format 'PDBID-assemblyNumber' (e.g., '1A8M-1')",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "assembly_id": "1A8M-1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4f50a2b-3c9e-4428-9e8b-1f2a3d4c5e6f",
        "name": "get_assembly_info_by_pdb_id",
        "description": "Retrieve biological assembly details for a given PDB ID",
        "detailed_description": "Retrieve all associated biological assembly details for a given PDB structure.",
        "toolType": "API",
        "tags": [
            "assembly-details",
            "assembly-information",
            "assembly-metadata",
            "assembly-retrieval",
            "biological-assembly",
            "macromolecular-assembly",
            "pdb-assembly",
            "pdb-data-extraction",
            "pdb-id-lookup",
            "protein-assembly",
            "rcsb-pdb-query",
            "structural-bioinformatics",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves biological assembly information for a PDB ID",
            "Returns assembly_id, method_details, and details fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "0d1e2f3a-4b5c-6d7e-8f90-a1b2c3d4e5f6",
        "name": "get_taxonomy_by_pdb_id",
        "description": "Retrieve scientific names and taxonomy lineage of organisms for a specified PDB entry.",
        "detailed_description": "Get the scientific name and taxonomy of the organism(s) associated with a PDB entry.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "organism-identification",
            "pdb-id-lookup",
            "pdb-taxonomy",
            "phylogenetics",
            "protein-structure",
            "rcsb-pdb-query",
            "scientific-name-extraction",
            "species-annotation",
            "structural-biology",
            "taxonomic-classification",
            "taxonomic-data-access",
            "taxonomy-retrieval"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search PDB entries by ID to retrieve organism taxonomy",
            "Retrieve taxonomy lineage names of polymer entities' host organisms",
            "Retrieve parent scientific names of polymer entities' source organisms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID",
                "required": true
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_release_deposit_dates_by_pdb_id",
        "description": "Retrieve release and deposition dates for a given PDB entry.",
        "detailed_description": "Get the release and deposition dates for a PDB entry.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "crystallography-data",
            "database-query",
            "deposition-metadata",
            "pdb-deposition-dates",
            "pdb-id-query",
            "pdb-metadata-retrieval",
            "pdb-release-dates",
            "protein-structure-metadata",
            "rcsb-pdb-api",
            "structural-biology",
            "structural-database-query"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve release date for a PDB entry",
            "Retrieve deposition date for a PDB entry"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character RCSB PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character RCSB PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "550e8400-e29b-41d4-a716-446655440000",
        "name": "get_host_organism_by_pdb_id",
        "description": "Get the host organism used for protein expression in a PDB entry.",
        "detailed_description": "Get the host organism used for protein expression in a PDB entry.",
        "toolType": "API",
        "tags": [
            "expression-host-species",
            "expression-system-identification",
            "host-organism-lookup",
            "pdb-annotation",
            "pdb-host-organism",
            "pdb-id-query",
            "protein-expression-host",
            "protein-expression-metadata",
            "protein-source-organism",
            "rcsb-pdb-access",
            "recombinant-protein",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve host organism common name for protein expression from a PDB ID",
            "Retrieve host organism scientific name for protein expression from a PDB ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "4-character PDB ID"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "4-character PDB ID",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa3e3510-4f87-4d1b-9a2d-bb574c6a8c77",
        "name": "get_ec_number_by_entity_id",
        "description": "Retrieve EC number(s) for a polymer entity",
        "detailed_description": "Retrieve the Enzyme Commission (EC) number(s) for an entity.",
        "toolType": "API",
        "tags": [
            "biochemical-annotation",
            "bioinformatics",
            "database-integration",
            "ec-code-fetch",
            "ec-number-retrieval",
            "entity-id-query",
            "enzyme-characterization",
            "enzyme-commission-number",
            "enzymology",
            "polymer-entity-id-lookup",
            "protein-annotation",
            "rcsb-pdb-access",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve the Enzyme Commission (EC) number(s) for a polymer entity by its ID."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Polymer entity ID (e.g., '1A8M_1')"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Polymer entity ID (e.g., '1A8M_1')",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_gene_name_by_entity_id",
        "description": "Retrieve gene names for a given polymer entity ID.",
        "detailed_description": "Retrieve gene name(s) associated with a polymer entity.",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "entity-id-mapping",
            "entity-id-resolution",
            "entity-to-gene-mapping",
            "gene-identification",
            "gene-name-retrieval",
            "molecular-biology",
            "pdb-entity-gene",
            "polymer-entity-lookup",
            "protein-gene-annotation",
            "rcsb-pdb-integration",
            "sequence-annotation",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve gene name(s) associated with a polymer entity",
            "Provide provenance source of gene names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Entity ID like '1A8M_1'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Entity ID like '1A8M_1'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_polymer_molecular_weight_by_entity_id",
        "description": "Retrieve the molecular weight of a polymer entity.",
        "detailed_description": "Retrieve the molecular weight of a polymer entity.",
        "toolType": "API",
        "tags": [
            "biochemistry",
            "biopolymer-characterization",
            "chemical-informatics",
            "computational-biology",
            "entity-id-parameter",
            "macromolecular-mass-estimation",
            "mass-retrieval",
            "molecular-weight-calculation",
            "pdb-data-retrieval",
            "pdb-entity-id-lookup",
            "polymer-chemistry",
            "polymer-molecular-weight",
            "rcsb-pdb-query",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve the molecular weight of a polymer entity given its ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Polymer entity ID like '1A8M_1'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Polymer entity ID like '1A8M_1'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_ligand_bond_count_by_pdb_id",
        "description": "Retrieve bond counts for each ligand in a PDB structure.",
        "detailed_description": "Get the number of bonds for each ligand in a given PDB structure.",
        "toolType": "API",
        "tags": [
            "biomolecular-data",
            "bond-enumeration",
            "chemical-topology",
            "cheminformatics",
            "ligand-bond-count",
            "molecular-structure-inspection",
            "pdb-id-query",
            "pdb-structure-analysis",
            "protein-ligand-interactions",
            "rcsb-pdb-integration",
            "small-molecule-ligands",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get the number of bonds for each ligand",
            "Accept a PDB ID as input",
            "Return bond counts from RCSB chemical component data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB ID of the entry"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB ID of the entry",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3d9f6b9-6c0f-4ec6-bf69-1bf359b847dc",
        "name": "get_crystal_growth_conditions_by_pdb_id",
        "description": "Retrieves crystallization methods and growth conditions for a given PDB entry.",
        "detailed_description": "Get information about the crystallization method and conditions for a structure.",
        "toolType": "API",
        "tags": [
            "biochemical-research",
            "crystal-growth-info",
            "crystallization-conditions",
            "crystallization-protocols",
            "crystallographic-parameters",
            "experimental-conditions",
            "macromolecular-crystallography",
            "pdb-crystallization-data",
            "pdb-data-retrieval",
            "pdb-id-query",
            "protein-crystallography",
            "rcsb-pdb-integration",
            "structural-biology"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search crystallization data by PDB ID",
            "Retrieve crystallization method and detailed conditions",
            "Obtain pH, temperature, and additional pdbx_details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB ID of the structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB ID of the structure",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "get_polymer_entity_annotations",
        "description": "Retrieve Pfam and GO annotations along with UniProt accession IDs for a polymer entity",
        "detailed_description": "Retrieve functional annotations (Pfam domains, GO terms) and associated UniProt accession IDs for a polymer entity.",
        "toolType": "API",
        "tags": [
            "annotation-retrieval",
            "functional-annotation",
            "gene-ontology-terms",
            "macromolecular-structure",
            "pdb-entity-id-processing",
            "pfam-domain-retrieval",
            "polymer-entity-annotation",
            "protein-domain-annotation",
            "protein-function-mapping",
            "rcsb-pdb-query",
            "sequence-function-annotation",
            "structural-bioinformatics",
            "uniprot-accession-lookup"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Pfam domain annotations",
            "Retrieve GO term annotations",
            "Retrieve associated UniProt accession IDs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Polymer entity ID like '1A8M_1'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Polymer entity ID like '1A8M_1'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "1A8M_1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-5678-90ab-cdef-1234567890ab",
        "name": "get_oligosaccharide_descriptors_by_entity_id",
        "description": "Retrieve structural descriptors for branched entities like oligosaccharides in a PDB entry.",
        "detailed_description": "Retrieve structural descriptors for branched entities (e.g., oligosaccharides) in a PDB entry.",
        "toolType": "API",
        "tags": [
            "3d-structural-data",
            "branched-glycan-analysis",
            "carbohydrate-structure",
            "entity-id-query",
            "glycan-topology",
            "glycomics",
            "molecular-descriptors",
            "oligosaccharide-descriptors",
            "pdb-entity-retrieval",
            "pdb-ligand-analysis",
            "rcsb-pdb-integration",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve structural descriptors for branched entities",
            "Extract oligosaccharide descriptors"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "entity_id": {
                "type": "string",
                "description": "Branched entity ID like '5FMB_2'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string",
                    "description": "Branched entity ID like '5FMB_2'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "entity_id": "5FMB_2"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_sequence_positional_features_by_instance_id",
        "description": "Retrieve sequence positional features such as binding sites and motifs for a polymer entity instance.",
        "detailed_description": "Retrieve sequence positional features (e.g., binding sites, motifs) for a polymer entity instance.",
        "toolType": "API",
        "tags": [
            "binding-site-mapping",
            "computational-biology",
            "feature-retrieval",
            "molecular-binding-analysis",
            "motif-detection",
            "polymer-instance-id",
            "positional-feature-extraction",
            "protein-function-analysis",
            "rcsb-pdb-integration",
            "sequence-annotation",
            "sequence-positional-features",
            "structural-bioinformatics"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve sequence positional features for a polymer entity instance",
            "Obtain binding site and motif position data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "instance_id": {
                "type": "string",
                "description": "Polymer entity instance ID like '1NDO.A'",
                "required": true
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "instance_id": {
                    "type": "string",
                    "description": "Polymer entity instance ID like '1NDO.A'",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "instance_id": "1NDO.A"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d12f79e6-8a34-4c2d-bb5a-9f1e3e4c7d8a",
        "name": "get_crystallographic_properties_by_pdb_id",
        "description": "Retrieve unit cell dimensions and space group for a PDB entry",
        "detailed_description": "Retrieve crystallographic properties such as unit cell dimensions and space group for a PDB entry.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "crystal-symmetry",
            "crystallographic-properties",
            "pdb-id-lookup",
            "pdb-metadata",
            "protein-crystallography",
            "rcsb-api",
            "space-group",
            "structural-biology",
            "structural-database-query",
            "structural-parameters",
            "unit-cell-dimensions",
            "unit-cell-parameters",
            "xray-crystallography"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch unit cell lengths (a, b, c) for a PDB entry",
            "Fetch unit cell angles (alpha, beta, gamma) for a PDB entry",
            "Retrieve space group name for a PDB entry"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB ID of the structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB ID of the structure",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1c2dea62-8f4e-4d67-9d42-3b5f2d8a5093",
        "name": "get_structure_validation_metrics_by_pdb_id",
        "description": "Retrieve structure validation metrics for a PDB entry.",
        "detailed_description": "Retrieve structure validation metrics such as R-free, R-work, and clashscore for a PDB entry.",
        "toolType": "API",
        "tags": [
            "clashscore",
            "crystallographic-quality",
            "macromolecular-validation",
            "pdb-id-retrieval",
            "pdb-metrics",
            "protein-structure-assessment",
            "quality-assessment",
            "r-free",
            "r-work",
            "rcsb-pdb-query",
            "structural-biology",
            "structure-validation",
            "validation-report",
            "x-ray-crystallography"
        ],
        "category": "RCSBTool",
        "lab": "Zitnik Lab",
        "source": "RCSB PDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search structure validation metrics by PDB ID",
            "Return R-free values",
            "Return R-work values",
            "Return clashscore values"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pdb_id": {
                "type": "string",
                "description": "PDB ID of the structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pdb_id": {
                    "type": "string",
                    "description": "PDB ID of the structure",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "pdb_id": "1ABC"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a0b1c2d3-e4f5-6789-abcd-ef0123456789",
        "name": "get_schnetpack_info",
        "description": "Retrieve comprehensive details about SchNetPack, including its features, documentation, and usage examples.",
        "detailed_description": "Get comprehensive information about SchNetPack \u2013 a deep-learning toolbox for molecules and materials built on PyTorch.",
        "toolType": "Scientific Software Package",
        "tags": [
            "atomistic-simulation",
            "deep-learning-toolbox",
            "materials-simulation",
            "ml-for-materials",
            "ml-for-molecules",
            "molecular-modeling",
            "property-prediction",
            "pytorch-framework",
            "quantum-chemistry-ml",
            "quick-start-guide",
            "schnetpack-info",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "SchNetPack",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about SchNetPack",
            "Optionally include usage examples and a quick-start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2c8a4d5-5f32-4f67-a8a4-9cda5beec2f7",
        "name": "get_cellxgene_census_info",
        "description": "Retrieve information about the CELLxGENE Census single-cell data package",
        "detailed_description": "Get comprehensive information about cellxgene-census \u2013 access to the CELLxGENE Census single-cell data",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-data-query",
            "cellxgene-census-info",
            "cellxgene-census-metadata",
            "census-information-retrieval",
            "data-exploration",
            "dataset-catalog-access",
            "genomics-database-interface",
            "metadata-extraction",
            "repository-information",
            "scrna-seq-dataset-retrieval",
            "single-cell-data-access",
            "single-cell-transcriptomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cellxgene-census",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview",
            "Retrieve installation instructions",
            "Retrieve usage examples",
            "Retrieve documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about cellxgene-census"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about cellxgene-census"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2f4bea84-0a6a-4a10-9cbc-3d179a5e259e",
        "name": "get_deeppurpose_info",
        "description": "Retrieve comprehensive information about the DeepPurpose toolkit for drug discovery.",
        "detailed_description": "Get comprehensive information about DeepPurpose \u2013 deep learning toolkit for drug discovery",
        "toolType": "Scientific Software Package",
        "tags": [
            "ai-driven-drug-design",
            "api-query",
            "bioinformatics",
            "cheminformatics",
            "computational-drug-design",
            "deep-learning-toolkit",
            "deeppurpose-info",
            "drug-discovery",
            "info-retrieval",
            "molecular-screening",
            "package-documentation",
            "python-package",
            "research-tool"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DeepPurpose",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get overview of DeepPurpose toolkit",
            "Get installation instructions for DeepPurpose",
            "Get usage examples of DeepPurpose",
            "Get list of available DeepPurpose models",
            "Get DeepPurpose documentation details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about DeepPurpose"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "models",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about DeepPurpose"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e1d56419-e574-4ab0-8ba2-0cdfcbd7289f",
        "name": "get_pykalman_info",
        "description": "Retrieve detailed information on PyKalman for Kalman filtering and smoothing",
        "detailed_description": "Get comprehensive information about PyKalman \u2013 Kalman filtering and smoothing",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "bayesian-filter",
            "control-systems",
            "data-fusion",
            "kalman-filtering",
            "kalman-smoothing",
            "package-reference",
            "pykalman-info",
            "python-library",
            "signal-processing",
            "state-space-model",
            "statistical-estimation",
            "time-series-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pykalman",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of PyKalman",
            "Provide installation instructions",
            "Show usage examples",
            "Link to documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyKalman"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyKalman"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b0713a-2f91-4eac-bd53-8e4ae1f9c640",
        "name": "get_cobra_info",
        "description": "Get comprehensive information about COBRApy for constraint-based metabolic modeling",
        "detailed_description": "Get comprehensive information about COBRApy \u2013 constraint-based metabolic modeling",
        "toolType": "Scientific Software Package",
        "tags": [
            "cobra-py-documentation",
            "computational-metabolism",
            "constraint-based-modeling",
            "metabolic-flux-balance-analysis",
            "metabolic-network-analysis",
            "model-optimization",
            "model-reconstruction",
            "python-package-info",
            "quick-start-guide",
            "systems-biology",
            "tutorial-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "COBRApy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve COBRApy package description",
            "Provide installation instructions for COBRApy",
            "Offer documentation and repository links",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b1f2c6d-8a4e-4e9f-9123-7d56e8f9a012",
        "name": "get_viennarna_info",
        "description": "Provides detailed info about the ViennaRNA package for RNA structure prediction and analysis.",
        "detailed_description": "Get comprehensive information about ViennaRNA \u2013 RNA structure prediction and analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-biology",
            "dot-bracket-notation",
            "dynamic-programming",
            "energy-minimization",
            "nucleic-acid-folding",
            "rna-folding-tool",
            "rna-structure-prediction",
            "secondary-structure-analysis",
            "sequence-structure-modeling",
            "structural-bioinformatics",
            "thermodynamic-folding",
            "transcriptome-analysis",
            "viennarna-package"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ViennaRNA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata including description, category, keywords, and links",
            "Provide installation instructions for pip and conda",
            "Show usage examples and quick start steps when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b9e5bba-d4f3-4c7a-9060-1b2a3f4c5d6e",
        "name": "get_prody_info",
        "description": "Provides comprehensive information about the ProDy protein dynamics analysis package.",
        "detailed_description": "Get comprehensive information about ProDy \u0011 protein dynamics analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "computational-structural-biology",
            "developer-reference",
            "documentation-retrieval",
            "molecular-flexibility",
            "normal-mode-analysis",
            "prody-info",
            "protein-dynamics-analysis",
            "python-bioinformatics",
            "software-metadata",
            "structural-dynamics",
            "usage-guidance"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ProDy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of ProDy",
            "Provide installation instructions",
            "Show usage examples",
            "Access documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about ProDy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about ProDy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1a5d3c4-2f6d-4e7b-8c9f-0a1b2c3d4e5f",
        "name": "get_python_libsbml_info",
        "description": "Provides information about the python-libsbml package, including overview, installation, usage, and documentation.",
        "detailed_description": "Get comprehensive information about python-libsbml \u2013 SBML (Systems Biology Markup Language) support",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "bioinformatics",
            "biological-modeling",
            "computational-biology",
            "library-introspection",
            "modeling-framework-support",
            "package-metadata",
            "python-libsbml",
            "python-package-inspection",
            "sbml-python-binding",
            "software-dependency",
            "systems-biology-markup-language"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "python-libSBML",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get overview of python-libsbml",
            "Get installation instructions for python-libsbml",
            "Get usage examples for python-libsbml",
            "Get documentation link for python-libsbml"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about python-libsbml"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about python-libsbml"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4b9c6d8-3a47-4f73-9bc0-1e2d3f4a5b6c",
        "name": "get_umap_learn_info",
        "description": "Fetch detailed information and usage guidance for the umap-learn dimensionality reduction package.",
        "detailed_description": "Get comprehensive information about UMAP-learn \u2013 dimensionality reduction technique",
        "toolType": "Scientific Software Package",
        "tags": [
            "data-visualization",
            "dimensionality-reduction",
            "feature-extraction",
            "high-dimensional-data",
            "low-dimensional-representation",
            "machine-learning-preprocessing",
            "manifold-learning",
            "non-linear-embedding",
            "numpy-arrays",
            "topological-data-analysis",
            "umap-documentation",
            "umap-quick-start",
            "unsupervised-learning"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "umap-learn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package details",
            "Show installation instructions",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b9bddab-2f0b-4a97-bac9-1a2b3c4d5e6f",
        "name": "get_pyranges_info",
        "description": "Get comprehensive information about PyRanges, a library for efficient genomic interval operations",
        "detailed_description": "Get comprehensive information about PyRanges \u2013 efficient genomic interval operations",
        "toolType": "Scientific Software Package",
        "tags": [
            "bed-file-processing",
            "code-snippets",
            "coverage-analysis",
            "dataframe-operations",
            "genomic-interval-operations",
            "overlap-detection",
            "package-info",
            "pyranges-documentation",
            "pyranges-info",
            "python-bioinformatics",
            "quick-start-guide",
            "region-annotation",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PyRanges",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve library name and description",
            "Provide package category and keywords",
            "Return documentation and repository URLs",
            "Show installation commands for pip and conda",
            "Include usage examples and quick start guide based on parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "cbf7d9e4-1a56-4d3e-9732-4b5e7a8f9c10",
        "name": "get_biopandas_info",
        "description": "Retrieve detailed information and usage guidance for BioPandas, a pandas-based molecular structure analysis library.",
        "detailed_description": "Get comprehensive information about BioPandas \u2013 pandas-based molecular structure analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-research",
            "biopandas-info",
            "cheminformatics-library",
            "computational-chemistry",
            "dataframe-molecular-data",
            "molecular-structure-analysis",
            "package-inspection",
            "pandas-molecular-analysis",
            "python-library-documentation",
            "quickstart-guide",
            "structural-bioinformatics",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "BioPandas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve BioPandas description and features",
            "Show installation instructions (pip/conda)",
            "Provide usage examples and quick start guide",
            "List documentation links and repository information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f1b2c4-d5e6-7f89-0a12-b345c678d901",
        "name": "get_rdkit_info",
        "description": "Retrieve detailed information about the RDKit cheminformatics and machine learning toolkit.",
        "detailed_description": "Get comprehensive information about RDKit \u2013 cheminformatics and machine learning toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "chemical-data-analysis",
            "cheminformatics-toolkit",
            "computational-chemistry",
            "machine-learning-cheminformatics",
            "molecular-featurization",
            "molecular-structure-processing",
            "open-source-cheminformatics",
            "python-chemoinformatics",
            "python-library-documentation",
            "qsar-modeling",
            "rdkit-information",
            "rdkit-usage-examples",
            "toolkit-overview"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "RDKit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch comprehensive details about the RDKit toolkit",
            "Provide documentation links, installation instructions, and repository information",
            "Include usage examples and quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3cfa698-ec63-4ec6-955e-2c5782a58b51",
        "name": "get_diffdock_info",
        "description": "Retrieve detailed information about DiffDock, a diffusion-based molecular docking model.",
        "detailed_description": "Get comprehensive information about DiffDock \u2013 diffusion model for molecular docking",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "cheminformatics",
            "computational-chemistry",
            "deep-learning-model",
            "diffdock-model",
            "diffusion-docking",
            "diffusion-model",
            "drug-discovery",
            "in-silico-screening",
            "machine-learning",
            "model-metadata",
            "molecular-docking",
            "protein-ligand-docking",
            "structure-prediction"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DiffDock",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of DiffDock",
            "Provide installation instructions",
            "Offer usage examples",
            "Link to documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about DiffDock"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about DiffDock"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7cd9d5f-53f8-4e22-bd56-2c68d8d8a30b",
        "name": "get_msprime_info",
        "description": "Provides detailed metadata and documentation for the msprime coalescent simulation package, with optional usage examples.",
        "detailed_description": "Get comprehensive information about msprime \u2013 coalescent simulation framework",
        "toolType": "Scientific Software Package",
        "tags": [
            "ancestral-recombination-graph",
            "coalescent-simulation",
            "computational-biology",
            "demography-modeling",
            "evolutionary-simulation",
            "genealogical-simulation",
            "genetic-variation-simulation",
            "msprime-information",
            "open-source-genetics",
            "population-genetics",
            "python-package-documentation",
            "quickstart-guide",
            "scientific-software",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "msprime",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch msprime package metadata and description",
            "Provide documentation and repository links",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f1c9a6-7e2d-4d1c-8a0b-5f8e3a9d7c1b",
        "name": "get_tiledb_info",
        "description": "Fetch key information about TileDB, a modern array database",
        "detailed_description": "Get comprehensive information about TileDB \u2013 modern database for array data",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-database",
            "developer-utility",
            "diagnostic-tooling",
            "metadata-retrieval",
            "multi-dimensional-array",
            "performance-analysis",
            "schema-explorer",
            "scientific-data-management",
            "tiledb-architecture",
            "tiledb-configuration",
            "tiledb-info",
            "tiledb-metadata"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "TileDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about TileDB",
            "Provide installation details for TileDB",
            "Show usage examples for TileDB",
            "Link to TileDB documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about TileDB"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about TileDB"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3bb4a38-0a07-4f2e-a835-59a91392354e",
        "name": "enrichr_gene_enrichment_analysis",
        "description": "Gene enrichment analysis using Enrichr to identify pathways, processes, and molecular functions for a list of genes.",
        "detailed_description": "Perform gene enrichment analysis using Enrichr to find biological pathways, processes, and molecular functions associated with a list of genes. Returns connectivity paths between genes and enrichment terms.",
        "toolType": "API",
        "tags": [
            "biological-pathway-discovery",
            "connectivity-path-ranking",
            "enrichr-integration",
            "functional-enrichment",
            "gene-enrichment-analysis",
            "gene-pathway-connectivity",
            "gene-set-enrichment",
            "genomics",
            "molecular-function-analysis",
            "network-biology",
            "pathway-enrichment",
            "systems-biology",
            "transcriptomics"
        ],
        "category": "EnrichrTool",
        "lab": "Zitnik Lab",
        "source": "Enrichr",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform gene enrichment analysis",
            "Identify biological pathways, processes, and molecular functions",
            "Return connectivity paths between genes and enrichment terms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_list": {
                "type": "array",
                "description": "List of gene names or symbols to analyze. At least 2 genes are required for path ranking analysis."
            },
            "libs": {
                "type": "array",
                "description": "List of enrichment libraries to use for analysis."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of gene names or symbols to analyze. At least 2 genes are required for path ranking analysis.",
                    "minItems": 2
                },
                "libs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of enrichment libraries to use for analysis.",
                    "default": [
                        "WikiPathways_2024_Human",
                        "Reactome_Pathways_2024",
                        "MSigDB_Hallmark_2020",
                        "GO_Molecular_Function_2023",
                        "GO_Biological_Process_2023"
                    ]
                }
            },
            "required": [
                "gene_list"
            ]
        },
        "exampleInput": {
            "gene_list": [
                "TP53",
                "BRCA1",
                "EGFR"
            ],
            "libs": [
                "WikiPathways_2024_Human",
                "Reactome_Pathways_2024",
                "MSigDB_Hallmark_2020",
                "GO_Molecular_Function_2023",
                "GO_Biological_Process_2023"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e6a1f3c8-4d23-4ba1-9d0a-2f2a4f53d8d1",
        "name": "FAERS_count_reactions_by_drug_event",
        "description": "Counts adverse reactions reported for a specified drug with optional filters on patient details and event seriousness.",
        "detailed_description": "Count the number of adverse reactions reported for a given drug, filtered by patient details, event seriousness, and reaction outcomes. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-analysis",
            "age-sex-stratification",
            "country-specific-filter",
            "drug-safety-monitoring",
            "faers-data",
            "faers-query",
            "patient-demographics-filter",
            "pharmacovigilance",
            "reaction-counting",
            "reaction-outcome-stats",
            "regulatory-reporting",
            "seriousness-filter",
            "signal-detection"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Count number of adverse reactions for a given drug",
            "Filter results by patient sex, age group, occurrence country, seriousness, and death outcome",
            "Retrieve exact reaction MedDRA Preferred Terms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "patientsex": {
                "type": "string",
                "description": "Patient sex, leave it blank if you don't want to apply a filter."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Patient age group."
            },
            "occurcountry": {
                "type": "string",
                "description": "Country where event occurred."
            },
            "serious": {
                "type": "string",
                "description": "Whether the event was serious."
            },
            "seriousnessdeath": {
                "type": "string",
                "description": "Was death reported?"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Patient sex, leave it blank if you don't want to apply a filter."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Patient age group."
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$",
                    "description": "Country where event occurred."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Whether the event was serious."
                },
                "seriousnessdeath": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Was death reported?"
                }
            },
            "required": [
                "medicinalproduct"
            ]
        },
        "exampleInput": {
            "medicinalproduct": "Aspirin",
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US",
            "serious": "No",
            "seriousnessdeath": "No"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f10b8e-9b47-4d2a-9e2f-4c6a9d12b345",
        "name": "FAERS_count_drugs_by_drug_event",
        "description": "Counts distinct drugs in FAERS adverse event reports with optional filters for patient sex, age group, country, and seriousness.",
        "detailed_description": "Count the number of different drugs involved in FDA adverse event reports, filtered by patient details, country, and seriousness. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-analysis",
            "adverse-event-count",
            "country-specific-analysis",
            "drug-incident-count",
            "drug-safety-monitoring",
            "faers-data",
            "fda-adverse-reports",
            "patient-demographics-filter",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "real-world-evidence",
            "report-statistics",
            "safety-surveillance",
            "serious-adverse-events",
            "sex-age-filter"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Count distinct drugs in FAERS adverse event reports",
            "Filter by patient sex",
            "Filter by patient age group",
            "Filter by event country",
            "Filter by seriousness"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "patientsex": {
                "type": "string (enum: Male, Female)",
                "description": "Patient sex, leave it blank if you don't want to apply a filter."
            },
            "patientagegroup": {
                "type": "string (enum: Neonate, Infant, Child, Adolescent, Adult, Elderly)",
                "description": "Patient age group."
            },
            "occurcountry": {
                "type": "string (pattern: ^[A-Z]{2}$)",
                "description": "Country where event occurred."
            },
            "serious": {
                "type": "string (enum: Yes, No)",
                "description": "Whether the event was serious."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Patient sex, leave it blank if you don't want to apply a filter."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Patient age group."
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$",
                    "description": "Country where event occurred."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Whether the event was serious."
                }
            },
            "required": []
        },
        "exampleInput": {
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US",
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9c3c35-3d1b-4f0a-9c3e-d4b9bacdf123",
        "name": "FAERS_count_country_by_drug_event",
        "description": "Count adverse event reports per country with filters for drug, patient demographics, and seriousness.",
        "detailed_description": "Count the number of adverse event reports per country of occurrence, filtered by drug, patient demographics, and seriousness. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-reporting",
            "country-level-analysis",
            "demographic-filtering",
            "drug-safety",
            "drug-specific-report-count",
            "faers-adverse-event",
            "fda-adverse-event-reporting",
            "patient-demographics",
            "pharmacovigilance",
            "public-health-surveillance",
            "real-world-evidence",
            "safety-surveillance",
            "seriousness-filtering"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Count adverse event reports per country",
            "Filter by medicinal product (drug)",
            "Filter by patient sex",
            "Filter by patient age group",
            "Filter by seriousness"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "patientsex": {
                "type": "string",
                "description": "Patient sex, leave it blank if you don't want to apply a filter."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Patient age group."
            },
            "serious": {
                "type": "string",
                "description": "Whether the event was serious."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Patient sex, leave it blank if you don't want to apply a filter."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Patient age group."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Whether the event was serious."
                }
            },
            "required": []
        },
        "exampleInput": {
            "medicinalproduct": "Aspirin",
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7cbb1f0-6aed-4f7b-b43d-8c8d7b6a9bdf",
        "name": "FAERS_count_reportercountry_by_drug_event",
        "description": "Counts FDA adverse event reports by primary reporter country with optional filters.",
        "detailed_description": "Count the number of FDA adverse event reports grouped by the country of the primary reporter. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-count",
            "age-sex-stratification",
            "country-based-reporting",
            "data-aggregation",
            "drug-event-statistics",
            "drug-safety-monitoring",
            "faers-data-analysis",
            "patient-demographics-filtering",
            "pharmacovigilance",
            "post-marketing-surveillance",
            "regulatory-reporting",
            "reporter-country-distribution",
            "serious-adverse-events",
            "signal-detection"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Counts FDA adverse event reports",
            "Groups results by primary reporter country",
            "Filters by medicinal product",
            "Filters by patient sex",
            "Filters by patient age group",
            "Filters by seriousness"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "patientsex": {
                "type": "string",
                "description": "Patient sex, leave it blank if you don't want to apply a filter."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Patient age group."
            },
            "serious": {
                "type": "string",
                "description": "Whether the event was serious."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Patient sex, leave it blank if you don't want to apply a filter."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Patient age group."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Whether the event was serious."
                }
            },
            "required": []
        },
        "exampleInput": {
            "medicinalproduct": "Aspirin",
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "07e241fa-1d3f-4e37-8b54-a1c4b9f0c3d2",
        "name": "FAERS_count_seriousness_by_drug_event",
        "description": "Counts serious and non-serious adverse event reports from FAERS filtered by drug and demographics.",
        "detailed_description": "Count the number of adverse event reports classified as serious or non-serious, filtered by drug and patient demographics. In results, term Serious means: 'The adverse event resulted in death, a life threatening condition, hospitalization, disability, congenital anomaly, or other serious condition', term Non-serious means 'The adverse event did not result in any of the above' Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-count",
            "drug-adverse-event",
            "faers-data",
            "filter-by-country",
            "filter-by-drug",
            "non-serious-events",
            "patient-demographics-filter",
            "pharmacovigilance",
            "post-market-surveillance",
            "regulatory-science",
            "seriousness-analysis",
            "seriousness-classification"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Count serious adverse event reports by drug",
            "Count non-serious adverse event reports by drug",
            "Filter results by patient sex",
            "Filter results by patient age group",
            "Filter results by country of occurrence"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "patientsex": {
                "type": "string",
                "description": "Patient sex, leave it blank if you don't want to apply a filter."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Patient age group."
            },
            "occurcountry": {
                "type": "string",
                "description": "Country where event occurred."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Patient sex, leave it blank if you don't want to apply a filter."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Patient age group."
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$",
                    "description": "Country where event occurred."
                }
            },
            "required": []
        },
        "exampleInput": {
            "medicinalproduct": "Aspirin",
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2e5d8d4-1f49-4c7a-a2b6-3c2d9e0f4a1b",
        "name": "FAERS_count_outcomes_by_drug_event",
        "description": "Counts adverse reaction outcomes by drug and demographics using FAERS data.",
        "detailed_description": "Count the outcome of adverse reactions (recovered, recovering, fatal, unresolved) filtered by drug, seriousness, and demographics. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-reaction-outcomes",
            "age-sex-stratification",
            "country-specific-reports",
            "demographic-stratification",
            "drug-outcome-statistics",
            "drug-safety-monitoring",
            "faers-adverse-event-count",
            "medicinalproduct-filter",
            "patient-outcome-categories",
            "pharmacovigilance-analysis",
            "postmarketing-surveillance",
            "recovered-fatal-reactions",
            "seriousness-level-filter"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter adverse event reports by drug name",
            "Filter results by patient sex",
            "Filter results by patient age group",
            "Filter results by occurrence country",
            "Count and categorize reaction outcomes"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "patientsex": {
                "type": "string",
                "description": "Patient sex (Male or Female)."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Patient age group (Neonate, Infant, Child, Adolescent, Adult, Elderly)."
            },
            "occurcountry": {
                "type": "string",
                "description": "Two-letter country code (ISO 3166-1 alpha-2)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ]
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$"
                }
            },
            "required": [
                "medicinalproduct"
            ]
        },
        "exampleInput": {
            "medicinalproduct": "Ibuprofen",
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8b8b4-1c2d-4f6a-ae3f-1b2e3d4c5f6a",
        "name": "FAERS_count_drug_routes_by_event",
        "description": "Counts common drug administration routes in FAERS adverse event reports.",
        "detailed_description": "Count the most common routes of administration for drugs involved in adverse event reports. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-reporting",
            "adverse-event-route-count",
            "dosage-route-distribution",
            "drug-administration-route",
            "drug-safety-monitoring",
            "epidemiological-analysis",
            "faers-data-exploration",
            "faers-route-analysis",
            "medication-route-statistics",
            "pharmacovigilance-analysis",
            "regulatory-safety-reporting",
            "serious-adverse-event",
            "signal-detection"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Counts common drug administration routes",
            "Filters events by drug name and seriousness",
            "Maps administration route codes to human-readable descriptions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            },
            "serious": {
                "type": "string",
                "description": "Seriousness of event."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Seriousness of event."
                }
            },
            "required": [
                "medicinalproduct"
            ]
        },
        "exampleInput": {
            "medicinalproduct": "Aspirin",
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "FAERS_count_patient_age_distribution",
        "description": "Provide age distribution analysis of adverse event reports for a specified drug using FAERS data.",
        "detailed_description": "Analyze the age distribution of patients experiencing adverse events for a specific drug. The age groups are: Neonate (0-28 days), Infant (29 days - 23 months), Child (2-11 years), Adolescent (12-17 years), Adult (18-64 years), Elderly (65+ years). Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-demographics",
            "adverse-event-reporting-system",
            "age-distribution",
            "age-stratification",
            "drug-safety-analysis",
            "faers-data-analysis",
            "geriatric-safety",
            "patient-demographics",
            "pediatric-safety",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "risk-profile-by-age"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search FAERS adverse event reports by drug name",
            "Compute patient age distribution across defined age groups",
            "Map age group codes to descriptive labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                }
            },
            "required": [
                "medicinalproduct"
            ]
        },
        "exampleInput": {
            "medicinalproduct": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "FAERS_count_death_related_by_drug",
        "description": "Counts fatal adverse events for a specified drug using FAERS data.",
        "detailed_description": "Count adverse events associated with patient death for a given drug. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "death-related-adverse-events",
            "drug-mortality-analysis",
            "drug-safety-monitoring",
            "faers-data-query",
            "faers-fatality-count",
            "fatality-analysis",
            "mortality-reporting",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "regulatory-surveillance",
            "risk-assessment",
            "safety-signal-detection"
        ],
        "category": "FDADrugAdverseEventTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Counts adverse events associated with patient death for a specified drug",
            "Searches FAERS reports by medicinalproduct field",
            "Maps seriousnessdeath codes to 'death' or 'alive'"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproduct": {
                "type": "string",
                "description": "Drug name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproduct": {
                    "type": "string",
                    "description": "Drug name."
                }
            },
            "required": [
                "medicinalproduct"
            ]
        },
        "exampleInput": {
            "medicinalproduct": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f1aafa-6cbd-4f52-b9bb-8c015fbae781",
        "name": "FAERS_count_additive_adverse_reactions",
        "description": "Aggregate adverse reaction counts across specified drugs with demographic and seriousness filters.",
        "detailed_description": "Additive multi-drug data: Aggregate adverse reaction counts across specified medicinal products, stratified by demographics, seriousness, and outcomes. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "additive-multi-drug-analysis",
            "adverse-event-data-analysis",
            "adverse-reaction-aggregation",
            "country-specific-analysis",
            "demographic-filtering",
            "drug-safety-monitoring",
            "faers-adverse-event-count",
            "fatal-outcome-filtering",
            "pharmacoepidemiology",
            "pharmacovigilance-data-processing",
            "postmarketing-surveillance",
            "regulatory-safety-reporting",
            "seriousness-stratification",
            "signal-detection"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Aggregate adverse reaction counts across multiple drugs",
            "Stratify results by patient sex",
            "Stratify results by patient age group",
            "Filter by country of occurrence",
            "Filter by seriousness",
            "Filter by fatal outcomes"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "patientsex": {
                "type": "string",
                "description": "Filter by patient sex."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Filter by patient age group."
            },
            "occurcountry": {
                "type": "string",
                "description": "Filter by ISO2 country code of occurrence."
            },
            "serious": {
                "type": "string",
                "description": "Filter by seriousness classification."
            },
            "seriousnessdeath": {
                "type": "string",
                "description": "Filter for fatal outcomes."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Filter by patient sex."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Filter by patient age group."
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$",
                    "description": "Filter by ISO2 country code of occurrence."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Filter by seriousness classification."
                },
                "seriousnessdeath": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Filter for fatal outcomes."
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "Aspirin",
                "Ibuprofen"
            ],
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US",
            "serious": "Yes",
            "seriousnessdeath": "No"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3a153ec-3d2c-4e2f-b5fa-64f7e0d291c1",
        "name": "FAERS_count_additive_event_reports_by_country",
        "description": "Aggregate FAERS report counts by country for specified drugs.",
        "detailed_description": "Additive multi-drug data: Aggregate report counts by country of occurrence across specified medicinal products. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "additive-interaction-reports",
            "adverse-event-aggregation",
            "country-report-counts",
            "drug-safety-statistics",
            "faers-data",
            "medicinalproduct-filter",
            "multi-drug-analysis",
            "patient-demographics-filter",
            "pharmacovigilance",
            "postmarketing-surveillance",
            "regulatory-surveillance",
            "seriousness-stratification"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Aggregate report counts by country for specified medicinal products",
            "Filter results by patient sex",
            "Filter results by patient age group",
            "Filter results by report seriousness"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "patientsex": {
                "type": "string",
                "description": "Filter by sex."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Filter by age group."
            },
            "serious": {
                "type": "string",
                "description": "Filter by seriousness."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Filter by sex."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Filter by age group."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Filter by seriousness."
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "Aspirin",
                "Ibuprofen"
            ],
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "serious": "No"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f27c3d4e-9b0a-4a2f-91e1-e01f2a3b4c5d",
        "name": "FAERS_count_additive_reports_by_reporter_country",
        "description": "Aggregates FAERS adverse event reports by reporter country for specified drugs.",
        "detailed_description": "Additive multi-drug data: Aggregate adverse event reports by primary reporter country across medicinal products. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "additive-drug-reports",
            "adverse-event-aggregation",
            "drug-safety-monitoring",
            "faers-data-aggregation",
            "faers-report-count",
            "medicinal-product-filters",
            "multi-drug-safety",
            "patient-demographic-filters",
            "pharmacoepidemiology",
            "pharmacovigilance-analysis",
            "regulatory-reporting",
            "reporter-country-aggregation",
            "serious-adverse-events",
            "signal-detection"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Aggregate adverse event reports by reporter country",
            "Filter by medicinal products",
            "Filter by patient sex",
            "Filter by patient age group",
            "Filter by seriousness"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "patientsex": {
                "type": "string",
                "description": "Filter by sex."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Filter by age group."
            },
            "serious": {
                "type": "string",
                "description": "Filter by seriousness."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Filter by sex."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Filter by age group."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Filter by seriousness."
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "Aspirin",
                "Ibuprofen"
            ],
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3a049bf-7f8c-4c2f-8c61-a8d9f1e4c6d7",
        "name": "FAERS_count_additive_seriousness_classification",
        "description": "Quantifies serious vs non-serious adverse event counts across multiple medicinal products using FAERS data.",
        "detailed_description": "Additive multi-drug data: Quantify serious vs non-serious classifications across medicinal products, annotated per regulatory definitions. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "adverse-event-quantification",
            "age-sex-stratification",
            "drug-safety-monitoring",
            "faers-data-analysis",
            "faers-seriousness-classification",
            "iso2-country-filter",
            "medicinal-product-comparison",
            "multi-drug-additive-analysis",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "regulatory-definition-annotation",
            "regulatory-reporting",
            "serious-vs-nonserious",
            "signal-detection"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Quantify serious vs non-serious adverse event classifications across medicinal products",
            "Filter by patient sex",
            "Filter by patient age group",
            "Filter by occurrence country code",
            "Map classification codes to 'Serious' and 'Non-serious' labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "patientsex": {
                "type": "string",
                "description": "Filter by sex."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Filter by age group."
            },
            "occurcountry": {
                "type": "string",
                "description": "ISO2 country code filter."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Filter by sex."
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ],
                    "description": "Filter by age group."
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$",
                    "description": "ISO2 country code filter."
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "Aspirin",
                "Ibuprofen"
            ],
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2a7f7e6-ec8b-4b9f-9a82-0a1a7b2c3d4e",
        "name": "FAERS_count_additive_reaction_outcomes",
        "description": "Counts standardized reaction outcomes across multiple drugs from FAERS.",
        "detailed_description": "Additive multi-drug data: Determine reaction outcome counts (e.g., recovered, resolving, fatal) across medicinal products using standardized outcome mappings. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "additive-reaction-outcomes",
            "adverse-event-reporting-system",
            "demographic-stratification",
            "drug-safety-monitoring",
            "faers-adverse-event-analysis",
            "medicinal-product-aggregation",
            "multi-drug-safety-analysis",
            "outcome-frequency-analysis",
            "patient-demographics-filtering",
            "pharmacovigilance-data",
            "polypharmacy-risk-assessment",
            "reaction-outcome-counting",
            "regulatory-safety-reporting",
            "standardized-outcome-mapping"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Count reaction outcomes across medicinal products",
            "Filter data by medicinal products",
            "Filter data by patient sex",
            "Filter data by patient age group",
            "Filter data by occurrence country",
            "Map standardized reaction outcomes to categories"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "patientsex": {
                "type": "string",
                "description": "Filter by patient sex (Male or Female)."
            },
            "patientagegroup": {
                "type": "string",
                "description": "Filter by patient age group (Neonate, Infant, Child, Adolescent, Adult, Elderly)."
            },
            "occurcountry": {
                "type": "string",
                "description": "Filter by occurrence country (ISO country code)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "patientsex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ]
                },
                "patientagegroup": {
                    "type": "string",
                    "enum": [
                        "Neonate",
                        "Infant",
                        "Child",
                        "Adolescent",
                        "Adult",
                        "Elderly"
                    ]
                },
                "occurcountry": {
                    "type": "string",
                    "pattern": "^[A-Z]{2}$"
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "aspirin",
                "ibuprofen"
            ],
            "patientsex": "Female",
            "patientagegroup": "Adult",
            "occurcountry": "US"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3bf3e2a-9dd4-4e89-8ccd-12a3456789ab",
        "name": "FAERS_count_additive_administration_routes",
        "description": "Enumerates and counts administration routes for adverse events across specified medicinal products using FAERS data.",
        "detailed_description": "Additive multi-drug data: Enumerate and count administration routes for adverse events across specified medicinal products, using standardized route codes. Data source: FDA Adverse Event Reporting System (FAERS).",
        "toolType": "API",
        "tags": [
            "administration-route-counting",
            "adverse-event-route-enumeration",
            "drug-safety-analysis",
            "faers-administration-route-analysis",
            "faers-data-processing",
            "medicinal-product-comparison",
            "multi-drug-adverse-events",
            "pharmacoepidemiology",
            "pharmacovigilance-surveillance",
            "regulatory-adverse-reporting",
            "serious-event-filtering",
            "standardized-route-codes"
        ],
        "category": "FDACountAdditiveReactionsTool",
        "lab": "Zitnik Lab",
        "source": "FAERS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Enumerate and count administration routes for adverse events",
            "Support filtering by seriousness",
            "Accept array of medicinal product names as input",
            "Map standardized route codes to descriptions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medicinalproducts": {
                "type": "array",
                "description": "Array of medicinal product names."
            },
            "serious": {
                "type": "string",
                "description": "Filter by seriousness."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medicinalproducts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of medicinal product names."
                },
                "serious": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "description": "Filter by seriousness."
                }
            },
            "required": [
                "medicinalproducts"
            ]
        },
        "exampleInput": {
            "medicinalproducts": [
                "Aspirin",
                "Ibuprofen"
            ],
            "serious": "Yes"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f33c6a-afa3-4a07-9c12-d4f1a5e1dfc2",
        "name": "alphafold_get_prediction_by_uniprot_id",
        "description": "Retrieve AlphaFold predicted protein structure metadata and download links by UniProt accession ID.",
        "detailed_description": "Retrieve AlphaFold-predicted 3D protein structure metadata and download links for a given UniProt accession ID.",
        "toolType": "ML Model",
        "tags": [
            "3d-protein-model",
            "alphafold-prediction",
            "bioinformatics",
            "computational-biology",
            "metadata-retrieval",
            "molecular-visualization",
            "protein-modeling",
            "protein-structure",
            "rest-api-integration",
            "structural-biology",
            "structure-download",
            "uniprot-accession-id"
        ],
        "category": "AlphaFoldRESTTool",
        "lab": "Zitnik Lab",
        "source": "AlphaFold",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve protein structure metadata",
            "Provide download links for PDB, CIF, and BCIF files",
            "Access predicted aligned error plots and data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "uniprot_id": {
                "type": "string",
                "description": "UniProt accession ID (e.g., 'P69905' for hemoglobin alpha)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "uniprot_id": {
                    "type": "string",
                    "description": "UniProt accession ID (e.g., 'P69905' for hemoglobin alpha)."
                }
            },
            "required": [
                "uniprot_id"
            ]
        },
        "exampleInput": {
            "uniprot_id": "P69905"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d7f6d24f-13e4-4e65-9b42-fdc6e7f51757",
        "name": "FDA_get_dosage_forms_and_strengths_by_drug_name",
        "description": "Retrieve dosage forms and strengths by drug name.",
        "detailed_description": "Retrieve dosage forms and strengths information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "dosage-forms",
            "dosage-strengths",
            "drug-database-query",
            "drug-information-retrieval",
            "fda-api-integration",
            "fda-drug-labels",
            "medication-form-search",
            "medication-strengths",
            "pharmaceutical-formulations",
            "regulatory-healthcare-data",
            "strength-lookup"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve dosage forms and strengths for a specified drug name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6cd7282-8e8a-45e5-b1c8-2f79ab3e2a44",
        "name": "FDA_get_drug_names_by_abuse_dependence_info",
        "description": "Retrieve drug names based on abuse and dependence information, including control status, abuse types, and related adverse reactions.",
        "detailed_description": "Retrieve the drug name based on information about drug abuse and dependence, including whether the drug is a controlled substances, the types of possible abuse, and adverse reactions relevant to those abuse types.",
        "toolType": "API",
        "tags": [
            "abuse-dependence-lookup",
            "addiction-risk-assessment",
            "adverse-reaction-filter",
            "controlled-substance-query",
            "drug-name-extraction",
            "fda-drug-label",
            "medical-informatics",
            "pharmacovigilance-query",
            "public-health-surveillance",
            "regulatory-compliance",
            "substance-dependence-search",
            "toxicology-data-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by abuse and dependence information",
            "Return brand and generic names",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "abuse_info": {
                "type": "string",
                "description": "Information about drug abuse and dependence."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "abuse_info": {
                    "type": "string",
                    "description": "Information about drug abuse and dependence.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "abuse_info": "opioid dependence",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8e317a-1e60-4a12-8f29-2bc21c5d4d8a",
        "name": "FDA_get_abuse_dependence_info_by_drug_name",
        "description": "Retrieve key drug abuse and dependence details by drug name.",
        "detailed_description": "Get information about drug abuse and dependence based on the drug name, specifically information on whether the drug is a controlled substances, the types of possible abuse, and adverse reactions relevant to those abuse types.",
        "toolType": "API",
        "tags": [
            "abuse-potential-assessment",
            "adverse-reaction-data",
            "controlled-substance-status",
            "drug-abuse-dependence",
            "drug-name-query",
            "drug-safety",
            "fda-drug-label",
            "medical-informatics",
            "pagination-parameters",
            "pharmacovigilance",
            "public-health-informatics",
            "regulatory-compliance",
            "substance-abuse-research"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug abuse and dependence details for a given drug",
            "Identify if a drug is a controlled substance",
            "List types of possible drug abuse",
            "Report adverse reactions relevant to abuse types",
            "Supports pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9b8fd47-5e2a-4a0f-9cbd-1b26bfbb1c3e",
        "name": "FDA_get_drug_names_by_lab_test_interference",
        "description": "Retrieve drug names that interfere with laboratory tests.",
        "detailed_description": "Retrieve drug names that have known interference with laboratory tests.",
        "toolType": "API",
        "tags": [
            "api-data-retrieval",
            "clinical-chemistry",
            "clinical-research-tool",
            "drug-interference-data",
            "drug-lab-interaction",
            "drug-safety",
            "fda-drug-label",
            "lab-test-interference",
            "laboratory-medicine",
            "medication-interference",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "structured-drug-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names with known lab test interference",
            "Filter by drug indication",
            "Paginate results with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "lab_test_interference": {
                "type": "string",
                "description": "Information about any known interference by the drug with laboratory tests."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "lab_test_interference": {
                    "type": "string",
                    "description": "Information about any known interference by the drug with laboratory tests.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "lab_test_interference": "Interference with glucose measurement",
            "indication": "Diabetes mellitus",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a78402c8-1e67-4a92-b532-4b910a9fb77a",
        "name": "FDA_get_lab_test_interference_info_by_drug_name",
        "description": "Get laboratory test interference information for a specified drug.",
        "detailed_description": "Retrieve information about laboratory test interferences for a specific drug.",
        "toolType": "API",
        "tags": [
            "analytical-interference",
            "clinical-decision-support",
            "clinical-laboratory",
            "clinical-pharmacology",
            "diagnostic-interference",
            "drug-interference-info",
            "drug-name-query",
            "fda-drug-label",
            "json-api-response",
            "lab-test-interference",
            "laboratory-medicine",
            "test-assay-interference"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve laboratory test interferences by drug name",
            "Support pagination via limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4f53f4a-8fd1-4a63-9bda-d2c69f0ddb20",
        "name": "FDA_get_drug_names_by_drug_interactions",
        "description": "Get drug names based on specified drug interactions.",
        "detailed_description": "Retrieve a list of drug names that have the specified drug interactions.",
        "toolType": "API",
        "tags": [
            "adverse-interaction-detection",
            "api-query-parameters",
            "clinical-pharmacology",
            "drug-interaction-database",
            "drug-interaction-search",
            "drug-name-lookup",
            "drug-safety-screening",
            "fda-drug-label",
            "healthcare-informatics",
            "interaction-based-retrieval",
            "pagination-support",
            "pharmacovigilance",
            "prescription-safety",
            "regulatory-compliance",
            "structured-data-output"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by specified interaction term",
            "Filter results by indication",
            "Support pagination with limit and skip parameters",
            "Return brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "interaction_term": {
                "type": "string",
                "description": "The term to search for in drug interactions."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "interaction_term": {
                    "type": "string",
                    "description": "The term to search for in drug interactions.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "interaction_term": "aspirin",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a7f2dd2-51c7-4f6e-a3f1-6a8e24bf2468",
        "name": "FDA_get_drug_interactions_by_drug_name",
        "description": "Retrieve drug interactions for a specified drug name.",
        "detailed_description": "Retrieve drug interactions based on the specified drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-screening",
            "clinical-decision-support",
            "drug-drug-interactions",
            "drug-interactions",
            "drug-name-query",
            "drug-safety",
            "fda-drug-label",
            "fdadruglabel",
            "interaction-checker",
            "medical-informatics",
            "pagination-support",
            "pharmacology-data",
            "pharmacovigilance",
            "public-health-research"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug interactions by drug name",
            "Supports limiting and skipping records",
            "Searches openFDA brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c3f5b1a2-6d7e-4c9f-8b12-3f4a8b9d0e6f",
        "name": "FDA_get_drug_names_by_effective_time",
        "description": "Retrieve drug names by labeling document effective date.",
        "detailed_description": "Retrieve drug names based on the effective time of the labeling document.",
        "toolType": "API",
        "tags": [
            "date-based-query",
            "drug-name-retrieval",
            "effective-time-filter",
            "fda-database-query",
            "fda-drug-labels",
            "healthcare-regulations",
            "indication-based-search",
            "labeling-document-version",
            "pagination-support",
            "pharmaceutical-data",
            "pharmacovigilance",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on effective time",
            "Filter results by indication",
            "Paginate results using limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "effective_time": {
                "type": "string",
                "description": "Date reference to the particular version of the labeling document in YYYYmmdd format."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "effective_time": {
                    "type": "string",
                    "description": "Date reference to the particular version of the labeling document in YYYYmmdd format.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "effective_time": "20230101",
            "indication": "Pain",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "550e8400-e29b-41d4-a716-446655440000",
        "name": "FDA_get_effective_time_by_drug_name",
        "description": "Retrieve effective time of labeling document by drug name.",
        "detailed_description": "Retrieve effective time of the labeling document based on the drug name.",
        "toolType": "API",
        "tags": [
            "batch-pagination",
            "drug-approval-timestamp",
            "drug-label-versioning",
            "drug-name-query",
            "effective-time-retrieval",
            "fda-drug-label",
            "fda-label-database",
            "label-document-timestamp",
            "label-effective-date",
            "metadata-extraction",
            "pharma-label-metadata",
            "pharmaco-regulatory",
            "regulatory-approval-date",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve effective time for drug labeling documents",
            "Search by brand or generic drug name",
            "Support pagination through limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_name_by_environmental_warning",
        "description": "Retrieve drug names for specified environmental warnings",
        "detailed_description": "Retrieve the drug name based on the specified environmental warnings.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "drug-name-retrieval",
            "ecotoxicology",
            "environmental-hazard-warnings",
            "environmental-health",
            "environmental-warning-filter",
            "fda-drug-label",
            "fda-label-query",
            "medication-disposal-guidelines",
            "pharmaceutical-safety",
            "regulatory-compliance",
            "text-based-search"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by environmental warning",
            "Limit number of records returned",
            "Skip number of records in results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "environmental_warning": {
                "type": "string",
                "description": "The environmental warning text to search for."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "environmental_warning": {
                    "type": "string",
                    "description": "The environmental warning text to search for.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "environmental_warning": "Flammable",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9a4f8b2-3e1c-4a6d-8a9b-f2c3e4d5b6a7",
        "name": "FDA_get_environmental_warning_by_drug_name",
        "description": "Retrieve environmental warnings for a specific drug by name.",
        "detailed_description": "Fetch environmental warnings for a specific drug based on its name.",
        "toolType": "API",
        "tags": [
            "drug-environmental-warning",
            "drug-name-query",
            "eco-toxicity-warning",
            "environmental-risk-assessment",
            "environmental-warning-retrieval",
            "fda-drug-labeling",
            "limit-skip-parameters",
            "pagination-support",
            "pharmacoenvironmentology",
            "public-health-safety",
            "regulatory-compliance",
            "toxicology-data-fetch"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search environmental warnings by drug name",
            "Supports result limiting",
            "Supports pagination through skip parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b07384-d9a0-4fdf-8e79-333c67efbcd0",
        "name": "FDA_get_drug_names_by_food_safety_warnings",
        "description": "Retrieve drug names based on food safety warnings.",
        "detailed_description": "Retrieve drug names based on specific food safety warnings.",
        "toolType": "API",
        "tags": [
            "adverse-food-reaction",
            "api-query",
            "data-pagination",
            "drug-name-retrieval",
            "drug-safety-monitoring",
            "fda-drug-labels",
            "food-drug-interaction",
            "food-safety-warning-filter",
            "indication-based-search",
            "pharmacovigilance",
            "regulatory-compliance",
            "safety-guidance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by food safety warnings",
            "Filter results by drug indication",
            "Return brand and generic drug names",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "field_info": {
                "type": "string",
                "description": "Information related to food safety warnings."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "field_info": {
                    "type": "string",
                    "description": "Information related to food safety warnings.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "field_info": "Avoid dairy products",
            "indication": "Pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2d9b1c4-3c4f-4e7e-94f2-9edf0a5be3d1",
        "name": "FDA_get_drug_names_by_general_precautions",
        "description": "Retrieves drug brand and generic names based on general precautions information.",
        "detailed_description": "Retrieve drug names based on specific general precautions information.",
        "toolType": "API",
        "tags": [
            "drug-indication-search",
            "drug-name-extraction",
            "drug-safety-precautions",
            "fda-drug-labels",
            "fda-safety-information",
            "general-precautions-filter",
            "label-based-drug-discovery",
            "medical-precautions-search",
            "medication-safety-guidance",
            "pharmaceutical-regulatory-data",
            "pharmacovigilance",
            "structured-label-data",
            "text-based-precaution-query",
            "therapeutic-indication-filter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by general precautions information",
            "Optional filtering by drug indication",
            "Supports result pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "precaution_info": {
                "type": "string",
                "description": "Information about any special care to be exercised for safe and effective use of the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "precaution_info": {
                    "type": "string",
                    "description": "Information about any special care to be exercised for safe and effective use of the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "precaution_info": "Use with caution in patients with renal impairment",
            "indication": "Treatment of hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3d9c5a7-2b4e-4d87-9c8f-1a2b3c4d5e6f",
        "name": "FDA_get_general_precautions_by_drug_name",
        "description": "Get general precautions for a given drug name.",
        "detailed_description": "Retrieve general precautions information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-precautions",
            "drug-safety-information",
            "fda-drug-label",
            "fda-label-extraction",
            "general-precautions",
            "label-data-retrieval",
            "medication-safety",
            "pagination-support",
            "pharmacovigilance",
            "regulatory-compliance",
            "string-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search general precautions by drug name",
            "Supports limit and skip parameters for pagination",
            "Returns general_precautions from FDA drug labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e1a1f462-6e8a-4f8e-bf87-9e3d6a5b1234",
        "name": "FDA_get_drug_names_by_geriatric_use",
        "description": "Retrieve drug names with specific geriatric use information.",
        "detailed_description": "Retrieve drug names that have specific information about geriatric use.",
        "toolType": "API",
        "tags": [
            "age-specific-dosing",
            "drug-name-retrieval",
            "drug-safety-hazards",
            "elderly-patient-safety",
            "fda-drug-label-api",
            "geriatric-pharmacology",
            "geriatric-use-limitation",
            "indication-based-query",
            "json-output",
            "pagination-support",
            "pharmacovigilance",
            "structured-data-fetch"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on geriatric use criteria",
            "Filter results by drug indication",
            "Paginate results using limit and skip parameters",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "geriatric_use": {
                "type": "string",
                "description": "Information about any limitations on any geriatric indications, needs for specific monitoring, hazards associated with use of the drug in the geriatric population.",
                "required": true
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug.",
                "required": false
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "geriatric_use": {
                    "type": "string",
                    "description": "Information about any limitations on any geriatric indications, needs for specific monitoring, hazards associated with use of the drug in the geriatric population.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "geriatric_use": "Use with caution due to decreased renal function",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9b8d3e0-6a4b-4a1a-8b0b-1c408d3b8c7f",
        "name": "FDA_get_geriatric_use_info_by_drug_name",
        "description": "Retrieve geriatric use information by drug name.",
        "detailed_description": "Retrieve information about geriatric use based on the drug name.",
        "toolType": "API",
        "tags": [
            "FDA-drug-label",
            "age-specific-dosing",
            "clinical-pharmacology",
            "drug-name-query",
            "elderly-patient-guidelines",
            "geriatric-pharmacology",
            "geriatric-use-info",
            "pagination-support",
            "pharmacovigilance",
            "regulatory-compliance",
            "senior-patient-safety",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve geriatric use details by drug name",
            "Supports pagination with limit and skip",
            "Searches using both brand and generic names",
            "Returns geriatric_use field"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f5b8d36-9a1e-4e6f-b5d4-3f1e2a7c0c9b",
        "name": "FDA_get_dear_health_care_provider_letter_info_by_drug_name",
        "description": "Retrieve provider letters detailing new or updated information for a specified drug.",
        "detailed_description": "Fetch information about dear health care provider letters for a specific drug. The letters are sent by drug manufacturers to provide new or updated information about the drug.",
        "toolType": "API",
        "tags": [
            "dear-health-care-provider-letter-retrieval",
            "dhcp-letter-api",
            "drug-safety-communications",
            "drug-safety-monitoring",
            "fda-regulatory-data",
            "healthcare-provider-alerts",
            "limit-offset-pagination",
            "paginated-json-output",
            "pharmaceutical-regulation",
            "pharmacovigilance",
            "regulatory-affairs",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch dear health care provider letters",
            "Search by drug_name using openfda.brand_name or openfda.generic_name",
            "Paginate results with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4c515f03-b814-46cd-9248-31ec575527ea",
        "name": "get_zarr_info",
        "description": "Retrieve metadata about the zarr package, including support for chunked, compressed, N-dimensional arrays",
        "detailed_description": "Get information about the zarr package. Chunked, compressed, N-dimensional arrays",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-metadata",
            "array-storage-format",
            "chunked-array",
            "cloud-native-storage",
            "compressed-array",
            "data-analytics",
            "earth-science-data",
            "geospatial-data",
            "high-performance-computing",
            "n-dimensional-array",
            "scientific-data-storage",
            "zarr-info",
            "zarr-package"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "zarr",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the zarr package",
            "Supports chunked, compressed, N-dimensional arrays"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f6d2b8c3-9a4e-4f1b-8c67-e2d9c5aa9abc",
        "name": "get_xarray_info",
        "description": "Retrieve information about the xarray package, which offers N-D labeled arrays and datasets.",
        "detailed_description": "Get information about the xarray package. N-D labeled arrays and datasets in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-metadata",
            "data-structure-overview",
            "dataset-exploration",
            "labeled-arrays",
            "metadata-extraction",
            "multidimensional-arrays",
            "package-documentation",
            "python-package-info",
            "scientific-data-processing",
            "xarray-introspection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "xarray",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch xarray package details",
            "Describe N-D labeled arrays",
            "Describe Python datasets"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f74cd2d-6f9e-4f26-9d9e-2e6d4f74afcd",
        "name": "get_cupy_info",
        "description": "Retrieve information about the cupy package, a CUDA-accelerated NumPy-compatible array library.",
        "detailed_description": "Get information about the cupy package. NumPy-compatible array library accelerated with CUDA",
        "toolType": "Scientific Software Package",
        "tags": [
            "cuda-accelerated",
            "cupy-info",
            "cupy-package",
            "gpu-array-library",
            "gpu-computing",
            "high-performance-computing",
            "numpy-compatible",
            "package-explorer",
            "package-inspection",
            "package-metadata",
            "parallel-processing",
            "python-library",
            "scientific-computing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cupy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the cupy package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9b2d63d-a233-4123-9fdd-30cccefe15a3",
        "name": "get_joblib_info",
        "description": "Provides information about the joblib package and its lightweight pipelining capabilities.",
        "detailed_description": "Get information about the joblib package. Lightweight pipelining with Python functions",
        "toolType": "Scientific Software Package",
        "tags": [
            "dependency-analysis",
            "disk-backed-caching",
            "documentation-extraction",
            "function-caching",
            "joblib-info",
            "lightweight-caching",
            "machine-learning-pipelines",
            "multiprocessing-support",
            "package-metadata",
            "parallel-computing",
            "pipeline-optimization",
            "pipeline-serialization",
            "python-package-discovery",
            "python-pipelining",
            "version-inspection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "joblib",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the joblib package",
            "Support lightweight pipelining with Python functions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c8e7f21-1d3a-4b44-9f2e-f0d5a3b2c4e6",
        "name": "get_patsy_info",
        "description": "Get information about the patsy package",
        "detailed_description": "Get information about the patsy package. Python library for describing statistical models",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "data-science",
            "data-transformation",
            "design-matrices",
            "formula-interface",
            "metadata-retrieval",
            "model-specification",
            "package-documentation",
            "patsy-package",
            "python-library",
            "python-statistics",
            "r-style-formulas",
            "statistical-modeling",
            "statsmodels-integration"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "patsy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the patsy package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c58f6d4e-4e8b-4c72-9a8c-d3b2e5f1a6bc",
        "name": "get_pysam_info",
        "description": "Get information about pysam, the interface to SAM/BAM/CRAM files.",
        "detailed_description": "Get comprehensive information about pysam \u2013 interface to SAM/BAM/CRAM files",
        "toolType": "Scientific Software Package",
        "tags": [
            "alignment-file-processing",
            "bam-reading",
            "bioinformatics-toolkit",
            "cram-io",
            "file-format-conversion",
            "genomic-data-io",
            "high-throughput-sequencing",
            "next-generation-sequencing",
            "ngs-data-parsing",
            "pysam-interface",
            "python-api",
            "quick-start-guide",
            "sam-parsing",
            "sequence-alignment-parsing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pysam",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves comprehensive information about the pysam package",
            "Provides installation commands for pip and conda",
            "Includes usage examples and quick start guide",
            "Offers access to documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b8a8e2e-ffde-4c2b-9f29-5d0156d27b3f",
        "name": "get_pyfaidx_info",
        "description": "Fetch detailed information on pyfaidx for efficient FASTA indexing and random access",
        "detailed_description": "Get comprehensive information about pyfaidx \u2014 efficient FASTA file indexing and random access",
        "toolType": "Scientific Software Package",
        "tags": [
            "efficient-access",
            "faidx-indexing",
            "fasta-indexing",
            "genomic-data-processing",
            "large-fasta-files",
            "pyfaidx",
            "python-library",
            "quick-start-guide",
            "random-access",
            "sequence-data-management",
            "sequence-retrieval",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyfaidx",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package description",
            "Offer installation instructions",
            "Present usage examples (if requested)",
            "Detail quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d2fbb2f-5ce5-4ddc-ae32-9d3a4f6e5fbb",
        "name": "get_pyranges_info",
        "description": "Provides comprehensive info on PyRanges, an efficient genomic interval operations package",
        "detailed_description": "Get comprehensive information about PyRanges \u2013 efficient genomic interval operations",
        "toolType": "Scientific Software Package",
        "tags": [
            "bed-file-processing",
            "bioinformatics-pipeline",
            "computational-biology",
            "efficient-interval-operations",
            "genome-annotation",
            "genomic-data-analysis",
            "genomic-interval-operations",
            "interval-manipulation",
            "overlap-detection",
            "pyranges-info",
            "python-genomics",
            "region-based-queries",
            "sequencing-data"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyranges",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch detailed metadata for the PyRanges package",
            "Include usage examples and a quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8a1f6c42-7d8e-4b1c-9f35-2e1d7c9b4a16",
        "name": "get_pybedtools_info",
        "description": "Retrieves detailed information about the pybedtools package, a Python wrapper for BEDTools.",
        "detailed_description": "Get comprehensive information about pybedtools \u2013 Python wrapper for BEDTools",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bed-file-processing",
            "bedtools-integration",
            "bedtools-wrapper",
            "command-line-reference",
            "genomic-interval-analysis",
            "package-inspection",
            "pybedtools-documentation",
            "python-bioinformatics",
            "quick-start-guide",
            "software-discovery",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pybedtools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package description",
            "Provide installation commands",
            "Offer usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f1b5be9-4d6b-4c1b-9b45-ded8b3feb19d",
        "name": "get_pyliftover_info",
        "description": "Get information about PyLiftover: genomic coordinate conversion between assemblies",
        "detailed_description": "Get comprehensive information about PyLiftover \u2013 genomic coordinate conversion between assemblies",
        "toolType": "Scientific Software Package",
        "tags": [
            "assembly-liftover",
            "bioinformatics",
            "chromosome-coordinate-mapping",
            "coordinate-translation",
            "cross-assembly-mapping",
            "genome-coordinate-conversion",
            "genomic-data-processing",
            "genomic-liftover",
            "pyliftover",
            "python-genomics",
            "reference-genome-conversion",
            "variant-mapping"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyliftover",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive PyLiftover metadata",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b0f3d5e-2bf1-4d6c-98d1-57a3723b6c2e",
        "name": "get_deeptools_info",
        "description": "Retrieve detailed information about deepTools sequencing data processing",
        "detailed_description": "Get comprehensive information about deepTools \u2013 deep sequencing data processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package-info",
            "chip-seq-analysis",
            "computational-genomics",
            "deeptools-info-retrieval",
            "deeptools-metadata",
            "genomic-data-visualization",
            "genomics-pipeline-documentation",
            "next-generation-sequencing",
            "rna-seq-analysis",
            "sequencing-data-processing",
            "software-versioning",
            "tool-parameter-reporting"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "deeptools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about deepTools",
            "Provide installation instructions for deepTools",
            "Show usage examples for deepTools",
            "Fetch documentation link for deepTools"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about deepTools"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about deepTools"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a2c4902-e540-4f2a-9c65-d8a4f5a2b6e1",
        "name": "get_clair3_info",
        "description": "Provides info on Clair3 variant calling tool for long-read sequencing",
        "detailed_description": "Get comprehensive information about Clair3 \u2013 variant calling for long-read sequencing",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package-info",
            "clair3-variant-caller",
            "command-line-interface",
            "computational-genomics",
            "genomic-variant-analysis",
            "long-read-sequencing",
            "performance-metrics",
            "pipeline-integration",
            "sequencing-pipeline",
            "snv-indel-calling",
            "software-documentation",
            "variant-calling"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "clair3",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of Clair3",
            "Retrieve installation instructions",
            "Retrieve usage guidelines",
            "Retrieve documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Clair3"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Clair3"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a12bdc4e-3f6a-45dd-8cc1-e51b2e3f6a72",
        "name": "get_arboreto_info",
        "description": "Retrieve information about Arboreto, a gene regulatory network inference package.",
        "detailed_description": "Get comprehensive information about Arboreto \u2013 gene regulatory network inference",
        "toolType": "Scientific Software Package",
        "tags": [
            "arboreto-package",
            "computational-biology",
            "gene-regulatory-network",
            "graph-inference",
            "grn-inference",
            "network-inference",
            "network-reconstruction",
            "omics-data-analysis",
            "package-documentation",
            "package-metadata",
            "python-bioinformatics",
            "transcription-factor-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "arboreto",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "overview",
            "installation",
            "usage",
            "documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Arboreto"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Arboreto"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fb3e1c5a-2d9b-4c07-9c22-f64ff367ccc1",
        "name": "get_cyvcf2_info",
        "description": "Provides detailed information about the cyvcf2 package for fast VCF/BCF file processing",
        "detailed_description": "Get comprehensive information about cyvcf2 \u2013 fast VCF/BCF file processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "bcf-processing",
            "bioinformatics-tool",
            "command-line-integration",
            "cyvcf2-library",
            "file-format-parsing",
            "genome-data-processing",
            "genomic-variants",
            "high-performance-vcf",
            "ngs-data-analysis",
            "python-genomics",
            "variant-data-parsing",
            "vcf-processing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cyvcf2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Read VCF/BCF files",
            "Write VCF/BCF files",
            "Efficiently iterate through variants",
            "Access variant fields (CHROM, POS, REF, ALT, QUAL, genotypes, INFO)",
            "Filter variants by quality"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_gseapy_info",
        "description": "Retrieve information and usage for GSEApy, a Python GSEA toolkit.",
        "detailed_description": "Get comprehensive information about GSEApy \u2013 Gene Set Enrichment Analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-reference",
            "computational-biology",
            "functional-enrichment-analysis",
            "gene-set-enrichment-analysis",
            "genomics-workflow",
            "gsea-python-tool",
            "gseapy-documentation",
            "package-metadata-extraction",
            "package-overview",
            "pip-package-overview",
            "python-package-info",
            "quick-start-guide",
            "tool-discovery-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "gseapy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch GSEApy package metadata",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_jcvi_info",
        "description": "Get comprehensive information about JCVI \u2013 genome assembly and comparative genomics",
        "detailed_description": "Get comprehensive information about JCVI \u2013 genome assembly and comparative genomics",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "comparative-genomics-data",
            "evolutionary-biology",
            "genome-assembly-info",
            "genome-assembly-pipelines",
            "genome-research",
            "genomic-data-retrieval",
            "genomic-database-access",
            "jcvi-genomic-resources",
            "jcvi-info",
            "microbial-genomics",
            "sequence-comparison"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "jcvi",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of JCVI",
            "Provide installation instructions for JCVI",
            "Describe usage of JCVI",
            "Link to JCVI documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about JCVI"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about JCVI"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f8dbf66f-8c44-4c0a-a824-3c18f876e760",
        "name": "mcp_auto_loader_boltz",
        "description": "Performs Boltz2 docking and affinity prediction via MCP protocol",
        "detailed_description": "Run Boltz2 docking and affinity prediction using MCP protocol",
        "toolType": "MCP",
        "tags": [
            "affinity-estimation",
            "binding-affinity-prediction",
            "binding-energy-calculation",
            "boltz2-docking",
            "computational-chemistry",
            "docking-score",
            "lead-optimization",
            "mcp-protocol",
            "molecular-docking",
            "protein-ligand-docking",
            "structural-bioinformatics",
            "virtual-screening"
        ],
        "category": "MCPAutoLoaderTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Boltz2 docking",
            "Affinity prediction via MCP protocol"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {},
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6f1a828-4d7a-4f13-884d-8272bcfdec2a",
        "name": "mesh_get_subjects_by_pharmacological_action",
        "description": "Search MeSH subjects by pharmacological actions.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching pharmacological actions.",
        "toolType": "Database",
        "tags": [
            "controlled-vocabulary-filter",
            "drug-action-indexing",
            "drug-discovery-support",
            "exact-match-filter",
            "literature-annotation",
            "medical-subject-heading",
            "mesh-ontology-query",
            "mesh-subject-retrieval",
            "mesh-term-query",
            "ontology-driven-search",
            "pharmacological-action-search",
            "pharmacology-informatics",
            "xml-api-access"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by pharmacological action",
            "Support case-sensitive searches",
            "Support exact match searches",
            "Limit number of results returned",
            "Return structured subject metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Pharmacological action to search for in MeSH subjects"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the pharmacological action query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the pharmacological action query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Pharmacological action to search for in MeSH subjects",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the pharmacological action query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the pharmacological action query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Analgesic",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "mesh_get_subjects_by_subject_scope_or_definition",
        "description": "Search MeSH subjects by scope definitions.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching scopes (definitions).",
        "toolType": "Database",
        "tags": [
            "bibliographic-curation",
            "case-sensitive-query",
            "controlled-vocabulary-search",
            "definition-search",
            "exact-match-filter",
            "heading-search",
            "medical-subject-headings",
            "mesh-subject-search",
            "ontology-indexing",
            "scope-note-query",
            "text-mining",
            "xml-processing"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by scope definitions",
            "Case-sensitive search",
            "Exact match search",
            "Limit number of results",
            "Map XML fields to structured output"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in the scope notes of MeSH subjects"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in the scope notes of MeSH subjects",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3e4b2b2-f8c1-4a9a-8f4c-b8f8b9e27414",
        "name": "mesh_get_subjects_by_subject_name",
        "description": "Search MeSH subjects by name with options for case-sensitive and exact matching, returning detailed metadata.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching names.",
        "toolType": "Database",
        "tags": [
            "biomedical-ontology",
            "case-sensitive-search",
            "concept-synonym-search",
            "controlled-vocabulary-query",
            "exact-match-filter",
            "literature-indexing",
            "medical-subject-heading",
            "mesh-subject-search",
            "mesh-term-lookup",
            "subject-name-search",
            "taxonomy-navigation",
            "xml-api-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by name",
            "Support case-sensitive and exact match queries",
            "Limit the number of returned results",
            "Extract subject metadata using XML XPath mappings",
            "Return structured fields like ID, hierarchy, scope, and synonyms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in the name of each MeSH subject and the names of the subject's key concepts and concept synonyms."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in the name of each MeSH subject and the names of the subject's key concepts and concept synonyms.",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 50
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8b7b4902-9d04-4fcc-9ed9-1afb674b859f",
        "name": "mesh_get_subjects_by_subject_id",
        "description": "Retrieve MeSH subjects by their Descriptor UI identifier.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with a matching subject ID (also called Descriptor UI).",
        "toolType": "Database",
        "tags": [
            "bioinformatics-ontology",
            "case-sensitive-filter",
            "controlled-vocabulary-query",
            "descriptor-ui-lookup",
            "exact-match-filter",
            "healthcare-taxonomy",
            "medical-subject-headings",
            "mesh-subject-search",
            "ontology-lookup",
            "semantic-indexing",
            "subject-id-search",
            "xml-based-tool"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH descriptors by subject ID",
            "Supports case-sensitive and exact matching",
            "Limits number of results",
            "Extracts structured subject metadata (names, synonyms, hierarchy, dates, related subjects)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query ID to search for among the MeSH subject IDs"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query ID to search for among the MeSH subject IDs",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "D012345",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 50
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8c9e7d9f-f630-4bcb-a3d1-9a688bfdf376",
        "name": "drugbank_get_drug_basic_info_by_drug_name_or_drugbank_id",
        "description": "Retrieve basic drug information such as name, description, CAS number, and approval status by drug name or DrugBank ID.",
        "detailed_description": "Get basic drug information including name, description, CAS number, and approval status by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "approval-status-query",
            "cas-number-extraction",
            "case-sensitive-search",
            "computational-pharmacology",
            "drug-description-fetch",
            "drug-discovery-assistance",
            "drug-identifier-search",
            "drug-information-retrieval",
            "drug-metadata-retrieval",
            "drugbank-api-query",
            "exact-match-search",
            "pharmaceutical-data-access",
            "pharmacoinformatics",
            "xml-data-processing"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search basic drug information by name or DrugBank ID",
            "Option for case-sensitive search",
            "Option for exact match search",
            "Limit number of returned results",
            "Retrieve drug name, description, CAS number, UNII, state, drug type, approval groups, synonyms, secondary IDs, and entry dates"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or DrugBank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match with the queried name or ID"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or DrugBank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match with the queried name or ID",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f1c7b9-5aef-4c2b-9bea-6f9a2ab87e13",
        "name": "drugbank_get_indications_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug indications and therapeutic uses from DrugBank by drug name or ID.",
        "detailed_description": "Get drug indications and therapeutic uses by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-search",
            "clinical-research-tool",
            "drug-discovery-support",
            "drug-indication-retrieval",
            "drug-name-query",
            "drug-repurposing-insights",
            "drugbank-api-integration",
            "drugbank-id-query",
            "exact-match-filter",
            "pharmacology-data",
            "therapeutic-use-search",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank XML dataset",
            "Retrieve drug indications and therapeutic uses",
            "Filter by case sensitivity and exact match",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7a1c5ef-56e6-4bd2-8d2b-4d4e4d4dc846",
        "name": "drugbank_get_drug_name_and_description_by_indication",
        "description": "Retrieves drug names, DrugBank IDs, and descriptions based on their indications.",
        "detailed_description": "Get drug name, Drugbank ID, and description by its indication.",
        "toolType": "Database",
        "tags": [
            "biomedical-data-mining",
            "case-sensitive-search",
            "clinical-indication-search",
            "drug-description-fetch",
            "drug-indexing",
            "drug-information-retrieval",
            "drugbank-id-fetch",
            "drugbank-query",
            "exact-match-search",
            "indication-based-search",
            "pharmaceutical-database",
            "pharmacology-bioinformatics",
            "therapeutic-indication-lookup",
            "xml-data-access"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug entries by indication",
            "Return drug name, DrugBank ID, and description",
            "Support case-sensitive and exact match searches",
            "Limit number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug indication to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug indication to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "hypertension",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "af3c4b62-9d72-4f05-b6f0-3be1c6c62849",
        "name": "drugbank_get_pharmacology_by_drug_name_or_drugbank_id",
        "description": "Retrieve pharmacodynamics, mechanism of action, and pharmacokinetics of drugs by name or DrugBank ID.",
        "detailed_description": "Get drug pharmacodynamics, mechanism of action, and pharmacokinetics by drug name or Drugbank ID.",
        "toolType": "Database",
        "tags": [
            "biomedical-informatics",
            "case-sensitive-search",
            "drug-discovery-assist",
            "drug-name-search",
            "drug-pharmacodynamics",
            "drug-pharmacokinetics",
            "drugbank-id-lookup",
            "drugbank-query",
            "exact-match-filter",
            "mechanism-of-action",
            "mode-of-action",
            "pharmaceutical-data",
            "pharmacological-profile",
            "xml-api-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug information by name or DrugBank ID",
            "Retrieve pharmacodynamics information",
            "Retrieve mechanism of action details",
            "Retrieve pharmacokinetics data (absorption, metabolism, half-life, protein binding, route of elimination, volume of distribution, clearance)",
            "Support case-sensitive and exact match searches",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2f3b4c5-6e7f-4829-9abc-de0f12345678",
        "name": "drugbank_get_drug_name_description_pharmacology_by_mechanism_of_action",
        "description": "Get drug details (name, ID, description, pharmacodynamics, mechanism of action, pharmacokinetics) by mechanism of action.",
        "detailed_description": "Get drug name, ID, description, pharmacodynamics, mechanism of action, and pharmacokinetics by drug mechanism of action.",
        "toolType": "Database",
        "tags": [
            "biotech-data-mining",
            "drug-discovery-tool",
            "drug-identifier-retrieval",
            "drug-name-description",
            "drugbank-integration",
            "mechanism-of-action-search",
            "molecular-target-filter",
            "pharmacodynamics-query",
            "pharmacokinetics-data",
            "pharmacology-research",
            "therapeutic-mechanism",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by mechanism of action in DrugBank XML",
            "Retrieve drug name, ID, description, pharmacodynamics, mechanism of action, and pharmacokinetics",
            "Supports case-sensitive and exact match queries",
            "Limits the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in mechanism of action descriptions"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in mechanism of action descriptions",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "kinase inhibitor",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f8c2d77-6e54-4d2b-9f8c-3eeb1a4b5c6d",
        "name": "drugbank_get_drug_interactions_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug interactions and contraindications by drug name or DrugBank ID.",
        "detailed_description": "Get drug interactions and contraindications by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "cheminformatics",
            "clinical-decision-support",
            "contraindication-search",
            "drug-interaction-database",
            "drug-interaction-retrieval",
            "drugbank-id-lookup",
            "interaction-checker",
            "medication-safety",
            "name-based-drug-query",
            "pharmacology",
            "pharmacovigilance",
            "xml-api-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drug interactions using drug name or DrugBank ID",
            "Optionally perform case-sensitive searches",
            "Optionally require exact matches",
            "Limit number of results returned",
            "Retrieve interacting drugs details",
            "Retrieve food interactions"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name to search for interactions"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name to search for interactions",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9f1aed2-7890-4a2b-bc3d-0123456789ab",
        "name": "drugbank_get_targets_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug targets, enzymes, carriers, and transporters by drug name or DrugBank ID.",
        "detailed_description": "Get drug targets, enzymes, carriers, and transporters by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "bioinformatics-api",
            "carrier-protein-analysis",
            "case-sensitive-search",
            "drug-discovery-support",
            "drug-target-retrieval",
            "drugbank-query-api",
            "enzyme-target-identification",
            "exact-match-query",
            "molecular-target-mapping",
            "pharmacogenomics-research",
            "transporter-protein-mapping",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug targets by name or DrugBank ID",
            "Retrieve related enzymes",
            "Retrieve related carriers",
            "Retrieve related transporters",
            "Case-sensitive search option",
            "Exact match search option",
            "Limit result count"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b3e45a2-94d1-4c28-b1a7-3f2d5e6a7b8c",
        "name": "drugbank_get_drug_name_and_description_by_target_name",
        "description": "Retrieves drug names and descriptions for a given protein target.",
        "detailed_description": "Get associated drug names and descriptions for a particular target, enzyme, carrier, or transporter protein.",
        "toolType": "Database",
        "tags": [
            "bioinformatics-search",
            "computational-pharmacology",
            "drug-description-retrieval",
            "drug-name-fetch",
            "drug-target-annotation",
            "drugbank-api",
            "enzyme-inhibitor-discovery",
            "pharmacological-database",
            "protein-target-query",
            "target-based-screening",
            "transporter-drug-association",
            "xml-data-access"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank by protein target, enzyme, carrier, or transporter name",
            "Perform case-sensitive or case-insensitive searches",
            "Filter for exact matches",
            "Limit number of results returned",
            "Retrieve drug names, IDs, descriptions, and associated protein names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Target, enzyme, carrier, or transporter name to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Target, enzyme, carrier, or transporter name to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "EGFR",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "drugbank_get_drug_products_by_name_or_drugbank_id",
        "description": "Retrieve commercial drug products, dosage forms, and pricing details from DrugBank by drug name or DrugBank ID.",
        "detailed_description": "Get commercial drug products, dosage forms, and pricing informatiomon by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "api-integration",
            "case-sensitive-search",
            "commercial-drug-database",
            "dosage-form-info",
            "drug-identifier-search",
            "drug-pricing-data",
            "drug-product-retrieval",
            "drugbank-lookup",
            "exact-match-search",
            "pharmaceutical-catalogue",
            "pharmacology-informatics",
            "xml-data-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drugs by name or DrugBank ID",
            "Retrieve commercial drug products and formulations",
            "Fetch pricing information including cost, currency, and unit",
            "Supports case-sensitive and exact-match searches",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "6f1e2d7a-8b39-4c5d-ae72-1f3b4c5d6e7f",
        "name": "drugbank_get_safety_by_drug_name_or_drugbank_id",
        "description": "Fetch drug safety and toxicity information by name or DrugBank ID.",
        "detailed_description": "Get drug toxicity, contraindications, and safety information by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "adverse-effect-reporting",
            "biomedical-data-retrieval",
            "case-sensitive-search",
            "contraindications-data",
            "drug-identification",
            "drug-safety",
            "drug-toxicity",
            "drugbank-query",
            "exact-match-search",
            "id-based-search",
            "medical-informatics",
            "pharmacovigilance",
            "safety-profile",
            "xml-api"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug safety information by drug name or DrugBank ID",
            "Perform case-sensitive or exact match searches",
            "Limit number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4f8c8aa-6e5e-4a4f-9b2c-17e3ddf9c123",
        "name": "drugbank_get_drug_chemistry_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug chemical properties such as molecular formula, weight, and identifiers by name or DrugBank ID.",
        "detailed_description": "Get drug chemical properties including molecular formula, weight, and structure by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "bioinformatics",
            "chemical-data-retrieval",
            "chemical-structure",
            "cheminformatics",
            "drug-chemistry",
            "drug-discovery",
            "drug-properties",
            "drugbank-query",
            "molecular-formula",
            "molecular-weight",
            "pharmaceutical-research",
            "small-molecule-characterization"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank XML for drugs by name or DrugBank ID",
            "Support case-sensitive and exact matching searches",
            "Limit the number of results returned",
            "Extract molecular formula and molecular weight",
            "Retrieve CAS number and UNII identifiers",
            "Provide chemical properties: melting point, water solubility, isoelectric point",
            "Fetch classification hierarchy: kingdom, superclass, class, subclass",
            "Return synonyms and sequence information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5f1fd57-7ccf-4f62-8f5a-9b7c4e899f3c",
        "name": "drugbank_get_drug_references_by_drug_name_or_drugbank_id",
        "description": "Retrieve literature references, patents, and external links by drug name or DrugBank ID.",
        "detailed_description": "Get drug literature references, patents, and external links by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "biomedical-references",
            "case-sensitive-search",
            "cheminformatics",
            "drug-literature-retrieval",
            "drug-name-search",
            "drugbank-api-query",
            "drugbank-id-search",
            "exact-match-search",
            "external-links-aggregation",
            "literature-mining",
            "patent-information-extraction",
            "patent-search",
            "pharmaceutical-research",
            "xml-data-parsing"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug records by name or DrugBank ID with optional case-sensitive or exact matching",
            "Retrieve literature references (articles) for drugs",
            "Retrieve patent details associated with drugs",
            "Retrieve external identifiers and links",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for references"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for references",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c9d9c1e3-e5e7-4d4a-9d36-123456789abc",
        "name": "FDA_get_drug_names_by_dear_health_care_provider_letter_info",
        "description": "Fetches drug names using information from Dear Health Care Provider letters.",
        "detailed_description": "Fetch drug names based on information about dear health care provider letters. The letters are sent by drug manufacturers to provide new or updated information about the drug.",
        "toolType": "API",
        "tags": [
            "dear-health-care-provider-letter-retrieval",
            "dhpc-database-access",
            "drug-name-extraction",
            "drug-safety-communication",
            "fda-drug-label-api",
            "fda-regulatory-communication",
            "indication-based-filtering",
            "label-update-query",
            "pharmacovigilance-text-mining",
            "regulatory-compliance-data",
            "safety-letter-analysis",
            "structured-data-fetch"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch drug names using Dear Health Care Provider letter information",
            "Supports filtering by drug indication",
            "Provides pagination using limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "letter_info": {
                "type": "string",
                "description": "Information about the specific dear health care provider letters."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "letter_info": {
                    "type": "string",
                    "description": "Information about the specific dear health care provider letters.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "letter_info": "New safety information about drug interactions",
            "indication": "diabetes",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "ff13ad72-5e4b-4e0a-9f3d-2b7c8d9e0f12",
        "name": "FDA_get_drug_names_by_health_claim",
        "description": "Retrieve drug names based on specific health claims.",
        "detailed_description": "Retrieve drug names based on specific health claims.",
        "toolType": "API",
        "tags": [
            "api-based-data-retrieval",
            "drug-name-retrieval",
            "drug-nomenclature",
            "fda-drug-label",
            "fda-drug-names",
            "health-claim-extraction",
            "health-claim-search",
            "indication-filtering",
            "medical-indication-query",
            "pagination-support",
            "pharmaceutical-regulation",
            "regulatory-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on health claims",
            "Filter results by drug indication",
            "Paginate results using limit and skip",
            "Return drug brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "health_claim": {
                "type": "string",
                "description": "The health claim associated with the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "health_claim": {
                    "type": "string",
                    "description": "The health claim associated with the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "health_claim": "heart disease prevention",
            "indication": "cardiovascular",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_health_claims_by_drug_name",
        "description": "Get health claims for a given drug name.",
        "detailed_description": "Retrieve health claims associated with a specific drug name.",
        "toolType": "API",
        "tags": [
            "drug-claims-retrieval",
            "drug-efficacy-research",
            "drug-labeling",
            "drug-name-search",
            "drug-safety-analysis",
            "fda-health-claims",
            "fda-label-query",
            "health-claims-extraction",
            "limit-skip-pagination",
            "patient-information",
            "pharmacology-data-access",
            "pharmacovigilance-research",
            "regulatory-science"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search health claims by drug name using openFDA fields",
            "Return health_claim information",
            "Supports pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "FDA_get_drug_name_by_document_id",
        "description": "Get drug brand and generic names using a document ID.",
        "detailed_description": "Retrieve the drug name based on the document ID.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "document-id-search",
            "drug-label-access",
            "drug-name-retrieval",
            "fda-drug-info",
            "fda-label-query",
            "guid-based-lookup",
            "id-based-query",
            "label-document-management",
            "labeling-document-lookup",
            "pharmacovigilance-support",
            "product-name-fetch",
            "regulatory-label-fetch",
            "uuid-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug name by document ID",
            "Paginate results with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "document_id": {
                "type": "string",
                "description": "The document ID, a globally unique identifier (GUID) for the particular revision of a labeling document."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "document_id": {
                    "type": "string",
                    "description": "The document ID, a globally unique identifier (GUID) for the particular revision of a labeling document.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "document_id": "abcd1234-ef56-7890-gh12-ijklmnopqrst",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2d7fbb4-3c8a-4c2f-9f1d-2b83e2a6f77e",
        "name": "FDA_get_document_id_by_drug_name",
        "description": "Retrieve the document ID for a specified drug name.",
        "detailed_description": "Retrieve the document ID based on the drug name.",
        "toolType": "API",
        "tags": [
            "document-id-extraction",
            "drug-document-retrieval",
            "drug-information-access",
            "drug-name-lookup",
            "fda-api-integration",
            "fda-label-search",
            "health-data-retrieval",
            "integer-pagination",
            "medication-label-search",
            "paginated-results",
            "pharmacovigilance-support",
            "regulatory-compliance-tool",
            "regulatory-label-data",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search FDA drug label records using brand or generic name",
            "Retrieve document IDs",
            "Support limiting and skipping results for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug.",
                "required": true
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e9b1c72f-31b2-4d0b-817f-f6e2f6c19c3a",
        "name": "FDA_get_drug_name_by_inactive_ingredient",
        "description": "Get drug names based on inactive ingredient.",
        "detailed_description": "Retrieve the drug name based on the inactive ingredient information.",
        "toolType": "API",
        "tags": [
            "drug-formulation-discovery",
            "drug-name-retrieval",
            "excipient-based-search",
            "fda-drug-label",
            "fdadruglabel-database",
            "inactive-ingredient-lookup",
            "ingredient-to-drug-mapping",
            "integer-parameter-input",
            "pagination-support",
            "pharmaceutical-data-query",
            "pharmacovigilance-data",
            "regulatory-compliance",
            "regulatory-label-search",
            "string-parameter-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by inactive ingredient",
            "Paginate results with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "inactive_ingredient": {
                "type": "string",
                "description": "The name of the inactive ingredient."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "inactive_ingredient": {
                    "type": "string",
                    "description": "The name of the inactive ingredient.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "inactive_ingredient": "lactose",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3ffd8b9-836e-4ad1-9703-8a5648d3771f",
        "name": "FDA_get_inactive_ingredient_info_by_drug_name",
        "description": "Fetch inactive ingredients for a given drug name.",
        "detailed_description": "Fetch a list of inactive ingredients in a specific drug product based on the drug name.",
        "toolType": "API",
        "tags": [
            "allergen-screening",
            "dosage-form-information",
            "drug-formulation",
            "drug-ingredient-lookup",
            "drug-name-query",
            "drug-safety-data",
            "excipients-database",
            "fda-drug-label-data",
            "fda-regulatory-information",
            "formulation-components",
            "inactive-excipient-list",
            "inactive-ingredients",
            "pharmaceutical-excipients",
            "pharmacology-reference"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search inactive ingredients by drug brand or generic name",
            "Return inactive ingredient information",
            "Support record limiting and skipping for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f331a5d-fd93-4d6f-93e1-1e2aafe2325f",
        "name": "FDA_get_drug_names_by_indication",
        "description": "Get drug names based on a specific indication.",
        "detailed_description": "Retrieve a list of drug names based on a specific indication or usage.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "clinical-indication-lookup",
            "drug-database-search",
            "drug-name-retrieval",
            "fda-drug-label",
            "indication-based-search",
            "json-response-format",
            "medication-listing",
            "pagination-control",
            "pharmacological-query",
            "prescription-drugs",
            "therapeutic-indication"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drugs by indication",
            "Support pagination with limit and skip",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "indication": "Diabetes mellitus",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9a8b0c2-7e1d-4cf2-b832-0fbf8e4a6b14",
        "name": "FDA_get_indications_by_drug_name",
        "description": "Retrieve indications and usage details for a specified drug.",
        "detailed_description": "Retrieve indications and usage information based on a specific drug name.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "clinical-pharmacology",
            "drug-indication-search",
            "drug-name-query",
            "drug-usage-retrieval",
            "fda-drug-indications",
            "fda-label-database",
            "healthcare-data-api",
            "indications-and-usage",
            "medication-information",
            "pharmaceutical-data",
            "regulatory-labeling",
            "structured-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug indications and usage information by drug name",
            "Search across brand and generic names",
            "Control number of records returned with limit parameter",
            "Paginate results using skip parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_information_for_owners_or_caregivers",
        "description": "Retrieve drug names based on information relevant to owners or caregivers.",
        "detailed_description": "Retrieve drug names based on information for owners or caregivers.",
        "toolType": "API",
        "tags": [
            "caregiver-information-query",
            "caregiver-support",
            "clinical-informatics",
            "drug-name-retrieval",
            "fda-drug-label-data",
            "fda-drug-lookup",
            "indication-based-search",
            "json-api-integration",
            "medication-directory",
            "owner-guidance-medications",
            "pagination-support",
            "structured-data-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by owners or caregivers information",
            "Filter results by medical indication",
            "Paginate results using limit and skip parameters",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "field_info": {
                "type": "string",
                "description": "The specific information related to owners or caregivers to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "field_info": {
                    "type": "string",
                    "description": "The specific information related to owners or caregivers to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "field_info": "dosage instructions for caregivers",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7d9b0c2a-3c5b-4f7d-9fb1-8e5a2c6d7f4e",
        "name": "FDA_get_information_for_owners_or_caregivers_by_drug_name",
        "description": "Retrieve information for owners or caregivers by drug name.",
        "detailed_description": "Retrieve specific information for owners or caregivers based on the drug name.",
        "toolType": "API",
        "tags": [
            "caregiver-guidance",
            "drug-label-retrieval",
            "drug-name-search",
            "drug-safety-information",
            "fda-drug-label",
            "fdalabel-api",
            "json-response",
            "medication-information",
            "owner-education",
            "pagination-support",
            "patient-education",
            "pharmacology-reference",
            "regulatory-information",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information for owners or caregivers based on drug name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Amoxicillin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_info_for_patients_by_drug_name",
        "description": "Fetch patient information given a drug name.",
        "detailed_description": "Fetch information for patients based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-info",
            "dosage-guidelines",
            "drug-label-retrieval",
            "drug-name-search",
            "fda-drug-label",
            "healthcare-api",
            "medication-information",
            "pagination-parameters",
            "patient-education",
            "pharmacovigilance-data",
            "regulatory-compliance",
            "rx-label-lookup"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search FDA drug labels using drug_name across brand and generic names",
            "Return information_for_patients field",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_instructions_for_use",
        "description": "Retrieve drug names based on usage instructions.",
        "detailed_description": "Retrieve drug names based on specific instructions for use.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-label-mining",
            "drug-name-retrieval",
            "fda-drug-label",
            "healthcare-it",
            "indication-based-filter",
            "instructions-for-use-search",
            "pagination-support",
            "pharmaceutical-informatics",
            "regulatory-data-access",
            "restful-api-query",
            "safe-handling-guidelines"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on instructions for use",
            "Support filtering by drug indication",
            "Paginate results with limit and skip",
            "Return brand and generic names of drugs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "instructions_for_use": {
                "type": "string",
                "description": "Information about safe handling and use of the drug product."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "instructions_for_use": {
                    "type": "string",
                    "description": "Information about safe handling and use of the drug product.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "instructions_for_use": "Take with food and water",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9f3a71-974c-4a44-a521-23fda4c4d783",
        "name": "FDA_get_instructions_for_use_by_drug_name",
        "description": "Retrieve instructions for use based on a drug's name.",
        "detailed_description": "Retrieve instructions for use information based on the drug name.",
        "toolType": "API",
        "tags": [
            "dosage-guidelines",
            "drug-instructions-for-use",
            "drug-label-retrieval",
            "drug-name-search",
            "fda-drug-label",
            "fda-label-api",
            "medication-directions",
            "pharmaceutical-labeling",
            "pharmacovigilance",
            "prescription-information",
            "regulatory-compliance",
            "structured-label-data"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve instructions for use information by drug name",
            "Supports pagination with 'limit' and 'skip'",
            "Searches across brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2d9f3a4-7b30-4d54-a2f4-8d9d9e3c4461",
        "name": "FDA_retrieve_drug_name_by_device_use",
        "description": "Retrieve drug name based on a device's intended use.",
        "detailed_description": "Retrieve the drug name based on the intended use of the device.",
        "toolType": "API",
        "tags": [
            "device-intended-use-query",
            "drug-device-association",
            "drug-label-extraction",
            "fda-drug-name-retrieval",
            "fda-label-database",
            "healthcare-informatics",
            "intended-use-based-search",
            "limit-skip-pagination",
            "medical-device-regulation",
            "pharmaceutical-informatics",
            "regulatory-pharmacology",
            "structured-data-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by device intended use",
            "Return drug brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "intended_use_of_the_device": {
                "type": "string",
                "description": "The intended use of the device."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "intended_use_of_the_device": {
                    "type": "string",
                    "description": "The intended use of the device.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "intended_use_of_the_device": "monitoring blood glucose levels",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
        "name": "FDA_retrieve_device_use_by_drug_name",
        "description": "Retrieve a device's intended use by drug name.",
        "detailed_description": "Retrieve the intended use of the device based on the drug name.",
        "toolType": "API",
        "tags": [
            "device-intended-use",
            "device-use-retrieval",
            "drug-device-mapping",
            "drug-name-lookup",
            "fda-device-use",
            "fda-label-data",
            "healthcare-informatics",
            "intended-use-extraction",
            "medical-device-application",
            "pagination-parameters",
            "pharmacovigilance",
            "regulatory-affairs"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve the intended use of a device by drug name",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b7f8c5e3-d2a4-4ef7-b6c1-9aef5d7e2b31",
        "name": "FDA_get_drug_names_by_child_safety_info",
        "description": "Retrieve drug names based on child safety instructions, with optional indication filtering and pagination.",
        "detailed_description": "Retrieve drug names based on whether the product should be kept out of the reach of children and instructions about what to do in the case of accidental contact or ingestion.",
        "toolType": "API",
        "tags": [
            "accidental-ingestion-guidance",
            "child-safety-info",
            "drug-name-lookup",
            "fda-label-retrieval",
            "indication-based-filtering",
            "label-safety-warnings",
            "medication-storage-safety",
            "pediatric-medication-safety",
            "pharmaceutical-regulatory-data",
            "pharmacovigilance-query",
            "poison-control-guidelines",
            "textual-data-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search products by child safety information",
            "Filter by drug indication",
            "Support pagination with limit and skip",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "child_safety_info": {
                "type": "string",
                "description": "Information pertaining to whether the product should be kept out of the reach of children."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "child_safety_info": {
                    "type": "string",
                    "description": "Information pertaining to whether the product should be kept out of the reach of children.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "child_safety_info": "keep_out_of_reach_of_children",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f94c2d4-9e7b-4a31-b89f-5c07f3c0a4e2",
        "name": "get_hyperopt_info",
        "description": "Retrieve detailed information about Hyperopt, a distributed hyperparameter optimization library.",
        "detailed_description": "Get comprehensive information about Hyperopt \u2014 distributed hyperparameter optimization",
        "toolType": "Scientific Software Package",
        "tags": [
            "ai-parameter-search",
            "bayesian-optimization",
            "distributed-optimization",
            "hyperopt",
            "hyperparameter-optimization",
            "machine-learning",
            "ml-experimentation",
            "model-optimization",
            "parallel-optimization",
            "parameter-tuning",
            "performance-tuning",
            "random-search",
            "scalable-computing",
            "tree-parzen-estimator"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Hyperopt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Hyperopt package information",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f52c5f4-7132-4d37-a83f-2b6e8a600d2a",
        "name": "get_jcvi_info",
        "description": "Retrieve comprehensive JCVI genome assembly and comparative genomics information",
        "detailed_description": "Get comprehensive information about JCVI \u2013 genome assembly and comparative genomics",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-resource",
            "comparative-genomics",
            "computational-genomics",
            "genome-annotation",
            "genome-assembly",
            "genome-data-mining",
            "genomic-database",
            "genomics-knowledge-base",
            "jcvi-data-retrieval",
            "jcvi-information",
            "microbial-genomics",
            "sequence-comparison"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "JCVI",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about JCVI",
            "Retrieve installation instructions for JCVI",
            "Retrieve usage examples for JCVI",
            "Retrieve documentation link for JCVI"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about JCVI"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about JCVI"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "aedf1234-56b7-4c89-9a12-d3ef456789ab",
        "name": "get_openbabel_info",
        "description": "Fetch metadata and usage guidance for the OpenBabel package",
        "detailed_description": "Get comprehensive information about OpenBabel \u2013 chemical format conversion and analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "3d-molecule-generation",
            "chemical-format-conversion",
            "cheminformatics",
            "compound-database-preparation",
            "computational-chemistry",
            "drug-discovery-workflow",
            "file-format-interconversion",
            "format-parsing",
            "inchi-generation",
            "molecular-file-translation",
            "molecular-modeling",
            "openbabel-integration",
            "sdf-to-mol2",
            "smiles-to-xyz",
            "structure-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Open Babel",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve OpenBabel package metadata",
            "Provide usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2f7439e2-5d82-4d9a-b3e1-23f5c5a8c487",
        "name": "get_torch_geometric_info",
        "description": "Provides detailed information on PyTorch Geometric, a high-performance graph neural network library used in molecular and materials science.",
        "detailed_description": "Get comprehensive information about PyTorch Geometric \u2013 a high-performance library for graph neural networks widely used in molecular and materials science.",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-materials",
            "geometric-deep-learning",
            "gnn-library",
            "graph-convolutional-networks",
            "graph-data-structures",
            "graph-neural-networks",
            "library-overview",
            "materials-science-gnn",
            "molecular-graph-analysis",
            "package-metadata",
            "python-package-documentation",
            "pytorch-geometric-info",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PyTorch Geometric",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch package description and metadata",
            "Provide installation instructions",
            "Offer usage examples and a quick-start guide",
            "List keywords and documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "get_cooler_info",
        "description": "Retrieve comprehensive information about the Cooler sparse Hi-C contact matrix storage package",
        "detailed_description": "Get comprehensive information about Cooler \u2013 sparse Hi-C contact matrix storage",
        "toolType": "Scientific Software Package",
        "tags": [
            "3d-genome-mapping",
            "bioinformatics-pipeline",
            "chromatin-conformation",
            "contact-map-extraction",
            "cooler-file-format",
            "file-format-inspection",
            "genomic-interactions",
            "hic-contact-matrix",
            "python-genomics-package",
            "quick-start-guide",
            "sparse-hic-storage",
            "sparse-matrix-compression",
            "usage-example-inclusion"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cooler",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide information about the Cooler package",
            "Include usage examples",
            "Include quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "550e8400-e29b-41d4-a716-446655440000",
        "name": "get_hmmlearn_info",
        "description": "Retrieve key information about the hmmlearn Python package for Hidden Markov Models.",
        "detailed_description": "Get comprehensive information about hmmlearn \u2013 Hidden Markov Models in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "hidden-markov-model",
            "hmmlearn",
            "machine-learning-library",
            "package-metadata",
            "parameter-reference",
            "probabilistic-modeling",
            "python-ml-tool",
            "python-package-documentation",
            "sequence-analysis",
            "statistical-models",
            "time-series-modeling",
            "usage-guide"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "hmmlearn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of the hmmlearn package",
            "Provide installation instructions for hmmlearn",
            "Provide usage examples for hmmlearn",
            "Describe available HMM models in hmmlearn",
            "Provide documentation link for hmmlearn"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about hmmlearn"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "models",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about hmmlearn"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f7f2f91-9b45-4c0b-96a1-d7cfdc9c1234",
        "name": "get_pyscenic_info",
        "description": "Retrieve detailed information about pySCENIC, a single-cell regulatory network inference package",
        "detailed_description": "Get comprehensive information about pySCENIC \u2013 single-cell regulatory network inference",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-documentation",
            "computational-biology-tool",
            "gene-regulatory-network-inference",
            "network-inference-methods",
            "package-usage-guide",
            "pyscenic-documentation",
            "pyscenic-info",
            "python-bioinformatics-package",
            "regulatory-circuit-analysis",
            "scrna-seq-analysis",
            "single-cell-regulatory-network",
            "transcription-factor-activity-inference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PySCENIC",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of pySCENIC",
            "Provide installation instructions for pySCENIC",
            "Show usage examples of pySCENIC",
            "Link to pySCENIC documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about pySCENIC"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about pySCENIC"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4885c745-9ccd-4356-b2d2-b2cf6cb9f194",
        "name": "get_fanc_info",
        "description": "Retrieve information about FAN-C, a toolkit for analyzing nuclear contacts.",
        "detailed_description": "Get comprehensive information about FAN-C \u2013 framework for analyzing nuclear contacts",
        "toolType": "Scientific Software Package",
        "tags": [
            "3d-genome-organization",
            "bioinformatics-package",
            "chromatin-interaction-framework",
            "computational-genomics",
            "fanc-framework-info",
            "framework-overview",
            "genome-architecture-analysis",
            "metadata-extraction",
            "nuclear-contact-analysis",
            "package-documentation-retrieval",
            "package-inspection",
            "tool-parameter-description"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "fanc",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the FAN-C framework",
            "Provide installation instructions for FAN-C",
            "Describe usage examples and code snippets",
            "Link to official FAN-C documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FAN-C"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FAN-C"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f52bd5a-fc96-4c61-8d89-3f8f9d5c2aa1",
        "name": "get_arxiv_info",
        "description": "Get comprehensive information about arXiv, including access to its preprint repository and metadata retrieval.",
        "detailed_description": "Get comprehensive information about arxiv \u2013 access to arXiv preprint repository",
        "toolType": "Scientific Software Package",
        "tags": [
            "academic-preprints",
            "arxiv-metadata-extraction",
            "arxiv-preprint-retrieval",
            "bibliographic-data",
            "citation-information",
            "open-access-publications",
            "preprint-lookup",
            "preprint-repository-api",
            "research-paper-search",
            "scholarly-article-fetch",
            "scientific-publication-api",
            "subject-category-filtering"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Access arXiv API",
            "Retrieve paper metadata",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3a1c7e8-9a2d-4b3e-8c9f-0b1d2e3f4a5b",
        "name": "get_ruptures_info",
        "description": "Get comprehensive information about ruptures \u2013 change point detection library",
        "detailed_description": "Get comprehensive information about ruptures \u2013 change point detection library",
        "toolType": "Scientific Software Package",
        "tags": [
            "anomaly-detection",
            "api-documentation-retrieval",
            "breakpoint-detection",
            "change-point-analysis",
            "change-point-detection",
            "data-science",
            "machine-learning",
            "python-library-metadata",
            "python-package-inspection",
            "ruptures-documentation",
            "ruptures-info",
            "signal-processing",
            "statistical-analysis",
            "time-series-analysis",
            "time-series-segmentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ruptures",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of ruptures library",
            "Provide installation instructions for ruptures",
            "Explain usage examples of ruptures",
            "Link to documentation of ruptures"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about ruptures"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about ruptures"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_reportlab_info",
        "description": "Get comprehensive information about ReportLab \u2013 PDF generation library",
        "detailed_description": "Get comprehensive information about ReportLab \u2013 PDF generation library",
        "toolType": "Scientific Software Package",
        "tags": [
            "automated-reporting",
            "data-to-pdf-conversion",
            "document-generation-library",
            "dynamic-pdf-creation",
            "layout-engine",
            "pdf-library-overview",
            "python-library-reference",
            "python-pdf-generation",
            "quick-start-guide",
            "reportlab-documentation",
            "typesetting-library",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ReportLab",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package metadata (description, category, keywords)",
            "Provide documentation URL and repository link",
            "Provide installation instructions",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e7e2ab7-1b60-4c3f-8f5b-757b2e5f9a98",
        "name": "get_cobrapy_info",
        "description": "Retrieves detailed information about COBRApy for metabolic modeling.",
        "detailed_description": "Get comprehensive information about COBRApy \u2013 constraint-based metabolic modeling",
        "toolType": "Scientific Software Package",
        "tags": [
            "cobrapy-documentation",
            "cobrapy-info",
            "computational-biology",
            "constraint-based-modeling",
            "flux-balance-analysis",
            "metabolic-modeling",
            "metabolic-network-analysis",
            "metadata-retrieval",
            "package-metadata",
            "python-bioinformatics",
            "python-library-information",
            "research-software",
            "software-documentation",
            "systems-biology"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "COBRApy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of COBRApy",
            "Provide installation instructions for COBRApy",
            "Show usage examples for COBRApy",
            "Link to COBRApy documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about COBRApy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about COBRApy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f1f2d9-9f7b-4a23-88ae-7db17b3e6f91",
        "name": "get_pyscf_info",
        "description": "Retrieve detailed information about the PySCF quantum-chemistry framework.",
        "detailed_description": "Get comprehensive information about PySCF \t6 a versatile quantum-chemistry framework in Python.",
        "toolType": "Scientific Software Package",
        "tags": [
            "ab-initio-methods",
            "api-reference",
            "basis-set-details",
            "computational-chemistry",
            "density-functional-theory",
            "electronic-structure",
            "molecular-simulation",
            "package-overview",
            "pyscf-documentation",
            "python-library-info",
            "quantum-chemistry",
            "quick-start-guide",
            "usage-examples",
            "wavefunction-modules"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PySCF",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about the PySCF package",
            "Optionally include usage examples and a quick-start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6a24fa2-4b36-4f1b-adba-3c9f5074b3c1",
        "name": "get_statsmodels_info",
        "description": "Retrieve detailed information about the statsmodels library for statistical modeling and econometrics",
        "detailed_description": "Get comprehensive information about statsmodels \u2013 statistical modeling and econometrics",
        "toolType": "Scientific Software Package",
        "tags": [
            "econometrics-toolkit",
            "hypothesis-testing",
            "model-estimation",
            "package-metadata",
            "panel-data-analysis",
            "python-data-analysis",
            "python-package-overview",
            "quick-start-guide",
            "regression-analysis",
            "statistical-modeling-library",
            "statsmodels-documentation",
            "statsmodels-info",
            "time-series-analysis",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "statsmodels",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides package information including description, documentation, and repository links",
            "Offers installation instructions for pip and conda",
            "Includes usage examples and a quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_lifelines_info",
        "description": "Provides detailed information about the lifelines Python library for survival analysis.",
        "detailed_description": "Get comprehensive information about lifelines \u2013 survival analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "biomedical-research",
            "censored-data-analysis",
            "clinical-trial-analysis",
            "cox-proportional-hazards",
            "hazard-function",
            "kaplan-meier-estimator",
            "lifelines-package",
            "predictive-modeling",
            "python-lifelines",
            "reliability-analysis",
            "survival-analysis",
            "time-to-event-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "lifelines",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the lifelines survival analysis library",
            "Optionally include usage examples and quick start guide",
            "Provide installation instructions and documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7c6b8ba-1cde-4f32-9ea2-8f9f7b5c1234",
        "name": "get_h5py_info",
        "description": "Fetch comprehensive details about the h5py package, including metadata, installation, and usage.",
        "detailed_description": "Get comprehensive information about h5py \u2013 HDF5 for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "big-data-management",
            "code-snippets",
            "data-serialization",
            "developer-reference",
            "file-format-support",
            "h5py-information",
            "hdf5-integration",
            "hdf5-python",
            "library-introspection",
            "metadata-retrieval",
            "package-documentation",
            "python-i-o",
            "quick-start-guide",
            "scientific-computing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "h5py",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package description and metadata",
            "Provide installation instructions (pip and conda)",
            "Return usage examples and quick start guide when requested",
            "Provide documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f7d9c276-2d4b-4b8c-9fae-73b8e3d1a2c4",
        "name": "get_trackpy_info",
        "description": "Retrieve detailed information about trackpy, the Python particle tracking toolkit",
        "detailed_description": "Get comprehensive information about trackpy \u2013 particle tracking toolkit for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "computer-vision",
            "data-visualization",
            "feature-tracking",
            "image-analysis",
            "microscopy-tracking",
            "motion-analysis",
            "package-documentation",
            "particle-detection",
            "particle-tracking",
            "python-library",
            "research-tool",
            "scientific-computing",
            "time-lapse-analysis",
            "trackpy-package",
            "video-processing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "trackpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about trackpy",
            "Provide installation instructions",
            "Describe usage examples",
            "Supply documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about trackpy",
                "enum": [
                    "overview",
                    "installation",
                    "usage",
                    "documentation"
                ]
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about trackpy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e8f9c6a-1b2c-4d3e-9f0a-123456789abc",
        "name": "get_numba_info",
        "description": "Get comprehensive information about Numba \u2013 JIT compiler for Python",
        "detailed_description": "Get comprehensive information about Numba \u2013 JIT compiler for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "API-documentation",
            "code-acceleration",
            "compiler-features",
            "gpu-acceleration",
            "high-performance-python",
            "jit-compiler",
            "just-in-time-compilation",
            "numba-information",
            "package-reference",
            "performance-optimization",
            "python-jit",
            "usage-guidelines"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Numba",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of Numba",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Numba"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Numba"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "usage"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e1f8c0a-4b2d-4f8e-9a6c-1d2e3f4a5b6c",
        "name": "get_flask_info",
        "description": "Provides information on Flask, a lightweight WSGI web framework.",
        "detailed_description": "Get comprehensive information about Flask - a lightweight WSGI web application framework",
        "toolType": "Scientific Software Package",
        "tags": [
            "developer-reference",
            "flask-documentation",
            "flask-info",
            "flask-quickstart-guide",
            "flask-tutorial",
            "microframework-overview",
            "python-flask-framework",
            "python-package-info",
            "restful-API-framework",
            "usage-examples",
            "web-application-development",
            "wsgi-web-framework"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Flask",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata such as description, popularity, and keywords",
            "Provide installation instructions",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a1bcfa-1bdc-4e66-9c2d-a5fa5df9b34e",
        "name": "get_cryosparc_tools_info",
        "description": "Retrieve detailed information about the CryoSPARC-Tools package",
        "detailed_description": "Get comprehensive information about cryosparc-tools \u2013 interface to CryoSPARC cryo-EM processing",
        "toolType": "Scientific Software Package",
        "tags": [
            "3d-reconstruction",
            "computational-biology",
            "cryo-em-processing",
            "cryosparc-interface",
            "cryosparc-tools-info",
            "electron-microscopy",
            "image-processing",
            "package-metadata",
            "software-configuration",
            "structural-biology",
            "tool-documentation",
            "workflow-management"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cryoSPARC-tools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information",
            "Provide installation instructions",
            "Show usage examples",
            "Display documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about cryosparc-tools"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about cryosparc-tools"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b241101-e2bb-4255-8caf-4136c566a962",
        "name": "get_tskit_info",
        "description": "Get comprehensive information about tskit \u2013 a tree sequence toolkit for population genetics",
        "detailed_description": "Get comprehensive information about tskit \u2013 tree sequence toolkit for population genetics",
        "toolType": "Scientific Software Package",
        "tags": [
            "API-documentation",
            "computational-biology",
            "evolutionary-analysis",
            "genetic-data-analysis",
            "lineage-tracing",
            "metadata-extraction",
            "package-metadata",
            "population-genetics",
            "python-library",
            "software-overview",
            "tree-sequence-toolkit",
            "tskit-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "tskit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve tskit overview",
            "Provide installation instructions for tskit",
            "Show usage examples for tskit",
            "Link to tskit documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about tskit"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about tskit"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3d5e8f8-8c2f-4e6d-9a1c-7ebda834fa3b",
        "name": "get_fanc_info",
        "description": "Retrieve key information about the FAN-C toolkit for analyzing nuclear contacts.",
        "detailed_description": "Get comprehensive information about FAN-C \u2013 framework for analyzing nuclear contacts",
        "toolType": "Scientific Software Package",
        "tags": [
            "3d-genome-organization",
            "bioinformatics-package",
            "chromatin-interaction-mapping",
            "chromosome-topology-study",
            "computational-genomics",
            "data-query",
            "fanc-framework",
            "genomic-contact-retrieval",
            "info-retrieval",
            "json-output",
            "nuclear-contact-analysis",
            "structural-genomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "FANC",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about FAN-C",
            "Retrieve installation instructions for FAN-C",
            "Retrieve usage examples for FAN-C",
            "Retrieve documentation link for FAN-C"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FAN-C"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FAN-C"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_pybigwig_info",
        "description": "Provides information about pyBigWig, a Python interface for BigWig file access.",
        "detailed_description": "Get comprehensive information about pyBigWig \u2013 BigWig file access in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "bigwig-file-access",
            "bigwig-format-inspection",
            "bioinformatics",
            "computational-genomics",
            "data-access",
            "file-metadata-retrieval",
            "genome-browser-integration",
            "genomic-coverage-data",
            "ngs-data-processing",
            "pybigwig",
            "python-API-documentation",
            "python-package-inspection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyBigWig",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of pyBigWig",
            "Retrieve installation instructions",
            "Retrieve usage examples",
            "Retrieve documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about pyBigWig"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about pyBigWig"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_arxiv_info",
        "description": "Retrieve detailed information from the arXiv preprint repository.",
        "detailed_description": "Get comprehensive information about arxiv \u2013 access to arXiv preprint repository",
        "toolType": "Scientific Software Package",
        "tags": [
            "academic-papers",
            "arxiv-API",
            "arxiv-access",
            "bibliographic-data",
            "metadata-retrieval",
            "paper-metadata",
            "preprint-fetch",
            "preprint-repository",
            "publication-discovery",
            "research-literature",
            "scholarly-articles",
            "science-preprints"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "arXiv",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Programmatic access to arXiv API for searching preprints",
            "Retrieve paper metadata such as title, authors, abstract, and PDF URL",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_plip_info",
        "description": "Get comprehensive information about PLIP \u2013 a protein-ligand interaction profiler",
        "detailed_description": "Get comprehensive information about PLIP \u2013 protein-ligand interaction profiler",
        "toolType": "Scientific Software Package",
        "tags": [
            "binding-site-analysis",
            "computational-chemistry",
            "drug-discovery-support",
            "hydrogen-bond-analysis",
            "interaction-profiling",
            "non-covalent-interaction-mapping",
            "pdb-structure-parsing",
            "pi-stacking-detection",
            "protein-ligand-interactions",
            "salt-bridge-identification",
            "structural-bioinformatics",
            "water-bridge-profiling"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PLIP",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide an overview of PLIP",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PLIP"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PLIP"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4c9e9b4a-2f31-4d3c-8b78-e483b26e4321",
        "name": "get_pdbfixer_info",
        "description": "Provides information about PDBFixer, a protein structure preparation tool",
        "detailed_description": "Get comprehensive information about PDBFixer \u2013 protein structure preparation tool",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-biology",
            "homology-modeling-prep",
            "metadata-retrieval",
            "molecular-modeling-support",
            "package-documentation",
            "pdb-data-extraction",
            "pdb-file-repair",
            "pdbfixer",
            "protein-modeling-assistance",
            "protein-structure-preparation",
            "python-bioinformatics",
            "structural-bioinformatics",
            "structure-preprocessing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PDBFixer",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "retrieve overview",
            "retrieve installation instructions",
            "retrieve usage examples",
            "retrieve documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PDBFixer"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PDBFixer"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3fa5e98-9bea-4e32-9f38-2c4a938b0a10",
        "name": "get_prody_info",
        "description": "Retrieve information about ProDy for protein dynamics analysis",
        "detailed_description": "Get comprehensive information about ProDy \u2013 protein dynamics analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "computational-biology",
            "dynamics-analysis-tool",
            "elastic-network-model",
            "molecular-dynamics-analysis",
            "normal-mode-analysis",
            "package-metadata",
            "prody-documentation",
            "prody-info",
            "protein-dynamics",
            "python-library",
            "structural-bioinformatics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ProDy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about ProDy",
            "Retrieve installation instructions for ProDy",
            "Retrieve usage examples of ProDy",
            "Retrieve documentation links for ProDy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about ProDy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about ProDy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa23cf09-4961-4a20-9b0c-2e656fdf4c1a",
        "name": "get_mageck_info",
        "description": "Provides key information about MAGeCK, a CRISPR-Cas9 screen analysis toolkit.",
        "detailed_description": "Get comprehensive information about MAGeCK \u2013 CRISPR screen analysis toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package-overview",
            "crispr-screen-analysis",
            "crispr-screening",
            "functional-genomics",
            "genome-editing",
            "installation-instructions",
            "mageck-documentation",
            "mageck-info-retrieval",
            "parameter-descriptions",
            "pipeline-integration",
            "tutorial-workflows",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "MAGeCK",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "overview information",
            "installation instructions",
            "usage examples",
            "documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about MAGeCK"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about MAGeCK"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_flowkit_info",
        "description": "Retrieve detailed information about FlowKit, a Python toolkit for flow cytometry data analysis.",
        "detailed_description": "Get comprehensive information about FlowKit \u2013 flow cytometry analysis toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-toolkit",
            "computational-cytometry",
            "cytometry-data-processing",
            "fcs-file-management",
            "flow-cytometry-analysis",
            "flowkit-documentation",
            "flowkit-info",
            "immunophenotyping-workflow",
            "package-metadata",
            "pipeline-integration",
            "single-cell-analysis",
            "software-overview"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "FlowKit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve FlowKit overview",
            "Retrieve FlowKit installation instructions",
            "Retrieve FlowKit usage examples",
            "Retrieve FlowKit documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FlowKit"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FlowKit"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d845c1b0-3e18-4f3a-8f80-b72d3e5b1ecf",
        "name": "get_poliastro_info",
        "description": "Get comprehensive information about the poliastro astrodynamics library.",
        "detailed_description": "Get comprehensive information about poliastro \u2013 astrodynamics library",
        "toolType": "Scientific Software Package",
        "tags": [
            "API-documentation",
            "aerospace-engineering",
            "astrodynamics-library",
            "computational-physics",
            "developer-reference",
            "open-source-astrodynamics",
            "orbital-mechanics-reference",
            "poliastro-info-retrieval",
            "python-astrodynamics",
            "scientific-computing",
            "space-mission-planning",
            "spacecraft-trajectory-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "poliastro",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the poliastro library",
            "Provide installation instructions for poliastro",
            "Show usage information for poliastro",
            "Fetch documentation links for poliastro"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about poliastro"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about poliastro"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "submit_expert_response",
        "description": "Submit expert response to a consultation request.",
        "detailed_description": "Submit expert response to a consultation request (for use by human experts through the expert interface).",
        "toolType": "Human Expert Feedback",
        "tags": [
            "advisory-submission",
            "consultation-management",
            "consultation-response",
            "expert-interface",
            "expert-response",
            "knowledge-sharing",
            "professional-advice",
            "remote-api",
            "request-id-parameter",
            "response-submission",
            "sme-consultation",
            "text-based-response"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Submit expert responses to consultation requests"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "request_id": {
                "type": "string",
                "description": "The ID of the consultation request to respond to"
            },
            "response": {
                "type": "string",
                "description": "The expert's response and recommendations"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string",
                    "description": "The ID of the consultation request to respond to"
                },
                "response": {
                    "type": "string",
                    "description": "The expert's response and recommendations"
                }
            },
            "required": [
                "request_id",
                "response"
            ]
        },
        "exampleInput": {
            "request_id": "req_12345",
            "response": "Based on the data, I recommend starting with the proposed protocol and monitoring patient response over 2 weeks."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d6179b0-8d1b-4f0c-a25a-7e6d3a8f9c2e",
        "name": "run_compass_prediction",
        "description": "Predicts immune checkpoint inhibitor response from tumor gene expression using the COMPASS model, delivering binary responder predictions and interpretable immune cell concept insights.",
        "detailed_description": "Predicts immune checkpoint inhibitor (ICI) response using COMPASS model. This tool analyzes single-sample tumor gene expression data to predict patient responsiveness to immune checkpoint inhibitor therapy. The COMPASS model leverages immune cell concept analysis to provide both a binary prediction and interpretable insights into the immune microenvironment factors driving the prediction.",
        "toolType": "ML Model",
        "tags": [
            "binary-responder-classification",
            "bioinformatics-pipeline",
            "cancer-immunotherapy",
            "checkpoint-inhibitor-biomarker",
            "compass-model",
            "computational-immunology",
            "ici-response-prediction",
            "immune-checkpoint-inhibitor",
            "immune-microenvironment-insights",
            "interpretability",
            "predictive-biomarker",
            "single-sample-analysis",
            "tpm-normalized-expression",
            "tumor-gene-expression"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "COMPASS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Predict immune checkpoint inhibitor response from single-sample tumor gene expression data",
            "Classify samples as responders or non-responders based on a configurable probability threshold",
            "Provide top immune cell concept importance scores for interpretability"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_expression_data_path": {
                "type": "string",
                "description": "Path to the TPM expression data file. Keys should be standard gene symbols (e.g., 'CD274', 'PDCD1', 'CTLA4'). Values should be normalized expression in TPM (Transcripts Per Million). Minimum ~100 genes recommended for reliable predictions."
            },
            "threshold": {
                "type": "number",
                "description": "Probability threshold for responder classification (0.0-1.0). Values \u2265 threshold classify sample as likely responder. Default 0.5 provides balanced sensitivity/specificity. Consider lower thresholds (~0.3) for higher sensitivity."
            },
            "root_path": {
                "type": "string",
                "description": "Path to the directory containing model checkpoints. If None, uses COMPASS_MODEL_PATH/immune-compass/checkpoint."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_expression_data_path": {
                    "type": "string",
                    "description": "Path to the TPM expression data file. Keys should be standard gene symbols (e.g., 'CD274', 'PDCD1', 'CTLA4'). Values should be normalized expression in TPM (Transcripts Per Million). Minimum ~100 genes recommended for reliable predictions."
                },
                "threshold": {
                    "type": "number",
                    "description": "Probability threshold for responder classification (0.0-1.0). Values \u2265 threshold classify sample as likely responder. Default 0.5 provides balanced sensitivity/specificity. Consider lower thresholds (~0.3) for higher sensitivity.",
                    "default": 0.5,
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "root_path": {
                    "type": "string",
                    "description": "Path to the directory containing model checkpoints. If None, uses COMPASS_MODEL_PATH/immune-compass/checkpoint."
                }
            },
            "required": [
                "gene_expression_data_path"
            ]
        },
        "exampleInput": {
            "gene_expression_data_path": "/data/sample_tpm_expression.tsv",
            "threshold": 0.5,
            "root_path": "/models/immune_compass/checkpoint"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_abstract_from_patent_app_number",
        "description": "Fetches the abstract text for a given USPTO patent application number.",
        "detailed_description": "Returns the abstract (ABST) text for a given patent application number.",
        "toolType": "ML Model",
        "tags": [
            "abstract-fetcher",
            "abstract-text-retrieval",
            "application-number-lookup",
            "innovation-research",
            "intellectual-property",
            "legal-document-retrieval",
            "patent-abstract-extraction",
            "patent-analysis",
            "patent-data-retrieval",
            "prior-art-search",
            "text-mining-api",
            "uspto-patent-abstract"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "USPTO",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve abstract (ABST) text for a USPTO patent application",
            "Accepts applicationNumberText to query the patent API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The USPTO application number (e.g. \"19113417\")."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The USPTO application number (e.g. \"19113417\").",
                    "required": true
                }
            },
            "required": [
                "applicationNumberText"
            ]
        },
        "exampleInput": {
            "applicationNumberText": "19113417"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f5e8c9-1a2b-4c3d-9e0f-1234567890ab",
        "name": "get_claims_from_patent_app_number",
        "description": "Fetches the claims text for a specified patent application number.",
        "detailed_description": "Returns the claims (CLM) text for a given patent application number.",
        "toolType": "ML Model",
        "tags": [
            "application-number-query",
            "claim-text-retrieval",
            "ip-analysis",
            "legal-document-retrieval",
            "legal-technology",
            "patent-application-lookup",
            "patent-claim-extraction",
            "patent-claims",
            "patent-data-retrieval",
            "prior-art-search",
            "text-extraction",
            "uspto-api-integration"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "USPTO",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve claims text from a specified patent application number"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The USPTO application number (e.g. \"19113417\")."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The USPTO application number (e.g. \"19113417\").",
                    "required": true
                }
            },
            "required": [
                "applicationNumberText"
            ]
        },
        "exampleInput": {
            "applicationNumberText": "19113417"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "get_full_text_from_patent_app_number",
        "description": "Fetches full text of a patent application by its application number.",
        "detailed_description": "Returns the full application text for a given patent application number.",
        "toolType": "ML Model",
        "tags": [
            "application-number-query",
            "full-text-extraction",
            "intellectual-property",
            "ip-document-access",
            "legal-document-retrieval",
            "patent-application-fetch",
            "patent-data-mining",
            "patent-information-system",
            "patent-search-api",
            "patent-specification-retrieval",
            "patent-text-retrieval",
            "uspto-patent-data"
        ],
        "category": "RemoteTool",
        "lab": "Zitnik Lab",
        "source": "USPTO-API",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches full text of a patent application",
            "Accepts applicationNumberText as input",
            "Retrieves patent documents via USPTO API endpoint"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The USPTO application number (e.g. \"19113417\")."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The USPTO application number (e.g. \"19113417\").",
                    "required": true
                }
            },
            "required": [
                "applicationNumberText"
            ]
        },
        "exampleInput": {
            "applicationNumberText": "19113417"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_numpy_info",
        "description": "Retrieve detailed information about NumPy, the fundamental scientific computing package for Python.",
        "detailed_description": "Get comprehensive information about NumPy - the fundamental package for scientific computing with Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "array-manipulation",
            "data-analysis",
            "machine-learning-preprocessing",
            "matrix-operations",
            "numeric-python",
            "numerical-computing",
            "numpy-documentation",
            "numpy-info",
            "package-overview",
            "python-library",
            "quick-start-guide",
            "scientific-computing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "NumPy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides comprehensive information about the NumPy package",
            "Optionally includes usage examples and quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5fc3b45-f938-4fda-a779-dd75ee02b0a7",
        "name": "get_scipy_info",
        "description": "Retrieve detailed information about SciPy, the fundamental Python library for scientific computing.",
        "detailed_description": "Get comprehensive information about SciPy \u2013 fundamental algorithms for scientific computing",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-reference",
            "api-reference",
            "computational-science",
            "differential-integration",
            "library-documentation",
            "linear-algebra-routines",
            "numerical-analysis",
            "optimization-algorithms",
            "python-package",
            "scientific-computing",
            "scipy-info",
            "signal-processing-tools",
            "statistical-modules"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "SciPy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get an overview of SciPy",
            "Provide installation instructions",
            "Show usage examples",
            "Share documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about SciPy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about SciPy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8a3f1bfa-2d44-4e2c-9b00-a7d4d4b5f123",
        "name": "get_pandas_info",
        "description": "Retrieve detailed information about pandas, a powerful Python library for data analysis.",
        "detailed_description": "Get comprehensive information about pandas - powerful data structures and data analysis tools for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "data-exploration",
            "data-manipulation-library",
            "data-science-toolkit",
            "data-structure-overview",
            "dataframe-inspection",
            "pandas-info",
            "programming-reference",
            "python-data-analysis",
            "python-data-engineering",
            "python-library-documentation",
            "quickstart-guide",
            "statistical-analysis",
            "tabular-data-processing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pandas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pandas description and metadata",
            "Include usage examples and quick start guide if requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f1c2a7-8d1e-4e6b-9a61-df0c1b2e3f45",
        "name": "get_h5py_info",
        "description": "Get comprehensive information about h5py \u2013 HDF5 for Python",
        "detailed_description": "Get comprehensive information about h5py \u2013 HDF5 for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "data-serialization",
            "h5py-information",
            "hdf5-python",
            "hierarchical-data",
            "library-metadata",
            "metadata-extraction",
            "package-documentation",
            "python-package-inspection",
            "quickstart-guide",
            "scientific-data-storage",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "h5py",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata including description, category, and keywords",
            "Provide documentation and repository links",
            "Offer installation commands for pip and conda",
            "Include usage examples and quick start guide when requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f1f9c8-9d1a-4d37-8fdb-4a892e7c5c2a",
        "name": "get_flowutils_info",
        "description": "Retrieve various details (overview, installation, usage, documentation) about the FlowUtils library for flow cytometry.",
        "detailed_description": "Get comprehensive information about FlowUtils \u2013 flow cytometry utilities and algorithms",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-documentation",
            "bioinformatics-package",
            "compensation-methods",
            "computational-immunology",
            "cytometric-data-processing",
            "flow-cytometry",
            "flowutils-package",
            "fluorescence-intensity-analysis",
            "gating-algorithms",
            "package-documentation",
            "single-cell-analysis",
            "tool-information-retrieval"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "flowutils",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package overview",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FlowUtils"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FlowUtils"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4bda1c1-7f46-4e1c-bccc-a72fa3f58e7e",
        "name": "get_cooler_info",
        "description": "Retrieve detailed information about the Cooler package for sparse Hi-C contact matrix storage",
        "detailed_description": "Get comprehensive information about Cooler \u2013 sparse Hi-C contact matrix storage",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-data-insights",
            "chromatin-architecture",
            "chromatin-interaction-data",
            "contact-matrix-summary",
            "cooler-file-inspection",
            "cooler-format-parser",
            "data-format-exploration",
            "genomic-contact-map",
            "hic-contact-matrix",
            "hic-data-metadata",
            "sparse-matrix-storage",
            "structural-genomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cooler",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about the Cooler package",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8b37246-3deb-4e57-8b33-b43d5e5fa2c4",
        "name": "get_tiledb_info",
        "description": "Retrieves detailed information about TileDB, a modern array database.",
        "detailed_description": "Get comprehensive information about TileDB \u2013 modern database for array data",
        "toolType": "Scientific Software Package",
        "tags": [
            "array-database-info",
            "genomics-pipelines",
            "geospatial-analytics",
            "hpc-workflows",
            "metadata-retrieval",
            "multidimensional-array",
            "performance-metrics",
            "schema-exploration",
            "scientific-data-management",
            "storage-engine",
            "tiledb-introspection",
            "tiledb-metadata"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "TileDB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of TileDB",
            "Retrieve installation instructions for TileDB",
            "Retrieve usage examples for TileDB",
            "Retrieve documentation URL for TileDB"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about TileDB"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about TileDB"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d13a8f8a-3b6f-4c2b-9c2d-1f2a3e4b5c6d",
        "name": "get_sympy_info",
        "description": "Get comprehensive information about SymPy, a symbolic mathematics library.",
        "detailed_description": "Get comprehensive information about SymPy \u2013 symbolic mathematics library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "class-extraction",
            "computer-algebra",
            "documentation-extractor",
            "function-listing",
            "library-inspection",
            "mathematical-library",
            "python-package-info",
            "symbolic-computation",
            "symbolic-math-overview",
            "sympy-documentation",
            "sympy-information"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "SymPy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about SymPy",
            "Provide installation instructions for SymPy",
            "Show usage examples for SymPy",
            "Offer documentation link for SymPy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about SymPy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about SymPy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6ecf5ca-3d02-4f52-aac8-4edc3440d8b9",
        "name": "get_optlang_info",
        "description": "Retrieve comprehensive information about the optlang optimization language for mathematical programming",
        "detailed_description": "Get comprehensive information about optlang \u2013 optimization language for mathematical programming",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "computational-optimization",
            "configuration-parameters",
            "documentation-retrieval",
            "domain-specific-language",
            "info-retrieval",
            "mathematical-programming",
            "modeling-framework",
            "optimization-language",
            "optlang-documentation",
            "python-package",
            "software-documentation",
            "solver-interface",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "optlang",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the optlang package",
            "Provide installation instructions for optlang",
            "Show usage examples of optlang",
            "Link to optlang documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about optlang"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about optlang"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4a1d388b-3c27-4abc-9fcf-1e2bde711a20",
        "name": "get_dask_info",
        "description": "Fetch Dask package information including parallel computing and task scheduling features.",
        "detailed_description": "Get information about the dask package. Parallel computing with task scheduling",
        "toolType": "Scientific Software Package",
        "tags": [
            "compute-framework-overview",
            "dask-info",
            "data-parallelism",
            "distributed-computing",
            "high-performance-computing",
            "library-documentation",
            "metadata-retrieval",
            "module-overview",
            "package-introspection",
            "package-metadata",
            "parallel-computing",
            "python-distributed",
            "python-package-inspection",
            "task-scheduling"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Dask",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get information about the dask package",
            "Provide details on parallel computing and task scheduling features"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f7a4e00-1bbc-4f3b-9f84-f500f8c1e0d8",
        "name": "drugbank_vocab_filter",
        "description": "Filters the DrugBank vocabulary dataset by specified field criteria using simple field-value pairs.",
        "detailed_description": "Filter the DrugBank vocabulary dataset based on specific field criteria. Use simple field-value pairs to filter drugs by properties like names, IDs, and chemical identifiers.",
        "toolType": "Database",
        "tags": [
            "case-insensitive-filter",
            "chemical-database-query",
            "chemical-identifier-search",
            "cheminformatics-tool",
            "dataset-query",
            "dataset-subsetting",
            "drug-data-filtering",
            "drug-name-search",
            "drugbank-filter",
            "drugbank-vocabulary-filter",
            "field-value-filtering",
            "id-based-filtering",
            "pharmacology-dataset"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter DrugBank vocabulary by any supported field",
            "Apply conditions: contains, starts_with, ends_with, exact, not_empty",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "field": {
                "type": "string",
                "description": "The field to filter on"
            },
            "condition": {
                "type": "string",
                "description": "The type of filtering condition to apply. Filter is case-insensitive."
            },
            "value": {
                "type": "string",
                "description": "The value to filter by. Not required when condition is 'not_empty'. Examples: 'insulin' (for contains), 'DB00' (for starts_with), 'acid' (for ends_with), 'Aspirin' (for exact)"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "description": "The field to filter on",
                    "enum": [
                        "DrugBank ID",
                        "Accession Numbers",
                        "Common name",
                        "CAS",
                        "UNII",
                        "Synonyms",
                        "Standard InChI Key"
                    ]
                },
                "condition": {
                    "type": "string",
                    "description": "The type of filtering condition to apply. Filter is case-insensitive.",
                    "enum": [
                        "contains",
                        "starts_with",
                        "ends_with",
                        "exact",
                        "not_empty"
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "The value to filter by. Not required when condition is 'not_empty'. Examples: 'insulin' (for contains), 'DB00' (for starts_with), 'acid' (for ends_with), 'Aspirin' (for exact)",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "field": "Common name",
            "condition": "contains",
            "value": "insulin",
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9e1c4b2d-5a79-4f2e-9e10-7468ce8e5f3b",
        "name": "drugbank_full_search",
        "description": "Searches DrugBank for drugs by ID, name, or synonym to return pharmacology details, ATC codes, and protein partners.",
        "detailed_description": "Search the cleaned DrugBank dataframe (one row per drug) by ID, common name, or synonym. Returns identifiers, ATC, main pharmacology text fields, and protein partners. For best results, it is recommended that one uses `drugbank_vocab_search` to obtain DrugBank ID from other keywords first, and use this tool with DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "atc-code-retrieval",
            "bioinformatics",
            "cheminformatics",
            "common-name-search",
            "dataframe-search",
            "drug-discovery",
            "drugbank-id-lookup",
            "drugbank-search",
            "free-text-query",
            "pharmacology-database",
            "protein-target-retrieval",
            "synonym-lookup"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search the DrugBank dataset by ID, name, or synonym",
            "Return identifiers, ATC codes, and main pharmacology text fields",
            "Retrieve protein partners including targets, enzymes, carriers, and transporters",
            "Support case-sensitive and exact match search options",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Free-text query (e.g. 'DB00945', 'acetylsalicylic', 'Acarbosa').",
                "required": true
            },
            "search_fields": {
                "type": "array",
                "description": "Columns to search in. Choose from: 'drugbank_id', 'name', 'synonyms'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Match text with exact case if true."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Field value must equal query exactly if true; otherwise substring match."
            },
            "limit": {
                "type": "integer",
                "description": "Max number of rows to return.",
                "minimum": 1,
                "maximum": 1000
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Free-text query (e.g. 'DB00945', 'acetylsalicylic', 'Acarbosa').",
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Columns to search in. Choose from: 'drugbank_id', 'name', 'synonyms'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Match text with exact case if true."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Field value must equal query exactly if true; otherwise substring match."
                },
                "limit": {
                    "type": "integer",
                    "description": "Max number of rows to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "DB00945",
            "search_fields": [
                "name",
                "synonyms",
                "drugbank_id"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4f234b32-7d88-4c3a-aada-7d9c3bbf3212",
        "name": "drugbank_links_search",
        "description": "Search cross-references linking DrugBank IDs to various external identifiers and web resources.",
        "detailed_description": "Search the cross-reference table linking DrugBank IDs to external identifiers (CAS, KEGG, PubChem, ChEBI, PharmGKB, UniProt, etc.) and web resources.",
        "toolType": "Database",
        "tags": [
            "cas-number-search",
            "chemical-database-mapping",
            "cheminformatics",
            "cross-database-linking",
            "database-lookup",
            "drug-identifier-search",
            "drugbank-crossreference",
            "external-database-integration",
            "identifier-resolution",
            "kegg-compound-access",
            "pharmacogenomics",
            "pubchem-id-retrieval"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search cross-reference table linking DrugBank IDs to external identifiers",
            "Perform free-text queries across multiple fields",
            "Support case-sensitive and exact match options",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Free-text query (e.g. 'DB00002', 'Cetuximab')."
            },
            "search_fields": {
                "type": "array",
                "description": "Columns to search. Choose from: 'DrugBank ID', 'Name', 'CAS Number', 'Drug Type', 'KEGG Compound ID', 'KEGG Drug ID', 'PubChem Compound ID', 'PubChem Substance ID', 'ChEBI ID', 'PharmGKB ID', 'HET ID', 'UniProt ID', 'Wikipedia ID', 'Drugs.com Link', 'NDC ID', 'ChemSpider ID', 'BindingDB ID', 'TTD ID'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Match text with exact case if true."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Field value must equal query exactly if true; otherwise substring match."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of rows to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Free-text query (e.g. 'DB00002', 'Cetuximab').",
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Columns to search. Choose from: 'DrugBank ID', 'Name', 'CAS Number', 'Drug Type', 'KEGG Compound ID', 'KEGG Drug ID', 'PubChem Compound ID', 'PubChem Substance ID', 'ChEBI ID', 'PharmGKB ID', 'HET ID', 'UniProt ID', 'Wikipedia ID', 'Drugs.com Link', 'NDC ID', 'ChemSpider ID', 'BindingDB ID', 'TTD ID'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Match text with exact case if true."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Field value must equal query exactly if true; otherwise substring match."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of rows to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "DB00002",
            "search_fields": [
                "DrugBank ID",
                "Name"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b1f3c2-9d7e-4a5b-8f2a-3d4c5b6e7f90",
        "name": "dict_search",
        "description": "Search the DICTrank dataset for drug-induced cardiotoxicity risk by trade name, generic name, or active ingredient.",
        "detailed_description": "Search the DICTrank dataset for drug-induced cardiotoxicity (DICT) risk information by trade name, generic name, or active ingredient. Searching with exact match is not recommeded.",
        "toolType": "Database",
        "tags": [
            "active-ingredient-lookup",
            "cardiotoxicity-risk-search",
            "case-sensitive-search",
            "clinical-pharmacology",
            "dataset-search",
            "dictrank-dataset",
            "drug-induced-cardiotoxicity",
            "drug-safety-assessment",
            "generic-name-lookup",
            "medical-database-query",
            "pharma-informatics",
            "pharmacovigilance",
            "substring-matching",
            "toxicology-research",
            "trade-name-lookup"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DICTrank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DICTrank dataset by drug name or ingredient",
            "Specify search fields (Trade Name, Generic/Proper Name(s), Active Ingredient(s))",
            "Control case sensitivity",
            "Toggle exact or substring matching",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Free-text query (e.g. 'ZYPREXA', 'Olanzapine')."
            },
            "search_fields": {
                "type": "array",
                "description": "Columns to search. Choose from: 'Trade Name', 'Generic/Proper Name(s)', 'Active Ingredient(s)'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Match text with exact case if true."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Field value must equal query exactly if true; otherwise substring match."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of rows to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Free-text query (e.g. 'ZYPREXA', 'Olanzapine').",
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Columns to search. Choose from: 'Trade Name', 'Generic/Proper Name(s)', 'Active Ingredient(s)'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Match text with exact case if true."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Field value must equal query exactly if true; otherwise substring match."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of rows to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "Olanzapine",
            "search_fields": [
                "Trade Name",
                "Generic/Proper Name(s)"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "dili_search",
        "description": "Search the DILIrank dataset for DILI risk information by compound name.",
        "detailed_description": "Search the DILIrank dataset for drug-induced liver-injury (DILI) risk information by compound name. Searching with exact match is not recommeded.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-search",
            "cheminformatics",
            "compound-name-search",
            "dataset-filtering",
            "dilirank-dataset-search",
            "drug-induced-liver-injury",
            "drug-safety-assessment",
            "free-text-query",
            "hepatotoxicity-risk",
            "pharmacovigilance",
            "substring-match",
            "toxicology-database"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DILIrank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search the DILIrank dataset by compound name",
            "Supports substring or exact matching",
            "Case-sensitive search optional",
            "Limit number of returned rows",
            "Specify search fields (e.g., 'Compound Name')"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Free-text query (e.g. 'acetaminophen')."
            },
            "search_fields": {
                "type": "array",
                "description": "Columns to search. Choose from: 'Compound Name'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Match text with exact case if true."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Field value must equal query exactly if true; otherwise substring match."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of rows to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Free-text query (e.g. 'acetaminophen').",
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Columns to search. Choose from: 'Compound Name'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Match text with exact case if true."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Field value must equal query exactly if true; otherwise substring match."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of rows to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "acetaminophen",
            "search_fields": [
                "Compound Name"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3da6d207-644a-4a4d-9bf5-8d139e7a1c7a",
        "name": "diqt_search",
        "description": "Search the DIQTA dataset for drug-induced QT-interval prolongation risk by generic name or DrugBank ID.",
        "detailed_description": "Search the DIQTA dataset for drug-induced QT-interval prolongation risk information by generic name or DrugBank ID. Searching with exact match is not recommeded for generic name.",
        "toolType": "Database",
        "tags": [
            "cardiotoxicity-assessment",
            "cardiovascular-toxicology",
            "case-sensitive-filter",
            "clinical-pharmacology-research",
            "diqta-dataset-search",
            "drug-induced-qt-interval",
            "drug-safety-profiling",
            "drugbank-id-search",
            "exact-match-search",
            "generic-name-search",
            "pharmacovigilance-database",
            "qt-prolongation-risk",
            "substrate-substring-search"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DIQTA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search dataset",
            "Filter by generic name or DrugBank ID",
            "Control case sensitivity",
            "Perform exact or substring matches",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Free-text query (e.g. 'Astemizole', 'DB00637')."
            },
            "search_fields": {
                "type": "array",
                "description": "Columns to search. Choose from: 'Generic/Proper Name(s)', 'DrugBank ID'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Match text with exact case if true."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Field value must equal query exactly if true; otherwise substring match."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of rows to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Free-text query (e.g. 'Astemizole', 'DB00637').",
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Columns to search. Choose from: 'Generic/Proper Name(s)', 'DrugBank ID'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Match text with exact case if true."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Field value must equal query exactly if true; otherwise substring match."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of rows to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "Astemizole",
            "search_fields": [
                "Generic/Proper Name(s)"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a1f2c4-8d6f-4c7e-9a2d-1c34b5e87129",
        "name": "get_patent_overview_by_text_query",
        "description": "Search USPTO patent applications by title keyword or phrase with options for exact match, sorting, pagination, and date range filters, returning key metadata like application number, filing/grant dates, title, and CPC classifications.",
        "detailed_description": "Search for patent application overviews using a query string of the format 'applicationMetaData.inventionTitle:your_search_term', where your_search_term is the case-insensitive keyword or keyphrase you are searching for. If your_search_term is a multi-word phrase, it must be encased in escaped double quotation marks for exact matching. This tool allows for sorting, offsetting, and filtering of results. Returns a list of important metadata fields for each application, including application number, filing date, grant date, invention title, and CPC classifications.",
        "toolType": "API",
        "tags": [
            "cpc-classification",
            "date-range-filtering",
            "filing-date-filter",
            "grant-date-filter",
            "ip-metadata-retrieval",
            "offset-limit-pagination",
            "patent-application-overview",
            "patent-search",
            "prior-art-analysis",
            "sort-by-date",
            "technology-scouting",
            "title-based-query",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search patent applications by title keyword or keyphrase",
            "Support for exact match searches",
            "Sort results by filing or grant date",
            "Paginate results with offset and limit",
            "Filter results by date ranges",
            "Return key metadata including application number, dates, title, and CPC classifications"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Keyword or keyphrase to search for in the patent application title. This field is required."
            },
            "exact_match": {
                "type": "boolean",
                "description": "If true, the search will only return results that exactly match the provided query. Default is false."
            },
            "sort": {
                "type": "string",
                "description": "Sorts results by one of the following fields: filingDate or grantDate. Follow the field name with a space and 'asc' or 'desc' for ascending or descending by date, respectively. For example: 'filingDate desc'"
            },
            "offset": {
                "type": "integer",
                "description": "The starting position (zero-indexed) of the result set. Default is 0."
            },
            "limit": {
                "type": "integer",
                "description": "The maximum number of results to return. Default is 25."
            },
            "rangeFilters": {
                "type": "string",
                "description": "Limits results to the date range specified for one of the following fields: filingDate or grantDate. Provide the field name, a space, and a colon-separated start and end value in YYYY-MM-DD format. For example: 'grantDate 2010-01-01:2011-01-01'"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Keyword or keyphrase to search for in the patent application title. This field is required.",
                    "required": true
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "If true, the search will only return results that exactly match the provided query. Default is false.",
                    "required": false,
                    "default": false
                },
                "sort": {
                    "type": "string",
                    "description": "Sorts results by one of the following fields: filingDate or grantDate. Follow the field name with a space and 'asc' or 'desc' for ascending or descending by date, respectively. For example: 'filingDate desc'",
                    "required": false,
                    "default": "filingDate desc"
                },
                "offset": {
                    "type": "integer",
                    "description": "The starting position (zero-indexed) of the result set. Default is 0.",
                    "required": false,
                    "default": 0
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of results to return. Default is 25.",
                    "required": false,
                    "default": 25
                },
                "rangeFilters": {
                    "type": "string",
                    "description": "Limits results to the date range specified for one of the following fields: filingDate or grantDate. Provide the field name, a space, and a colon-separated start and end value in YYYY-MM-DD format. For example: 'grantDate 2010-01-01:2011-01-01'",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "query": "battery technology",
            "exact_match": false,
            "sort": "filingDate desc",
            "offset": 0,
            "limit": 25,
            "rangeFilters": "grantDate 2020-01-01:2021-01-01"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_patent_application_metadata",
        "description": "Fetch metadata for a patent application by its application number.",
        "detailed_description": "Retrieves only the metadata for a specific patent application by its application number.",
        "toolType": "API",
        "tags": [
            "application-number-query",
            "data-retrieval-api",
            "intellectual-property-data",
            "ip-research-tool",
            "json-metadata-output",
            "legal-tech-integration",
            "metadata-extraction",
            "patent-application-metadata",
            "patent-information-fetch",
            "patent-law-analytics",
            "patent-metadata-retrieval",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata of a patent application",
            "Query patent metadata by applicationNumberText",
            "Provide filingDate, grantDate, status, classifications, applicants, and inventors"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2e8f3a45-9b12-4d3e-b1f7-a7f1e0f509c3",
        "name": "get_patent_term_adjustment_data",
        "description": "Retrieves patent term adjustment details for a given patent application.",
        "detailed_description": "Obtains the patent term adjustment details for a given application number.",
        "toolType": "API",
        "tags": [
            "application-number-input",
            "intellectual-property",
            "ip-management",
            "json-api-output",
            "legal-due-diligence",
            "patent-analytics",
            "patent-compliance",
            "patent-term-adjustment",
            "patent-term-extension",
            "pta-data-retrieval",
            "term-adjustment-records",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch patent term adjustment details for a specified application number",
            "Return total patent term adjustment quantity",
            "Handle and report errors if the request fails"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_patent_continuity_data",
        "description": "Retrieves parent and child continuity relationships for a patent application.",
        "detailed_description": "Fetches the parent and child continuity data for a patent application, showing its relationship to other applications.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "continuity-data",
            "ip-analysis",
            "legal-research",
            "parent-child-relations",
            "patent-analytics",
            "patent-continuity",
            "patent-family-tree",
            "patent-lineage",
            "patent-prosecution-history",
            "uspto-api-integration",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve parent and child continuity data for patent applications",
            "Show relationships between related patent applications"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f1c9b0-4d77-4f3a-8b34-5c6d7e8f9a01",
        "name": "get_patent_foreign_priority_data",
        "description": "Retrieve foreign priority claims for a patent application.",
        "detailed_description": "Accesses information about any foreign priority claims associated with an application.",
        "toolType": "API",
        "tags": [
            "application-number-query",
            "foreign-priority-data",
            "international-priority-claims",
            "ip-foreign-priority",
            "patent-data-access",
            "patent-document-metadata",
            "patent-family-tracing",
            "patent-priority-lookup",
            "patent-prosecution-history",
            "priority-claim-analysis",
            "priority-claim-extraction",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Access foreign priority claims for a given patent application",
            "Provide filing date and office details for foreign priority applications",
            "Return total count of matching patent applications"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_associated_documents_metadata",
        "description": "Fetches metadata for documents (publications, grants) linked to a patent application.",
        "detailed_description": "Obtains metadata for documents associated with an application, such as publications and grants.",
        "toolType": "API",
        "tags": [
            "application-document-metadata",
            "associated-documents-metadata",
            "bibliographic-metadata",
            "document-discovery",
            "grant-metadata",
            "metadata-api",
            "metadata-retrieval",
            "open-data-portal",
            "patent-application-data",
            "patent-records",
            "publication-metadata",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch metadata of documents associated with a patent application",
            "Retrieve publication and grant metadata",
            "Provides file details like zipFileName, xmlFileName, productIdentifier, fileLocationURI, fileCreateDateTime"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "PubTator3_EntityAutocomplete",
        "description": "Suggests standardized PubTator IDs for partial biomedical terms to convert free-text names into stable IDs.",
        "detailed_description": "Provides suggestions for the best-matching standardized PubTator IDs for a partial biomedical term (gene, disease, chemical, or variant). Use this tool first to convert free-text names into the stable @IDs required by the other PubTator APIs.",
        "toolType": "API",
        "tags": [
            "bioinformatics-annotation",
            "biomedical-concept-normalization",
            "chemical-entity-mapping",
            "concept-disambiguation",
            "disease-id-suggestion",
            "gene-identifier-lookup",
            "identifier-resolution",
            "metadata-standardization",
            "named-entity-recognition",
            "ontology-term-suggestion",
            "pubtator-entity-autocomplete",
            "pubtator-id-conversion",
            "semantic-annotation",
            "text-mining-preprocessing",
            "variant-id-autocomplete"
        ],
        "category": "PubTatorTool",
        "lab": "Zitnik Lab",
        "source": "PubTator",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Autocomplete biomedical entity terms",
            "Suggest standardized PubTator IDs",
            "Filter suggestions by entity type",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "text": {
                "type": "string",
                "description": "A few characters or the full name of the biomedical concept you are trying to look up (e.g. \u201cBRAF V6\u201d)."
            },
            "entity_type": {
                "type": "string",
                "description": "Optional filter to restrict suggestions to a single category such as GENE, DISEASE, CHEMICAL, or VARIANT."
            },
            "max_results": {
                "type": "integer",
                "description": "Maximum number of suggestions to return (1 - 50, default = 10)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "A few characters or the full name of the biomedical concept you are trying to look up (e.g. \u201cBRAF V6\u201d)."
                },
                "entity_type": {
                    "type": "string",
                    "description": "Optional filter to restrict suggestions to a single category such as GENE, DISEASE, CHEMICAL, or VARIANT."
                },
                "max_results": {
                    "type": "integer",
                    "description": "Maximum number of suggestions to return (1 - 50, default = 10)."
                }
            },
            "required": [
                "text"
            ]
        },
        "exampleInput": {
            "text": "BRAF V6",
            "entity_type": "GENE",
            "max_results": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5b12e07-0a8c-4ef2-b781-6f8f81234567",
        "name": "PubTator3_LiteratureSearch",
        "description": "Search PubMed articles via keywords, PubTator IDs, or entity relation queries.",
        "detailed_description": "Find PubMed articles that match a keyword, a PubTator entity ID (e.g. \"@GENE_BRAF\"), or an entity-to-entity relation expression (e.g. \"relations:treat|@CHEMICAL_Doxorubicin|@DISEASE_Neoplasms\").",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biomedical-text-mining",
            "chemical-disease-relation",
            "computational-biology",
            "entity-centric-retrieval",
            "entity-relation-query",
            "gene-disease-association",
            "literature-mining",
            "literature-search",
            "named-entity-recognition",
            "pubmed-article-retrieval",
            "pubmed-query",
            "pubtator-entity-search",
            "semantic-query"
        ],
        "category": "PubTatorTool",
        "lab": "Zitnik Lab",
        "source": "PubTator",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search PubMed articles using keywords, PubTator IDs, or relation queries",
            "Support pagination with page and page_size parameters",
            "Retrieve PMIDs matching the search criteria"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "What you want to search for. This can be plain keywords, a single PubTator ID, or the special relation syntax shown above."
            },
            "page": {
                "type": "integer",
                "description": "Zero-based results page (optional; default = 0)."
            },
            "page_size": {
                "type": "integer",
                "description": "How many PMIDs to return per page (optional; default = 20, maximum = 200)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "What you want to search for. This can be plain keywords, a single PubTator ID, or the special relation syntax shown above."
                },
                "page": {
                    "type": "integer",
                    "description": "Zero-based results page (optional; default = 0)."
                },
                "page_size": {
                    "type": "integer",
                    "description": "How many PMIDs to return per page (optional; default = 20, maximum = 200)."
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "page": 0,
            "page_size": 20
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d72aa347-9da8-4cdd-89c0-f8c7d074a237",
        "name": "AdverseEventPredictionQuestionGenerator",
        "description": "Generates personalized adverse-event prediction questions for a disease and drug across multiple patient subgroups.",
        "detailed_description": "Generates a set of personalized adverse-event prediction questions for a given disease and drug, across multiple patient subgroups.",
        "toolType": "AI Agent",
        "tags": [
            "adverse-event-prediction",
            "clinical-decision-support",
            "clinical-subgroup-analysis",
            "disease-drug-pair",
            "drug-safety-analysis",
            "patient-stratification",
            "personalized-medicine",
            "personalized-questions",
            "pharmacovigilance",
            "predictive-modeling",
            "question-generation",
            "risk-assessment-questions",
            "subgroup-specific-questions"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generates personalized adverse-event prediction questions",
            "Creates a general safety question hierarchy",
            "Generates population-specific question extensions based on subgroups",
            "Accepts disease and drug names as inputs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disease_name": {
                "type": "string",
                "description": "The name of the disease or condition"
            },
            "drug_name": {
                "type": "string",
                "description": "The name of the drug"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disease_name": {
                    "type": "string",
                    "description": "The name of the disease or condition"
                },
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug"
                }
            },
            "required": [
                "disease_name",
                "drug_name"
            ]
        },
        "exampleInput": {
            "disease_name": "mild Alzheimer's disease",
            "drug_name": "Kisunla"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "AdverseEventICDMapper",
        "description": "Maps adverse events in clinical text to specific ICD-10-CM codes.",
        "detailed_description": "Extracts adverse events from narrative clinical or pharmacovigilance text and maps each event to the most specific ICD-10-CM code.",
        "toolType": "AI Agent",
        "tags": [
            "adverse-event-extraction",
            "adverse-reaction-identification",
            "automated-medical-annotation",
            "clinical-nlp",
            "clinical-text-mining",
            "drug-safety-surveillance",
            "healthcare-nlp",
            "icd-10-cm-mapping",
            "icd-code-assignment",
            "medical-coding",
            "narrative-text-processing",
            "pharmacovigilance-analysis",
            "text-to-icd-conversion",
            "unstructured-data-processing"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Identifies adverse events in narrative clinical or pharmacovigilance text",
            "Selects the most specific ICD-10-CM code for each event",
            "Outputs results in structured JSON format"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "source_text": {
                "type": "string",
                "description": "Unstructured narrative text that may mention adverse events."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "source_text": {
                    "type": "string",
                    "description": "Unstructured narrative text that may mention adverse events.",
                    "required": true
                }
            },
            "required": [
                "source_text"
            ]
        },
        "exampleInput": {
            "source_text": "Patient experienced headache and nausea after taking the medication."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2d7c9ae4-7f47-4d66-ae2f-c3d5490f12ab",
        "name": "AdverseEventPredictionQuestionGeneratorWithContext",
        "description": "Generates personalized adverse-event prediction questions for a given disease and drug using patient history and clinical context.",
        "detailed_description": "Generates a set of personalized adverse\u2010event prediction questions for a given disease and drug, incorporating additional context information such as patient medical history, clinical findings, or research data.",
        "toolType": "AI Agent",
        "tags": [
            "adverse-event-prediction",
            "adverse-event-question-generator",
            "clinical-decision-support",
            "clinical-question-generation",
            "context-aware-medical-qa",
            "drug-safety-evaluation",
            "medical-nlp",
            "patient-history-contextualization",
            "personalized-risk-assessment",
            "pharmacovigilance-qa",
            "research-data-integration",
            "therapeutic-safety-analysis"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generate personalized adverse-event prediction questions",
            "Integrate additional context information (patient history, clinical findings, research data)",
            "Support general and population-specific question formats"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disease_name": {
                "type": "string",
                "description": "The name of the disease or condition"
            },
            "drug_name": {
                "type": "string",
                "description": "The name of the drug"
            },
            "context_information": {
                "type": "string",
                "description": "Additional context information such as patient medical history, clinical findings, research data, or other relevant background information that should inform the adverse event prediction questions"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disease_name": {
                    "type": "string",
                    "description": "The name of the disease or condition"
                },
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug"
                },
                "context_information": {
                    "type": "string",
                    "description": "Additional context information such as patient medical history, clinical findings, research data, or other relevant background information that should inform the adverse event prediction questions"
                }
            },
            "required": [
                "disease_name",
                "drug_name",
                "context_information"
            ]
        },
        "exampleInput": {
            "disease_name": "Type 2 Diabetes Mellitus",
            "drug_name": "Metformin",
            "context_information": "Patient is a 65-year-old male with a 10-year history of poorly controlled type 2 diabetes mellitus, stage 3 chronic kidney disease (eGFR 45 mL/min/1.73m2), and a history of diabetic neuropathy on ACE inhibitors."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e0f4c2a1-3d5b-4f6e-9a1b-2c3d4e5f6a7b",
        "name": "OpenTargets_get_drug_chembId_by_generic_name",
        "description": "Retrieve a drug\u2019s ChEMBL ID and description using its generic name.",
        "detailed_description": "Fetch the drug chemblId and description based on the drug generic name.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chembl-id-retrieval",
            "chemical-database",
            "cheminformatics",
            "drug-annotation",
            "drug-database-query",
            "drug-discovery-support",
            "drug-identifier",
            "drug-information-retrieval",
            "generic-name-lookup",
            "name-based-search",
            "open-targets-integration",
            "opentargets-api",
            "pharmaceutical-research"
        ],
        "category": "OpentargetToolDrugNameMatch",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by generic name",
            "Return ChEMBL ID of drug",
            "Provide drug description"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drugName": {
                "type": "string",
                "description": "The generic name of the drug for which the ID is required."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drugName": {
                    "type": "string",
                    "description": "The generic name of the drug for which the ID is required.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "drugName": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "OpenTargets_get_drug_indications_by_chemblId",
        "description": "Fetch drug indications by ChEMBL ID.",
        "detailed_description": "Fetch indications (treatable phenotypes/diseases) for a given drug chemblId.",
        "toolType": "API",
        "tags": [
            "bioinformatics-api",
            "chembl-id",
            "clinical-pharmacology",
            "disease-association",
            "drug-discovery-support",
            "drug-indication-mapping",
            "drug-repurposing",
            "indication-retrieval",
            "open-targets-api",
            "pharmacological-profiling",
            "target-validation",
            "therapeutic-indication",
            "treatable-phenotype-data"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug indications by ChEMBL ID",
            "Fetch treatable phenotypes and disease names",
            "Provide indication phases and references"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "chemblId": {
                "type": "string",
                "description": "The chemblId of the drug for which to retrieve treatable phenotypes information."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "chemblId": {
                    "type": "string",
                    "description": "The chemblId of the drug for which to retrieve treatable phenotypes information.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "chemblId": "CHEMBL1234567"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f8c7c5a6-5cbe-4e13-8b0e-2f1fca2e1d9a",
        "name": "OpenTargets_get_target_gene_ontology_by_ensemblID",
        "description": "Retrieve Gene Ontology annotations by Ensembl ID.",
        "detailed_description": "Retrieve Gene Ontology annotations for a specific target by Ensembl ID.",
        "toolType": "API",
        "tags": [
            "annotation-service",
            "bioinformatics-api",
            "biological-process-annotation",
            "cellular-component-annotation",
            "computational-biology",
            "ensembl-id-query",
            "functional-genomics",
            "gene-ontology-annotation",
            "go-annotation-retrieval",
            "molecular-function-annotation",
            "ontology-lookup",
            "open-targets-integration",
            "target-functional-profiling",
            "target-gene-annotation"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Gene Ontology annotations for a target based on its Ensembl ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target for which to retrieve Gene Ontology annotations."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target for which to retrieve Gene Ontology annotations.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c2f2e6a7-3b80-4d61-9f14-8a1b2c3d4e5f",
        "name": "OpenTargets_get_target_homologues_by_ensemblID",
        "description": "Fetches homologues for a given target using its Ensembl ID.",
        "detailed_description": "Fetch homologues for a specific target by Ensembl ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "comparative-genomics",
            "cross-species-comparison",
            "ensembl-api",
            "ensembl-id-lookup",
            "functional-genomics",
            "gene-homology",
            "genomic-data-fetch",
            "homologue-retrieval",
            "open-targets-integration",
            "orthologue-mapping",
            "paralogue-identification",
            "sequence-homology",
            "target-homologues"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch homologues for a given target",
            "Support specifying a target by Ensembl ID",
            "Return homology details including type, sequence identity, and species information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target for which to retrieve homologues."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target for which to retrieve homologues.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000157764"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f74e4bd7-3ffd-4bba-8d05-ce8c09f5298d",
        "name": "OpenTargets_get_target_safety_profile_by_ensemblID",
        "description": "Retrieve safety liabilities for a specific target by Ensembl ID.",
        "detailed_description": "Retrieve known target safety liabilities for a specific target Ensembl ID.",
        "toolType": "API",
        "tags": [
            "adverse-effect-data",
            "bioinformatics",
            "drug-discovery",
            "ensembl-id",
            "genomic-identifier",
            "open-targets",
            "preclinical-safety",
            "safety-profile",
            "target-risk-assessment",
            "target-safety-liabilities",
            "therapeutic-target-evaluation",
            "toxicity-assessment"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves safety liabilities for a given target Ensembl ID",
            "Returns event and eventId for each liability",
            "Provides biosamples, effects, studies, datasource, and literature details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target for which to retrieve safety liabilities."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target for which to retrieve safety liabilities.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fd347ded-13d7-449d-a7cf-91c082f8b0dd",
        "name": "OpenTargets_get_biological_mouse_models_by_ensemblID",
        "description": "Retrieve biological mouse models by Ensembl ID, including allelic compositions and genetic backgrounds.",
        "detailed_description": "Retrieve biological mouse models, including allelic compositions and genetic backgrounds, for a specific target.",
        "toolType": "API",
        "tags": [
            "allelic-composition",
            "api-integration",
            "biomedical-databases",
            "drug-discovery",
            "ensembl-id-query",
            "functional-genomics",
            "gene-target-validation",
            "genetic-background",
            "genotyping-data",
            "in-vivo-models",
            "mouse-model-retrieval",
            "open-targets",
            "preclinical-research",
            "target-specific-models",
            "translational-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve biological mouse models by Ensembl ID",
            "Fetch allelic compositions",
            "Fetch genetic backgrounds",
            "Provide model identifiers and literature references"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000123456"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f3a8b6e-4c2f-45d7-9f56-1b2e3d4f5a6b",
        "name": "OpenTargets_get_target_genomic_location_by_ensemblID",
        "description": "Fetch genomic coordinates (chromosome, start, end, strand) for a target using its Ensembl ID.",
        "detailed_description": "Retrieve genomic location data for a specific target, including chromosome, start, end, and strand.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chromosomal-position",
            "coordinate-retrieval",
            "ensembl-id-lookup",
            "ensembl-target-lookup",
            "gene-location",
            "genome-position",
            "genomic-coordinates",
            "genomic-location",
            "open-targets-integration",
            "strand-orientation",
            "target-annotation",
            "target-locus-mapping"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve genomic location for a target",
            "Accept an Ensembl ID as input",
            "Return chromosome, start, end, and strand information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target for which to retrieve genomic location information."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target for which to retrieve genomic location information.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f9e74b4-8d3e-4c37-8f2d-6b2e3a9d8c5f",
        "name": "OpenTargets_get_target_subcellular_locations_by_ensemblID",
        "description": "Retrieve subcellular location data for a given target using its Ensembl ID.",
        "detailed_description": "Retrieve information about subcellular locations for a specific target ensemblID.",
        "toolType": "API",
        "tags": [
            "bioinformatics-retrieval",
            "computational-biology",
            "drug-target-discovery",
            "ensembl-id-query",
            "gene-annotation-retrieval",
            "identifier-based-query",
            "molecular-biology",
            "open-targets-api",
            "organelle-localization",
            "protein-localization",
            "proteomics-data",
            "subcellular-data-retrieval",
            "subcellular-localization",
            "target-characterization"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve subcellular locations for a target",
            "Query by Ensembl ID",
            "Return location, source, and ontology terms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The ensemblId of a target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The ensemblId of a target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4c3f9b2-1d2b-4c8a-a4ee-8a9d9f5b2c6f",
        "name": "OpenTargets_get_target_synonyms_by_ensemblID",
        "description": "Retrieve synonyms for a target by its Ensembl ID.",
        "detailed_description": "Retrieve synonyms for specified target, including alternative names and symbols, using given ensemblID.",
        "toolType": "API",
        "tags": [
            "alternative-gene-names",
            "alternative-symbol-retrieval",
            "bioinformatics-annotation",
            "drug-target-discovery",
            "ensembl-id-mapping",
            "gene-identifier-conversion",
            "gene-normalization",
            "gene-synonym-lookup",
            "genomics-data-integration",
            "identifier-translation",
            "open-targets-api",
            "target-alias-extraction",
            "target-synonym-retrieval"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve target ID and approved symbol",
            "Retrieve synonym labels and their sources",
            "Retrieve symbol synonyms and name synonyms",
            "Accepts Ensembl ID as input"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000157764"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1f47b784-c450-4a2e-8c3c-d5a2e9f12b67",
        "name": "OpenTargets_get_target_tractability_by_ensemblID",
        "description": "Retrieve tractability assessments for a target by its Ensembl ID, including modality and values.",
        "detailed_description": "Retrieve tractability assessments, including modality and values, for a specific target ensembl ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "biomedical-data-access",
            "computational-genomics",
            "drug-discovery-research",
            "druggability-score",
            "ensembl-identifier",
            "functional-genomics",
            "omics-retrieval",
            "open-targets-platform",
            "pharmacogenomics",
            "target-modality-data",
            "target-prioritization",
            "target-tractability",
            "tractability-assessment"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query tractability assessments by Ensembl ID",
            "Returns target id and approved symbol",
            "Provides tractability label, modality, and value"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "OpenTargets_get_target_classes_by_ensemblID",
        "description": "Retrieve the target classes associated with a specific Ensembl ID.",
        "detailed_description": "Retrieve the target classes associated with a specific target ensemblID.",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "computational-genomics",
            "drug-target-discovery",
            "ensembl-id",
            "gene-classification",
            "genomic-annotation",
            "omics-integration",
            "open-targets-api",
            "pharmacogenomics",
            "target-annotation",
            "target-class-retrieval",
            "target-ontology"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch target classes for a given Ensembl ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000157764"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fc7cbf50-8d5f-4aeb-918a-9e5a2ba0f7bc",
        "name": "OpenTargets_get_target_enabling_packages_by_ensemblID",
        "description": "Retrieves the Target Enabling Packages (TEP) for a given Ensembl ID.",
        "detailed_description": "Retrieve the Target Enabling Packages (TEP) associated with a specific target ensemblID.",
        "toolType": "API",
        "tags": [
            "bioinformatics-data",
            "drug-discovery-support",
            "ensembl-id-query",
            "functional-genomics",
            "genomic-target-annotation",
            "open-targets-api",
            "target-data-integration",
            "target-enabling-packages",
            "target-prioritization",
            "target-validation",
            "tep-retrieval",
            "therapeutic-target-identification"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Target Enabling Packages (TEP) for a specified Ensembl ID",
            "Fetch target details including id and approvedSymbol via GraphQL"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000157764"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5b0c9f5e-2d3a-4e76-9ce7-1a2b3c4d5e6f",
        "name": "OpenTargets_get_target_interactions_by_ensemblID",
        "description": "Get interaction partners and evidence for a given target by Ensembl ID.",
        "detailed_description": "Retrieve interaction data for a specific target ensemblID, including interaction partners and evidence.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "drug-target-discovery",
            "ensembl-id-query",
            "evidence-aggregation",
            "gene-network-analysis",
            "genomics-data",
            "interaction-network-mapping",
            "interaction-partners",
            "opentargets-api",
            "paginated-results",
            "protein-interaction-data",
            "systems-biology",
            "target-interaction-retrieval",
            "translational-research"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve interaction data for a given Ensembl ID",
            "Support pagination of results via page index and size",
            "Provide interaction evidence including scores and detection methods",
            "Return interaction partner information with approved symbols"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensemblId": {
                "type": "string",
                "description": "The Ensembl ID of the target.",
                "required": true
            },
            "page": {
                "type": "object",
                "description": "Pagination parameters.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensemblId": {
                    "type": "string",
                    "description": "The Ensembl ID of the target.",
                    "required": true
                },
                "page": {
                    "type": "object",
                    "properties": {
                        "index": {
                            "type": "integer",
                            "description": "The index of the page to retrieve.",
                            "required": true
                        },
                        "size": {
                            "type": "integer",
                            "description": "The number of items per page.",
                            "required": true
                        }
                    },
                    "description": "Pagination parameters.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "ensemblId": "ENSG00000139618",
            "page": {
                "index": 0,
                "size": 10
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1e3f6d8-9c2a-4f2b-b5a1-7d9e0c1a2f3b",
        "name": "OpenTargets_get_disease_ancestors_parents_by_efoId",
        "description": "Retrieve disease ancestors and parents using an EFO ID.",
        "detailed_description": "Retrieve the disease ancestors and parents in the ontology using the disease EFO ID.",
        "toolType": "API",
        "tags": [
            "bio-ontology-analysis",
            "disease-classification-mapping",
            "disease-ontology-navigation",
            "disease-term-lineage",
            "efo-ancestor-retrieval",
            "efo-id-lookup",
            "efo-term-ancestry",
            "hierarchical-ontology-query",
            "ontology-parent-extraction",
            "ontology-taxonomy-explorer",
            "open-targets-integration",
            "semantic-web-bioinformatics"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease ancestors in ontology",
            "Retrieve disease parents in ontology"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO:0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e8a6906-63b2-4b33-8d15-1a2f5d4e7c88",
        "name": "OpenTargets_get_disease_descendants_children_by_efoId",
        "description": "Retrieve disease ontology descendants and children using an EFO ID.",
        "detailed_description": "Retrieve the disease descendants and children in the ontology using the disease EFO ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics-tool",
            "biomedical-ontology",
            "computational-biology",
            "disease-classification",
            "disease-descendants-retrieval",
            "disease-ontology-navigation",
            "efo-hierarchy-explorer",
            "efo-id-query",
            "hierarchical-disease-mapping",
            "ontology-based-search",
            "ontology-children-fetch",
            "open-targets-integration"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease descendants by EFO ID",
            "Retrieve disease children by EFO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000311"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e5f7c4a-1b2c-4d5e-9f01-23456789abcd",
        "name": "OpenTargets_get_disease_locations_by_efoId",
        "description": "Fetches direct and indirect location terms and IDs for a disease using its EFO ID.",
        "detailed_description": "Retrieve the disease's direct location and indirect location disease terms and IDs using the disease EFO ID.",
        "toolType": "API",
        "tags": [
            "anatomical-annotation",
            "bioinformatics",
            "computational-biology",
            "direct-location",
            "disease-annotation",
            "disease-location",
            "disease-ontology-mapping",
            "efo-id-retrieval",
            "efo-ontology-query",
            "indirect-location",
            "open-targets-api",
            "semantic-integration"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves direct and indirect disease location IDs",
            "Provides location terms (id and name)",
            "Supports disease lookup by EFO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d1eaf752-3b8a-4c9b-9571-2e1b2d3f4a5b",
        "name": "cancer_gene_census_disease_target_score",
        "description": "Extract disease-target association scores from Cancer Gene Census.",
        "detailed_description": "Extract disease-target association scores from Cancer Gene Census. This provides curated cancer gene data.",
        "toolType": "API",
        "tags": [
            "biomedical-data-extraction",
            "cancer-gene-census",
            "cancer-genomics",
            "cancer-research",
            "curated-cancer-genes",
            "disease-target-score",
            "efo-id-filtering",
            "experimental-factor-ontology-query",
            "gene-disease-association",
            "oncology-bioinformatics",
            "paginated-results",
            "target-prioritization"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "Cancer Gene Census",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract disease-target association scores from Cancer Gene Census",
            "Provide curated cancer gene data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e28d9f4a-b711-4f0e-b9c3-1b2a34c5d6e7",
        "name": "cancer_biomarkers_disease_target_score",
        "description": "Retrieves disease-target association scores from cancer biomarker data",
        "detailed_description": "Extract disease-target association scores from cancer biomarkers data. This includes known cancer biomarkers.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "biomedical-data-mining",
            "cancer-biomarker-extraction",
            "cancer-genomics",
            "clinical-research-support",
            "disease-target-association-score",
            "efo-disease-query",
            "gene-disease-linking",
            "molecular-biomarker-analysis",
            "molecular-diagnostics",
            "oncology-biomarkers",
            "precision-oncology",
            "target-prioritization"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "cancer-biomarker",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract disease-target association scores",
            "Supports pagination via pageSize",
            "Returns target approvedSymbol, id, and datasourceScores"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9b1deb4d-3b0c-4d34-9536-ccd832de0102",
        "name": "europepmc_disease_target_score",
        "description": "Retrieves disease-target association scores from Europe PMC literature.",
        "detailed_description": "Extract disease-target association scores from Europe PMC literature. This includes literature-based evidence.",
        "toolType": "API",
        "tags": [
            "biomedical-research",
            "disease-gene-scoring",
            "disease-target-association",
            "drug-target-identification",
            "efo-id-extraction",
            "europe-pmc-mining",
            "experimental-factor-ontology",
            "literature-derived-associations",
            "literature-evidence-scoring",
            "paginated-json-output",
            "target-discovery",
            "text-mining-bioinformatics"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "Europe PMC",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extracts disease-target association scores from Europe PMC literature",
            "Supports pagination through pageSize parameter",
            "Provides literature-based evidence for associations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2a4f2c6e-7b90-4f1a-a2e9-3d5bfc5a9d47",
        "name": "expression_atlas_disease_target_score",
        "description": "Provides disease-target association scores from Expression Atlas gene expression data.",
        "detailed_description": "Extract disease-target association scores from Expression Atlas. This provides gene expression data.",
        "toolType": "API",
        "tags": [
            "api-data-retrieval",
            "association-scoring",
            "bioinformatics",
            "computational-biology",
            "disease-target-association",
            "efo-id-query",
            "experimental-factor-ontology",
            "expression-atlas",
            "gene-expression-scores",
            "molecular-disease-analysis",
            "omics-data-extraction",
            "quantitative-expression",
            "target-prioritization",
            "transcriptomic-data"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "Expression Atlas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease-target association scores",
            "Query by EFO disease ID",
            "Support pagination via pageSize parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d17b4772-5f23-4b57-b8a9-2a8f7a3c9021",
        "name": "genomics_england_disease_target_score",
        "description": "Retrieve disease-target association scores from Genomics England clinical genomics data.",
        "detailed_description": "Extract disease-target association scores from Genomics England data. This includes clinical genomics evidence.",
        "toolType": "API",
        "tags": [
            "association-scoring",
            "bioinformatics",
            "clinical-genomics-evidence",
            "computational-genomics",
            "disease-target-association",
            "disease-target-scoring",
            "efo-id-query",
            "genomics-england-data",
            "paginated-results",
            "precision-medicine",
            "rare-disease-research",
            "target-identification",
            "target-prioritization"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "Genomics England",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract disease-target association scores",
            "Supports pagination of results",
            "Provides Genomics England clinical evidence scores"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f1642e1-2c3b-4f5a-8d6e-7c9b1a2b3c4d",
        "name": "reactome_disease_target_score",
        "description": "Retrieves disease-target association scores from Reactome pathway data.",
        "detailed_description": "Extract disease-target association scores from Reactome pathway data. This includes pathway-based evidence.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "biomedical-data-integration",
            "disease-association-extraction",
            "disease-target-scoring",
            "drug-discovery-support",
            "efo-id-integration",
            "genetic-association-scoring",
            "pathway-enrichment-analysis",
            "pathway-evidence-scoring",
            "reactome-pathway-mining",
            "target-prioritization-tool",
            "translational-research"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "Reactome",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease-target association scores",
            "Supports pagination via pageSize and index",
            "Fetches scores based on Reactome pathway evidence"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "DrugSafetyAnalyzer",
        "description": "Performs comprehensive drug safety analysis integrating adverse events, literature, and molecular data",
        "detailed_description": "Comprehensive drug safety analysis combining adverse event data, literature review, and molecular information",
        "toolType": "Compositional Tool",
        "tags": [
            "adverse-event-analysis",
            "drug-safety-analysis",
            "drug-safety-reporting",
            "literature-mining",
            "molecular-safety-profiling",
            "patient-demographics-filter",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "postmarketing-surveillance",
            "risk-benefit-assessment",
            "safety-data-integration",
            "serious-adverse-events",
            "sex-specific-analysis",
            "toxicovigilance"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze adverse event data for a given drug",
            "Search scientific literature for drug safety information",
            "Retrieve molecular properties of a drug",
            "Filter results by patient sex",
            "Focus analysis on serious adverse events"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "Name of the drug to analyze"
            },
            "patient_sex": {
                "type": "string",
                "description": "Filter by patient sex (optional)"
            },
            "serious_events_only": {
                "type": "boolean",
                "description": "Focus only on serious adverse events"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "Name of the drug to analyze"
                },
                "patient_sex": {
                    "type": "string",
                    "enum": [
                        "Male",
                        "Female"
                    ],
                    "description": "Filter by patient sex (optional)"
                },
                "serious_events_only": {
                    "type": "boolean",
                    "description": "Focus only on serious adverse events",
                    "default": false
                }
            },
            "required": [
                "drug_name"
            ]
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "patient_sex": "Female",
            "serious_events_only": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "ToolDescriptionOptimizer",
        "description": "Optimizes tool and parameter descriptions by generating test cases, executing and analyzing them, and suggesting improvements, with optional report saving.",
        "detailed_description": "Optimizes a tool's description and parameter descriptions by generating test cases, executing them, analyzing the results, and suggesting improved descriptions for both the tool and its arguments. Optionally saves a comprehensive optimization report to a file without overwriting the original.",
        "toolType": "Compositional Tool",
        "tags": [
            "api-documentation",
            "description-optimization",
            "developer-tooling",
            "documentation-refinement",
            "iterative-optimization",
            "nlp-automation",
            "optimization-reporting",
            "parameter-documentation",
            "quality-assessment",
            "report-saving",
            "result-analysis",
            "test-case-generation"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Optimize tool descriptions",
            "Generate test cases",
            "Execute and analyze test case results",
            "Suggest improved descriptions for tool and arguments",
            "Save optimization report without overwriting original"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "object",
                "description": "The full configuration of the tool to optimize."
            },
            "save_to_file": {
                "type": "boolean",
                "description": "If true, save the optimized description to a file (do not overwrite the original)."
            },
            "output_file": {
                "type": "string",
                "description": "Optional file path to save the optimized description. If not provided, use '<tool_name>_optimized_description.txt'."
            },
            "max_iterations": {
                "type": "integer",
                "description": "Maximum number of optimization rounds to perform."
            },
            "satisfaction_threshold": {
                "type": "number",
                "description": "Quality score threshold (1-10) to consider optimization satisfactory."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "object",
                    "description": "The full configuration of the tool to optimize."
                },
                "save_to_file": {
                    "type": "boolean",
                    "description": "If true, save the optimized description to a file (do not overwrite the original).",
                    "default": false
                },
                "output_file": {
                    "type": "string",
                    "description": "Optional file path to save the optimized description. If not provided, use '<tool_name>_optimized_description.txt'."
                },
                "max_iterations": {
                    "type": "integer",
                    "description": "Maximum number of optimization rounds to perform.",
                    "default": 3
                },
                "satisfaction_threshold": {
                    "type": "number",
                    "description": "Quality score threshold (1-10) to consider optimization satisfactory.",
                    "default": 8
                }
            },
            "required": [
                "tool_config"
            ]
        },
        "exampleInput": {
            "tool_config": {
                "type": "object",
                "name": "ExampleTool",
                "description": "An example tool configuration."
            },
            "save_to_file": true,
            "output_file": "example_optimized_description.txt",
            "max_iterations": 2,
            "satisfaction_threshold": 9
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "ToolDiscover",
        "description": "Automatically generates and refines new ToolUniverse-compliant tools from a short description.",
        "detailed_description": "Generates new ToolUniverse-compliant tools based on short descriptions through an intelligent discovery and refinement process. Automatically determines the optimal tool type and category, discovers similar existing tools, generates initial specifications, and iteratively refines the tool configuration using agentic optimization tools until it meets quality standards.",
        "toolType": "Compositional Tool",
        "tags": [
            "agentic-optimization",
            "automated-refinement",
            "category-inference",
            "config-automation",
            "iterative-improvement",
            "meta-tool-composition",
            "package-rest-xml-tooling",
            "specification-generation",
            "tool-discovery",
            "tool-generation",
            "tool-universe-compliance",
            "type-classification"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Determines optimal tool type and category",
            "Discovers similar existing tools",
            "Generates initial tool specifications",
            "Iteratively refines tool configurations using agentic optimization",
            "Optionally saves generated configurations to file"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_description": {
                "type": "string",
                "description": "Short description of the desired tool functionality and purpose. Tool Discover will automatically analyze this to determine the optimal tool type (PackageTool, RESTTool, XMLTool, or AgenticTool) and appropriate category."
            },
            "max_iterations": {
                "type": "integer",
                "description": "Maximum number of refinement iterations to perform."
            },
            "save_to_file": {
                "type": "boolean",
                "description": "Whether to save the generated tool configuration and report to a file."
            },
            "output_file": {
                "type": "string",
                "description": "Optional file path to save the generated tool. If not provided, uses auto-generated filename."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_description": {
                    "type": "string",
                    "description": "Short description of the desired tool functionality and purpose. Tool Discover will automatically analyze this to determine the optimal tool type (PackageTool, RESTTool, XMLTool, or AgenticTool) and appropriate category."
                },
                "max_iterations": {
                    "type": "integer",
                    "description": "Maximum number of refinement iterations to perform.",
                    "default": 20
                },
                "save_to_file": {
                    "type": "boolean",
                    "description": "Whether to save the generated tool configuration and report to a file.",
                    "default": true
                },
                "output_file": {
                    "type": "string",
                    "description": "Optional file path to save the generated tool. If not provided, uses auto-generated filename."
                }
            },
            "required": [
                "tool_description"
            ]
        },
        "exampleInput": {
            "tool_description": "Generate a PackageTool for converting XML datasets to pandas DataFrames.",
            "max_iterations": 10,
            "save_to_file": true,
            "output_file": "generated_tool.json"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c5aaf5b9-9c12-4e17-8ed7-123456abcdef",
        "name": "LiteratureSearchTool",
        "description": "Searches multiple literature databases and generates AI-powered summaries of research findings",
        "detailed_description": "Comprehensive literature search and summary tool that searches multiple databases (EuropePMC, OpenAlex, PubTator) and generates AI-powered summaries of research findings",
        "toolType": "Compositional Tool",
        "tags": [
            "academic-research-tool",
            "ai-summary-generation",
            "bibliographic-analysis",
            "evidence-synthesis",
            "literature-review-assistant",
            "literature-search",
            "multi-database-search",
            "open-access-databases",
            "publication-mining",
            "research-discovery",
            "research-summarization",
            "semantic-text-mining"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search literature databases including EuropePMC, OpenAlex, and PubTator",
            "Generate AI-powered summaries of research findings"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "research_topic": {
                "type": "string",
                "description": "The research topic or query to search for in the literature"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "research_topic": {
                    "type": "string",
                    "description": "The research topic or query to search for in the literature"
                }
            },
            "required": [
                "research_topic"
            ]
        },
        "exampleInput": {
            "research_topic": "cancer immunotherapy"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b7f8c9a0-d1e2-3f4a-5b6c-7d8e9f0a1b2c",
        "name": "ComprehensiveDrugDiscoveryPipeline",
        "description": "An end-to-end pipeline for drug discovery, covering target identification, lead discovery, ADMET screening, safety assessment, and literature validation.",
        "detailed_description": "Complete end-to-end drug discovery workflow from disease to optimized candidates. Identifies targets, discovers lead compounds, screens for ADMET properties, assesses safety, and validates with literature.",
        "toolType": "Compositional Tool",
        "tags": [
            "admet-screening",
            "cheminformatics-workflow",
            "drug-discovery-pipeline",
            "efo-disease-id-input",
            "end-to-end-drug-development",
            "lead-compound-discovery",
            "lead-optimization",
            "literature-validation",
            "pharmacokinetics-analysis",
            "safety-assessment",
            "small-molecule-drug-design",
            "target-identification",
            "target-selection"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Identifies disease-associated targets",
            "Discovers lead compounds",
            "Screens for BBB penetrance",
            "Predicts bioavailability",
            "Predicts toxicity",
            "Retrieves compound properties",
            "Validates findings with literature"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disease_efo_id": {
                "type": "string",
                "description": "The EFO ID of the disease for drug discovery (e.g., 'EFO_0001074' for Alzheimer's disease)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disease_efo_id": {
                    "type": "string",
                    "description": "The EFO ID of the disease for drug discovery (e.g., 'EFO_0001074' for Alzheimer's disease)"
                }
            },
            "required": [
                "disease_efo_id"
            ]
        },
        "exampleInput": {
            "disease_efo_id": "EFO_0001074"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d",
        "name": "BiomarkerDiscoveryWorkflow",
        "description": "Workflow to discover and validate disease biomarkers using literature review, expression data, pathway enrichment, and clinical validation.",
        "detailed_description": "Discover and validate biomarkers for a specific disease condition using literature analysis, expression data, pathway enrichment, and clinical validation.",
        "toolType": "Compositional Tool",
        "tags": [
            "bioinformatics-pipeline",
            "biomarker-discovery",
            "biomarker-validation",
            "clinical-biomarker-validation",
            "disease-specific-markers",
            "expression-data-analysis",
            "literature-mining",
            "molecular-diagnostics",
            "omics-data-integration",
            "pathway-enrichment-analysis",
            "precision-medicine-workflow",
            "transcriptomic-analysis"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform literature analysis to identify biomarker candidates",
            "Analyze expression data for gene biomarkers",
            "Conduct pathway enrichment analysis",
            "Validate biomarkers with clinical validation techniques"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disease_condition": {
                "type": "string",
                "description": "The disease condition to discover biomarkers for (e.g., 'breast cancer', 'Alzheimer's disease')"
            },
            "sample_type": {
                "type": "string",
                "description": "The type of sample to analyze (e.g., 'blood', 'tissue', 'plasma')",
                "default": "blood"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disease_condition": {
                    "type": "string",
                    "description": "The disease condition to discover biomarkers for (e.g., 'breast cancer', 'Alzheimer's disease')"
                },
                "sample_type": {
                    "type": "string",
                    "description": "The type of sample to analyze (e.g., 'blood', 'tissue', 'plasma')",
                    "default": "blood"
                }
            },
            "required": [
                "disease_condition"
            ]
        },
        "exampleInput": {
            "disease_condition": "breast cancer",
            "sample_type": "tissue"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7af3bcd-8cdd-4bd2-9818-0da0b4321ef1",
        "name": "ToolMetadataGenerationPipeline",
        "description": "Generates standardized metadata for multiple tool configurations using ToolMetadataGenerator, LabelGenerator, and ToolMetadataStandardizer",
        "detailed_description": "Generates standardized metadata for a batch of ToolUniverse tool configurations by calling ToolMetadataGenerator, LabelGenerator, and ToolMetadataStandardizer for sources and tags.",
        "toolType": "Compositional Tool",
        "tags": [
            "batch-metadata-processing",
            "catalog-management",
            "configuration-automation",
            "data-processing-pipeline",
            "json-config-parser",
            "label-generation",
            "metadata-generation",
            "metadata-harmonization",
            "metadata-standardization",
            "software-inventory",
            "source-mapping",
            "tag-normalization",
            "taxonomy-mapping",
            "tool-configuration-extractor"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generate metadata for multiple tool configurations",
            "Invoke ToolMetadataGenerator",
            "Invoke LabelGenerator",
            "Invoke ToolMetadataStandardizer"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_configs": {
                "type": "array",
                "description": "List of raw tool configuration JSON objects to extract and standardize metadata for"
            },
            "tool_type_mappings": {
                "type": "object",
                "description": "Mapping of simplified toolType (keys) to lists of tool 'type' values belonging to each simplified category (e.g., {'Databases': ['XMLTool']})"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_configs": {
                    "type": "array",
                    "description": "List of raw tool configuration JSON objects to extract and standardize metadata for",
                    "items": {
                        "type": "object"
                    }
                },
                "tool_type_mappings": {
                    "type": "object",
                    "description": "Mapping of simplified toolType (keys) to lists of tool 'type' values belonging to each simplified category (e.g., {'Databases': ['XMLTool']})",
                    "default": {}
                }
            },
            "required": [
                "tool_configs"
            ]
        },
        "exampleInput": {
            "tool_configs": [
                {
                    "type": "XMLTool",
                    "name": "ExampleXMLTool",
                    "description": "Parses XML files",
                    "parameter": {}
                }
            ],
            "tool_type_mappings": {
                "Database": [
                    "XMLTool"
                ]
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "mcp_client_example",
        "description": "Client for interacting with an MCP server, supporting all MCP operations (tools, resources, prompts).",
        "detailed_description": "Example MCP client to connect to an existing MCP server. Supports all MCP operations including tools, resources, and prompts.",
        "toolType": "API",
        "tags": [
            "api-client",
            "command-dispatch",
            "distributed-systems",
            "json-parameterization",
            "mcp-client",
            "mcp-protocol",
            "prompt-retrieval",
            "remote-tool-invocation",
            "resource-management",
            "server-integration",
            "tool-orchestration",
            "workflow-automation"
        ],
        "category": "MCPClientTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Connect to an MCP server via HTTP",
            "List available tools",
            "Call a specified tool",
            "List resources on the MCP server",
            "Read a specified resource",
            "List prompts",
            "Get a specific prompt"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "operation": {
                "type": "string",
                "description": "The MCP operation to perform"
            },
            "tool_name": {
                "type": "string",
                "description": "Name of the tool to call (required for call_tool operation)"
            },
            "tool_arguments": {
                "type": "object",
                "description": "Arguments to pass to the tool (for call_tool operation)"
            },
            "uri": {
                "type": "string",
                "description": "Resource URI (required for read_resource operation)"
            },
            "prompt_name": {
                "type": "string",
                "description": "Name of the prompt to get (required for get_prompt operation)"
            },
            "prompt_arguments": {
                "type": "object",
                "description": "Arguments to pass to the prompt (for get_prompt operation)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "list_tools",
                        "call_tool",
                        "list_resources",
                        "read_resource",
                        "list_prompts",
                        "get_prompt"
                    ],
                    "description": "The MCP operation to perform"
                },
                "tool_name": {
                    "type": "string",
                    "description": "Name of the tool to call (required for call_tool operation)"
                },
                "tool_arguments": {
                    "type": "object",
                    "description": "Arguments to pass to the tool (for call_tool operation)"
                },
                "uri": {
                    "type": "string",
                    "description": "Resource URI (required for read_resource operation)"
                },
                "prompt_name": {
                    "type": "string",
                    "description": "Name of the prompt to get (required for get_prompt operation)"
                },
                "prompt_arguments": {
                    "type": "object",
                    "description": "Arguments to pass to the prompt (for get_prompt operation)"
                }
            },
            "required": [
                "operation"
            ]
        },
        "exampleInput": {
            "operation": "list_tools",
            "tool_name": "example_tool",
            "tool_arguments": {
                "arg1": "value1"
            },
            "uri": "http://localhost:8000/resource/1",
            "prompt_name": "example_prompt",
            "prompt_arguments": {
                "key": "value"
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7a9c7a2a-65f5-4fd9-8eff-3e4d1c7156b2",
        "name": "mcp_mock_calculator",
        "description": "A simple testing calculator tool",
        "detailed_description": "A simple calculator tool for testing",
        "toolType": "API",
        "tags": [
            "addition-subtraction-multiplication-division",
            "api-based-calculation",
            "arithmetic-operations",
            "computational-math",
            "integration-testing",
            "mcp-proxy-calculator",
            "mock-calculation-service",
            "numeric-computation",
            "numeric-input-output",
            "operation-parameterization",
            "simple-calculator",
            "test-calculator-api"
        ],
        "category": "MCPProxyTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Perform addition",
            "Perform subtraction",
            "Perform multiplication",
            "Perform division"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "operation": {
                "type": "string",
                "description": "The mathematical operation to perform"
            },
            "a": {
                "type": "number",
                "description": "First number"
            },
            "b": {
                "type": "number",
                "description": "Second number"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "add",
                        "subtract",
                        "multiply",
                        "divide"
                    ],
                    "description": "The mathematical operation to perform"
                },
                "a": {
                    "type": "number",
                    "description": "First number"
                },
                "b": {
                    "type": "number",
                    "description": "Second number"
                }
            },
            "required": [
                "operation",
                "a",
                "b"
            ]
        },
        "exampleInput": {
            "operation": "add",
            "a": 5,
            "b": 3
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "mcp_mock_greeter",
        "description": "Simple greeting tool",
        "detailed_description": "A simple greeting tool",
        "toolType": "API",
        "tags": [
            "conversation-starter",
            "greeting-generator",
            "internationalization",
            "language-selection",
            "localization",
            "multilingual-greeting",
            "name-based-greeting",
            "natural-language-processing",
            "personalized-greetings",
            "string-parameter",
            "text-generation",
            "user-onboarding"
        ],
        "category": "MCPProxyTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generates a greeting message",
            "Supports multiple languages (en, es, fr)",
            "Greets a user by name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Name to greet"
            },
            "language": {
                "type": "string",
                "description": "Language for greeting"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name to greet"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "en",
                        "es",
                        "fr"
                    ],
                    "description": "Language for greeting",
                    "default": "en"
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Alice",
            "language": "en"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4e7b9c72-5c4d-4e97-a0bd-2f6f643c9af1",
        "name": "mcp_auto_loader_server1",
        "description": "Discovers and loads tools from MCP Server 1, registering them or providing configurations.",
        "detailed_description": "Automatically discover and load all tools from MCP Server 1. Can register discovered tools as individual ToolUniverse tools or provide tool configurations.",
        "toolType": "MCP",
        "tags": [
            "api-based-loading",
            "auto-loader",
            "configuration-export",
            "devops-automation",
            "dynamic-tool-registration",
            "mcp-server-integration",
            "pipeline-initialization",
            "plugin-management",
            "remote-tool-loading",
            "server-side-integration",
            "service-discovery",
            "tool-discovery",
            "tool-universe-registration"
        ],
        "category": "MCPAutoLoaderTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Discover tools from MCP Server 1",
            "Load and register discovered tools",
            "Provide tool configurations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "server_url": {
                "type": "string",
                "description": "URL of the MCP server to load tools from"
            },
            "tool_prefix": {
                "type": "string",
                "description": "Prefix to apply to loaded tool names"
            }
        },
        "inputSchema": {
            "server_url": "http://localhost:8000",
            "tool_prefix": "mcp_s1_"
        },
        "exampleInput": {
            "server_url": "http://localhost:8000",
            "tool_prefix": "mcp_s1_"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2f1e3bc-4a73-4c22-b7f6-9a2e1f5838be",
        "name": "FDA_get_child_safety_info_by_drug_name",
        "description": "Retrieve child safety information for a drug given its name.",
        "detailed_description": "Retrieve child safety information for a specific drug based on its name.",
        "toolType": "API",
        "tags": [
            "child-safety-information",
            "drug-label-retrieval",
            "drug-name-query",
            "drug-safety-data",
            "drug-safety-profile",
            "fda-drug-label",
            "fda-pediatric-label",
            "medicine-safety",
            "name-based-lookup",
            "pediatric-drug-safety",
            "pediatric-pharmacovigilance",
            "pharmacovigilance",
            "regulatory-drug-information",
            "safety-warnings"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by brand or generic name",
            "Retrieve child safety warnings aimed at keeping medicines out of reach of children",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "ibuprofen",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "FDA_get_drug_name_by_labor_and_delivery_info",
        "description": "Retrieve drug names based on labor or delivery usage information.",
        "detailed_description": "Retrieve the drug name based on information about the drug\u2019s use during labor or delivery.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "drug-information-retrieval",
            "drug-name-retrieval",
            "fda-drug-label-query",
            "fda-label-database",
            "labor-delivery-usage",
            "maternal-health-drugs",
            "medical-informatics",
            "obstetric-pharmacology",
            "pagination-support",
            "perinatal-pharmacology",
            "pregnancy-medication-search",
            "regulatory-affairs",
            "string-input-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs based on labor and delivery information",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "labor_and_delivery_info": {
                "type": "string",
                "description": "Information about the drug\u2019s use during labor or delivery."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "labor_and_delivery_info": {
                    "type": "string",
                    "description": "Information about the drug\u2019s use during labor or delivery.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "labor_and_delivery_info": "Used to induce labor in pregnant women at term",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f5e2c9a-95b2-4a6a-8c3e-1f2b3c4d5e6f",
        "name": "FDA_get_labor_and_delivery_info_by_drug_name",
        "description": "Get labor and delivery information for a drug by its name.",
        "detailed_description": "Retrieve information about the drug\u2019s use during labor or delivery based on the drug name.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "clinical-decision-support",
            "drug-label-retrieval",
            "drug-safety-data",
            "fda-drug-label",
            "labor-and-delivery-information",
            "maternal-fetal-medicine",
            "obstetric-pharmacology",
            "peripartum-safety",
            "pharmacovigilance",
            "pregnancy-drug-usage",
            "regulatory-science",
            "string-parameter-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "OpenFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve labor and delivery information for a drug by name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5f8b47b-551a-4d13-9b8f-efc1a23d4567",
        "name": "FDA_get_drug_names_by_lab_tests",
        "description": "Retrieve drug names using laboratory test information.",
        "detailed_description": "Retrieve drug names based on laboratory tests information.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-name-retrieval",
            "drug-search-by-lab-test",
            "fda-api-endpoint",
            "fda-drug-label",
            "healthcare-data-integration",
            "indication-based-filter",
            "integer-parameter-input",
            "json-response",
            "laboratory-data-query",
            "medical-informatics",
            "pagination-support",
            "pharmacovigilance-support",
            "string-parameter-input",
            "structured-data-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by lab test information",
            "Filter results by drug indication",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "lab_test_info": {
                "type": "string",
                "description": "Information related to laboratory tests."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "lab_test_info": {
                    "type": "string",
                    "description": "Information related to laboratory tests.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "lab_test_info": "Blood glucose test results indicating high glucose levels",
            "indication": "Diabetes mellitus",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f1a6a4-8e9b-4c2a-9d1e-2f6b7d4b123c",
        "name": "FDA_get_lab_tests_by_drug_name",
        "description": "Retrieve laboratory test information by drug name",
        "detailed_description": "Retrieve laboratory tests information based on drug names.",
        "toolType": "API",
        "tags": [
            "adverse-event-monitoring",
            "api-data-query",
            "clinical-laboratory-information",
            "diagnostic-test-profiles",
            "drug-laboratory-data",
            "drug-safety-monitoring",
            "fda-lab-tests",
            "json-response",
            "lab-test-retrieval",
            "limit-skip-pagination",
            "pharmacovigilance",
            "string-input-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve laboratory tests information based on drug name",
            "Supports pagination with limit and skip parameters",
            "Searches using brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f2d3c4e7-8a9b-4c1d-2e5f-3a4b5c6d7e8f",
        "name": "FDA_get_mechanism_of_action_by_drug_name",
        "description": "Retrieve the mechanism of action for a specified drug.",
        "detailed_description": "Retrieve the mechanism of action information for a specific drug.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-database-query",
            "drug-information-retrieval",
            "drug-mechanism",
            "fda-drug-info",
            "fda-label-data",
            "healthcare-informatics",
            "mechanism-of-action",
            "pharmacodynamics",
            "pharmacological-profiling",
            "regulatory-science",
            "therapeutic-mechanism"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search mechanism of action by drug name",
            "Return mechanism_of_action fields",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b241101-e2bb-4255-8caf-4136c566a962",
        "name": "FDA_get_drug_names_by_mechanism_of_action",
        "description": "Retrieve drug names based on mechanism of action.",
        "detailed_description": "Retrieve drug names based on the specified mechanism of action information.",
        "toolType": "API",
        "tags": [
            "biomedical-informatics",
            "clinical-indication-filter",
            "drug-name-retrieval",
            "fda-drug-labels",
            "indication-based-search",
            "json-api-access",
            "mechanism-of-action-search",
            "moa-based-filtering",
            "pagination-parameters",
            "pharmaceutical-database-query",
            "pharmacological-classification",
            "pharmacovigilance-research"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by mechanism of action",
            "Filter results by indication",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "mechanism_info": {
                "type": "string",
                "description": "Information related to the desired mechanism of action."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "mechanism_info": {
                    "type": "string",
                    "description": "Information related to the desired mechanism of action.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "mechanism_info": "protein kinase inhibitor",
            "indication": "cancer",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a5f1c3e-9f2b-4d8c-b7e0-123456789abc",
        "name": "FDA_get_drug_name_by_microbiology",
        "description": "Retrieve drug names based on microbiology information.",
        "detailed_description": "Retrieve the drug name based on microbiology field information.",
        "toolType": "API",
        "tags": [
            "antibiotic-discovery-support",
            "antibiotic-name-query",
            "antimicrobial-agent-lookup",
            "clinical-microbiology-research",
            "database-pagination",
            "drug-name-retrieval",
            "fda-drug-labels",
            "fda-label-data",
            "microbiology-based-search",
            "pathogen-drug-mapping",
            "pharmacological-data-access",
            "string-input-processing"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search by microbiology field information",
            "Return brand and generic drug names",
            "Support pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "microbiology_info": {
                "type": "string",
                "description": "Information related to the microbiology field."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "microbiology_info": {
                    "type": "string",
                    "description": "Information related to the microbiology field.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "microbiology_info": "Gram-negative bacterial resistance patterns",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "FDA_get_microbiology_info_by_drug_name",
        "description": "Retrieve microbiology information based on drug name.",
        "detailed_description": "Retrieve microbiology information based on the drug name.",
        "toolType": "API",
        "tags": [
            "antibiotic-resistance",
            "antimicrobial-resistance",
            "bacterial-resistance-data",
            "clinical-microbiology",
            "drug-information-retrieval",
            "drug-name-query",
            "drug-susceptibility",
            "fda-drug-label",
            "microbiology-data",
            "paginated-results",
            "pharmacology-database",
            "susceptibility-testing"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve microbiology information by drug name",
            "Searches on openfda.brand_name and openfda.generic_name",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4c9f1b3-8e2a-4c50-bf1d-6f8a7e2c1b09",
        "name": "FDA_get_drug_names_by_nonclinical_toxicology_info",
        "description": "Get drug names using nonclinical toxicology information.",
        "detailed_description": "Retrieve drug names based on nonclinical toxicology information.",
        "toolType": "API",
        "tags": [
            "drug-discovery-support",
            "drug-name-retrieval",
            "drug-safety-evaluation",
            "fdadruglabel-query",
            "indication-based-retrieval",
            "nonclinical-toxicology",
            "pharmaceutical-development",
            "pharmacotoxicology",
            "preclinical-safety-assessment",
            "preclinical-study-data",
            "toxicology-data",
            "toxicology-search"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by nonclinical toxicology information",
            "Filter results by drug indication",
            "Support pagination with limit and skip",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "toxicology_info": {
                "type": "string",
                "description": "Information about toxicology in non-human subjects."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "toxicology_info": {
                    "type": "string",
                    "description": "Information about toxicology in non-human subjects.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "toxicology_info": "hepatotoxicity observed in rat studies",
            "indication": "treatment of hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5d1f2e90-3b1e-4c7a-9d20-2f4b7e3a8c5f",
        "name": "FDA_get_nonclinical_toxicology_info_by_drug_name",
        "description": "Get nonclinical toxicology data for a specified drug by name.",
        "detailed_description": "Retrieve nonclinical toxicology information based on drug names.",
        "toolType": "API",
        "tags": [
            "drug-development-support",
            "drug-name-query",
            "drug-safety-data",
            "fda-drug-label",
            "integer-parameters",
            "json-output",
            "nonclinical-toxicology",
            "pagination-support",
            "pharmacology-data",
            "preclinical-research",
            "preclinical-toxicology",
            "regulatory-information",
            "regulatory-science",
            "string-input",
            "toxicological-assessment"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "OpenFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search nonclinical toxicology information by drug name",
            "Support search by brand or generic name",
            "Limit and paginate results using limit and skip parameters",
            "Return nonclinical toxicology fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Ibuprofen",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "cb3e7e2d-7a4b-4e8c-9d98-5f9f7fbbd508",
        "name": "FDA_get_drug_names_by_nonteratogenic_effects",
        "description": "Gets drug names associated with specified nonteratogenic effects.",
        "detailed_description": "Retrieve drug names based on the presence of nonteratogenic effects information.",
        "toolType": "API",
        "tags": [
            "drug-name-retrieval",
            "drug-safety-profiling",
            "fda-drug-label",
            "fetal-safety",
            "indication-based-query",
            "nonteratogenic-effects",
            "pagination-support",
            "pharmacovigilance",
            "pregnancy-safe-drugs",
            "regulatory-science",
            "safety-pharmacology",
            "teratology-analysis"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA-drug-label",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by nonteratogenic effects",
            "Filter by indication",
            "Paginate results with limit and skip",
            "Returns brand and generic names of drugs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nonteratogenic_effects": {
                "type": "string",
                "description": "Information about the drug\u2019s nonteratogenic effects."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nonteratogenic_effects": {
                    "type": "string",
                    "description": "Information about the drug\u2019s nonteratogenic effects.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "nonteratogenic_effects": "liver enzyme elevation",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f2e1d4c-5b6a-7c8d-9e0f-1a2b3c4d5e6f",
        "name": "FDA_get_nonteratogenic_effects_by_drug_name",
        "description": "Retrieve nonteratogenic effects for a given drug name.",
        "detailed_description": "Retrieve information about nonteratogenic effects based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-effect-data",
            "api-pagination",
            "biomedical-api",
            "clinical-pharmacology",
            "developmental-toxicology",
            "drug-name-query",
            "drug-safety-assessment",
            "fda-drug-label",
            "nonteratogenic-effects",
            "pharmacovigilance",
            "pregnancy-risk-assessment",
            "toxicological-database"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve nonteratogenic effects for a given drug name",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_info_for_nursing_mothers",
        "description": "Retrieve drug names based on nursing mother information.",
        "detailed_description": "Retrieve drug names based on information related to nursing mothers.",
        "toolType": "API",
        "tags": [
            "FDA-drug-label",
            "breast-milk-excretion",
            "drug-name-retrieval",
            "drug-safety-assessment",
            "human-milk-excretion-data",
            "indication-based-search",
            "lactation-drug-safety",
            "maternal-child-health",
            "nursing-infant-risk",
            "paginated-api-query",
            "pharmacokinetics",
            "pharmacology-database"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on nursing mother information",
            "Filter by drug indication",
            "Paginate results with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "nursing_mothers_info": {
                "type": "string",
                "description": "Information about excretion of the drug in human milk and effects on the nursing infant."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "nursing_mothers_info": {
                    "type": "string",
                    "description": "Information about excretion of the drug in human milk and effects on the nursing infant.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "nursing_mothers_info": "Drug excretion in human milk is minimal with no adverse infant effects",
            "indication": "Pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8e9d6b-1c2d-4a5b-8c9e-0b1a2c3d4e5f",
        "name": "FDA_get_info_for_nursing_mothers_by_drug_name",
        "description": "Get nursing mothers information for a given drug.",
        "detailed_description": "Retrieve information about nursing mothers for a specific drug.",
        "toolType": "API",
        "tags": [
            "breastfeeding-safety-data",
            "clinical-pharmacology",
            "drug-info-lookup",
            "drug-lactation-guidance",
            "drug-safety-evaluation",
            "fda-drug-label",
            "maternal-pharmacology",
            "nursing-mothers-lactation-info",
            "pagination-support",
            "pharmacokinetic-profile",
            "regulatory-compliance",
            "rest-api-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for nursing mothers information by drug name",
            "Supports limit and skip parameters for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b0c9b8-1a3f-4f2c-8d2d-9a7f6d5c4b3a",
        "name": "FDA_get_drug_name_by_other_safety_info",
        "description": "Retrieve drug names using supplemental safety information.",
        "detailed_description": "Retrieve the drug name based on the provided safety information. This tool looks through safety information that may not be specified in other fields.",
        "toolType": "API",
        "tags": [
            "adverse-event-information",
            "drug-name-lookup",
            "fda-database-query",
            "fda-drug-label",
            "handling-instructions-search",
            "label-based-discovery",
            "pharmacovigilance-query",
            "product-safety-guidelines",
            "regulatory-safety-data",
            "risk-assessment-info",
            "safety-data-mining",
            "safety-information-retrieval",
            "structured-data-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by safety information",
            "Return brand and generic names",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "safety_info": {
                "type": "string",
                "description": "Information about safe use and handling of the product."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "safety_info": {
                    "type": "string",
                    "description": "Information about safe use and handling of the product.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "safety_info": "Avoid direct exposure to open flames and store in a cool, dry place.",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3d9c451-5f3a-4d12-9a98-7c0f2e58901e",
        "name": "FDA_get_other_safety_info_by_drug_name",
        "description": "Get additional safety information for a specified drug.",
        "detailed_description": "Retrieve safety information that may not be specified in other fields based on the provided drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-information",
            "drug-name-query",
            "drug-risk-assessment",
            "drug-safety-info-retrieval",
            "fda-label-data",
            "fda-safety-database",
            "json-response",
            "pagination-parameters",
            "pharmacology-data",
            "pharmacovigilance-support",
            "post-marketing-surveillance",
            "regulatory-compliance",
            "safety-profile-lookup",
            "toxicity-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve other safety information based on drug name",
            "Supports pagination via limit and skip",
            "Searches openfda.brand_name and openfda.generic_name fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b5e5d1-2a03-4c40-b3a3-6a12c7dc6f45",
        "name": "PubChem_get_synonyms_for_substance",
        "description": "Retrieves synonyms for substances by name.",
        "detailed_description": "Get synonyms for a substance by name.",
        "toolType": "API",
        "tags": [
            "alias-retrieval",
            "bioinformatics-research",
            "chemical-nomenclature",
            "chemical-synonym-lookup",
            "cheminformatics",
            "compound-alias-retrieval",
            "molecular-identifier",
            "name-standardization",
            "pubchem-api-query",
            "pubchem-synonyms",
            "semantic-enrichment",
            "substance-name-resolution"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve synonyms for a given substance name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Substance name."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Substance name."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8f1b2c3-d4e5-6f7a-8b9c-0d1e2f3a4b5c",
        "name": "PubChem_get_compounds_dataframe",
        "description": "Returns compounds as a pandas DataFrame.",
        "detailed_description": "Return compounds as a pandas DataFrame.",
        "toolType": "API",
        "tags": [
            "chemical-data-extraction",
            "chemical-database-access",
            "chemoinformatics",
            "compound-dataframe",
            "compound-query",
            "computational-chemistry",
            "data-analysis-ready",
            "molecular-dataset",
            "pandas-integration",
            "pubchem-compound-retrieval",
            "small-molecule-retrieval",
            "structure-search"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch compounds from PubChem based on a query",
            "Return results as a pandas DataFrame"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query for the compounds"
            },
            "namespace": {
                "type": "string",
                "description": "Namespace to scope the PubChem search"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "required": [
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "namespace": "CID"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "PubChem_get_substances_dataframe",
        "description": "Retrieves substances from PubChem and returns them as a pandas DataFrame.",
        "detailed_description": "Return substances as a pandas DataFrame.",
        "toolType": "API",
        "tags": [
            "bulk-data-fetch",
            "chemical-database-access",
            "chemical-substance-data",
            "cheminformatics",
            "compound-dataframe",
            "computational-chemistry",
            "pandas-dataframe-output",
            "pubchem-api-integration",
            "pubchem-data-retrieval",
            "pubchem-substance-fetch",
            "sid-cid-query",
            "substance-dataframe"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves chemical substances from PubChem using provided SIDs or CIDs",
            "Outputs results in pandas DataFrame format"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ids": {
                "type": "array",
                "description": "List of SIDs or CIDs to retrieve."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of SIDs or CIDs to retrieve."
                }
            },
            "required": [
                "ids"
            ]
        },
        "exampleInput": {
            "ids": [
                2244,
                2245,
                2246
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d2012e7-8f28-4c3c-a68f-3f04b6e5e9f7",
        "name": "PubChem_get_properties_dataframe",
        "description": "Retrieve specified properties from PubChem as a pandas DataFrame.",
        "detailed_description": "Return properties as a pandas DataFrame.",
        "toolType": "API",
        "tags": [
            "chemical-data-fetching",
            "chemical-database-access",
            "chemical-properties-dataframe",
            "cheminformatics",
            "compound-properties",
            "computational-chemistry",
            "data-preprocessing",
            "drug-discovery",
            "high-throughput-screening",
            "pandas-integration",
            "property-extraction",
            "pubchem-dataframe-generation",
            "pubchem-properties-retrieval",
            "qsar-analysis"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch properties from PubChem based on a query",
            "Return results as a pandas DataFrame"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "properties": {
                "type": "array",
                "description": "List of property names."
            },
            "query": {
                "type": "string",
                "description": "Search query for PubChem (e.g., compound name or identifier)."
            },
            "namespace": {
                "type": "string",
                "description": "Namespace defining the search context (e.g., 'compound')."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of property names."
                },
                "query": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "required": [
                "properties",
                "query",
                "namespace"
            ]
        },
        "exampleInput": {
            "properties": [
                "MolecularFormula",
                "MolecularWeight"
            ],
            "query": "aspirin",
            "namespace": "compound"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "PubChem_compounds_to_dataframe",
        "description": "Convert a list of Compound objects into a DataFrame.",
        "detailed_description": "Convert an existing list of Compound objects to a DataFrame.",
        "toolType": "API",
        "tags": [
            "chemical-dataframe",
            "cheminformatics",
            "compound-list",
            "compound-properties",
            "computational-chemistry",
            "data-preprocessing",
            "dataframe-conversion",
            "pandas-integration",
            "property-extraction",
            "pubchem-compounds",
            "pubchem-data",
            "tabular-format"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Convert a list of Compound objects to a DataFrame",
            "Include specified fields in the output DataFrame"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "compounds": {
                "type": "array",
                "description": "List of Compound objects."
            },
            "properties": {
                "type": "array",
                "description": "Fields to include."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "compounds": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    },
                    "description": "List of Compound objects."
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to include."
                }
            },
            "required": [
                "compounds"
            ]
        },
        "exampleInput": {
            "compounds": [
                {
                    "cid": 2244,
                    "molecular_weight": 214.3
                },
                {
                    "cid": 5793,
                    "molecular_weight": 98.1
                }
            ],
            "properties": [
                "cid",
                "molecular_weight"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "550e8400-e29b-41d4-a716-446655440000",
        "name": "Finish",
        "description": "Indicate the end of multi-step reasoning.",
        "detailed_description": "Indicate the end of multi-step reasoning.",
        "toolType": "Special Tool",
        "tags": [],
        "category": "SpecialTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Indicate the end of multi-step reasoning."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": null
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "2d4c1a9f-8b57-4b3f-a5d2-7be0f01a2345",
        "name": "CallAgent",
        "description": "Generates concise solution plans from varied perspectives for agents to address questions.",
        "detailed_description": "Give a solution plan to the agent and let it solve the problem. Solution plan should reflect a distinct method, approach, or viewpoint to solve the given question. Call these function multiple times, and each solution plan should start with different aspects of the question, for example, genes, phenotypes, diseases, or drugs, etc. The CallAgent will achieve the task based on the plan, so only give the plan instead of unverified information.",
        "toolType": "Special Tool",
        "tags": [
            "agent-orchestration",
            "automated-problem-solving",
            "domain-decomposition",
            "iterative-calling",
            "llm-tool-integration",
            "methodical-solvers",
            "perspective-driven-planning",
            "prompt-engineering",
            "solution-plan-generation",
            "strategic-solution-design",
            "viewpoint-based-analysis",
            "workflow-automation"
        ],
        "category": "SpecialTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Produce concise solution plans",
            "Offer distinct methods or viewpoints to solve questions",
            "Enable iterative calls with varied starting aspects"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "solution": {
                "type": "string",
                "description": "A feasible and concise solution plan that address the question."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "solution": {
                    "type": "string",
                    "description": "A feasible and concise solution plan that address the question.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "solution": "Outline a plan focusing on gene interactions, pathways, and potential small-molecule interventions."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b6a7c06a-5f0b-4e99-9c4d-2f9ebb8c839f",
        "name": "HPA_search_genes_by_query",
        "description": "Search matching genes by name, keyword, or cell line and return their Ensembl IDs.",
        "detailed_description": "Search for matching genes by gene name, keywords, or cell line names and return Ensembl ID list. This is the entry tool for many HPA query workflows.",
        "toolType": "API",
        "tags": [
            "alias-search",
            "biomedical-data-mining",
            "cell-line-query",
            "computational-biology",
            "ensembl-id-mapping",
            "gene-identifier-mapping",
            "gene-query",
            "gene-search",
            "genomics-data-search",
            "hpa-workflow-entry",
            "human-proteome-analysis",
            "keyword-query",
            "transcriptomics-search"
        ],
        "category": "HPASearchGenesTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search genes by name, keyword, or cell line",
            "Return list of matching genes with official name, Ensembl ID, and known synonyms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "search_query": {
                "type": "string",
                "description": "Gene name, alias, keyword, or cell line name to search for, e.g., 'EGFR', 'TP53', or 'MCF7'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "search_query": {
                    "type": "string",
                    "description": "Gene name, alias, keyword, or cell line name to search for, e.g., 'EGFR', 'TP53', or 'MCF7'."
                }
            },
            "required": [
                "search_query"
            ]
        },
        "exampleInput": {
            "search_query": "EGFR"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9b1deb4d-3b7d-4d01-9993-85596feac45f",
        "name": "HPA_get_comparative_expression_by_gene_and_cellline",
        "description": "Compare gene expression differences between a cell line and healthy tissues.",
        "detailed_description": "Compare the expression level differences of a gene between a specific cell line and healthy tissues using gene name and cell line name.",
        "toolType": "API",
        "tags": [
            "bioinformatics-analysis",
            "cancer-cell-lines",
            "cell-line-input",
            "cell-line-vs-tissue",
            "comparative-transcriptomics",
            "differential-expression-analysis",
            "gene-expression-comparison",
            "gene-expression-profiling",
            "gene-symbol-input",
            "healthy-tissue-baseline",
            "hpa-expression-data",
            "transcriptome-research"
        ],
        "category": "HPAGetComparativeExpressionTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Query RNA expression levels for a specified gene in a given cell line",
            "Compare cell line expression to healthy tissue expression",
            "Provide expression values in nTPM units"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or gene symbol, e.g., 'TP53', 'BRCA1', 'EGFR', etc."
            },
            "cell_line": {
                "type": "string",
                "description": "Cell line name, supported cell lines include: ishikawa, hela, mcf7, a549, hepg2, jurkat, pc3, rh30, siha, u251."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or gene symbol, e.g., 'TP53', 'BRCA1', 'EGFR', etc."
                },
                "cell_line": {
                    "type": "string",
                    "description": "Cell line name, supported cell lines include: ishikawa, hela, mcf7, a549, hepg2, jurkat, pc3, rh30, siha, u251."
                }
            },
            "required": [
                "gene_name",
                "cell_line"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53",
            "cell_line": "hela"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1d3f8ae-4b6c-4fd2-9ad3-ae5f8835f1e8",
        "name": "HPA_get_disease_expression_by_gene_tissue_disease",
        "description": "Compare gene expression levels between disease and healthy states using gene, tissue, and disease names.",
        "detailed_description": "Compare the expression level of a gene in specific disease state versus healthy state using gene name, tissue type, and disease name.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "biomedical-research",
            "cancer-gene-expression",
            "differential-expression",
            "disease-biomarker-discovery",
            "disease-expression-profile",
            "gene-expression-comparison",
            "healthy-vs-disease",
            "hpa-database-access",
            "molecular-biology",
            "tissue-specific-expression",
            "transcriptomics-analysis"
        ],
        "category": "HPAGetDiseaseExpressionTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve gene expression levels for specified gene and disease",
            "Compare disease versus healthy expression levels",
            "Optionally specify tissue type for more precise queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or gene symbol, e.g., 'TP53', 'BRCA1', 'KRAS', etc."
            },
            "tissue_type": {
                "type": "string",
                "description": "Tissue type, e.g., 'brain', 'breast', 'colon', 'lung', etc., optional parameter."
            },
            "disease_name": {
                "type": "string",
                "description": "Disease name, supported diseases include: brain_cancer, breast_cancer, colon_cancer, lung_cancer, liver_cancer, prostate_cancer, kidney_cancer, pancreatic_cancer, stomach_cancer, ovarian_cancer."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or gene symbol, e.g., 'TP53', 'BRCA1', 'KRAS', etc."
                },
                "tissue_type": {
                    "type": "string",
                    "description": "Tissue type, e.g., 'brain', 'breast', 'colon', 'lung', etc., optional parameter."
                },
                "disease_name": {
                    "type": "string",
                    "description": "Disease name, supported diseases include: brain_cancer, breast_cancer, colon_cancer, lung_cancer, liver_cancer, prostate_cancer, kidney_cancer, pancreatic_cancer, stomach_cancer, ovarian_cancer."
                }
            },
            "required": [
                "gene_name",
                "disease_name"
            ]
        },
        "exampleInput": {
            "gene_name": "BRCA1",
            "tissue_type": "breast",
            "disease_name": "breast_cancer"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3a7c89a-2b5d-4f9e-9a67-ce12345de678",
        "name": "HPA_get_biological_processes_by_gene",
        "description": "Retrieve biological process information for a gene, highlighting key processes like apoptosis and cell cycle.",
        "detailed_description": "Get biological process information for a gene, with special focus on key processes like apoptosis, cell cycle, etc.",
        "toolType": "API",
        "tags": [
            "apoptosis-analysis",
            "biological-pathway-mapping",
            "biological-process-annotation",
            "cell-cycle-regulation",
            "functional-genomics",
            "gene-centric-discovery",
            "gene-ontology-extraction",
            "gene-process-retrieval",
            "hpa-data-access",
            "human-protein-atlas-integration",
            "pathway-extraction",
            "process-filtering",
            "transcription-regulation"
        ],
        "category": "HPAGetBiologicalProcessTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch biological process information for a given gene",
            "Filter for key biological processes (apoptosis, cell cycle, transcription regulation, etc.)",
            "Retrieve data in JSON format from Human Protein Atlas API",
            "Set custom timeout for API requests"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or gene symbol, e.g., 'TP53', 'CDK1', 'CASP3', etc."
            },
            "filter_processes": {
                "type": "boolean",
                "description": "Whether to filter and focus on specific biological processes (apoptosis, cell cycle, transcription regulation, etc.), defaults to true."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or gene symbol, e.g., 'TP53', 'CDK1', 'CASP3', etc."
                },
                "filter_processes": {
                    "type": "boolean",
                    "description": "Whether to filter and focus on specific biological processes (apoptosis, cell cycle, transcription regulation, etc.), defaults to true."
                }
            },
            "required": [
                "gene_name"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53",
            "filter_processes": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d48cb1c-9dc2-4f3a-8351-5f0c7a6e8b20",
        "name": "HPA_get_comprehensive_gene_details_by_ensembl_id",
        "description": "Retrieve comprehensive gene information by Ensembl ID from the Human Protein Atlas, including images, antibody data, and expression details.",
        "detailed_description": "Get detailed in-depth information from gene page using Ensembl Gene ID, including image URLs, antibody data, protein expression, and comprehensive information. This is the core tool for retrieving all images (tissue immunohistochemistry, subcellular immunofluorescence).",
        "toolType": "API",
        "tags": [
            "antibody-database",
            "antibody-validation-data",
            "bioimage-retrieval",
            "biomedical-research-resource",
            "ensembl-gene-query",
            "gene-expression-profiling",
            "gene-page-detail",
            "high-content-imaging",
            "hpa-gene-info",
            "molecular-profiling",
            "protein-expression-profiling",
            "protein-localization",
            "subcellular-immunofluorescence",
            "tissue-immunohistochemistry"
        ],
        "category": "HPAGetGenePageDetailsTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch gene page XML by Ensembl ID",
            "Retrieve tissue immunohistochemistry images",
            "Retrieve subcellular immunofluorescence images",
            "Include antibody data",
            "Include expression data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensembl_id": {
                "type": "string",
                "description": "Ensembl Gene ID, e.g., 'ENSG00000064787' (BCAS1), 'ENSG00000141510' (TP53), etc. Usually obtained through HPA_search_genes_by_query tool."
            },
            "include_images": {
                "type": "boolean",
                "description": "Whether to include image URL information (immunofluorescence, cell line images, etc.), defaults to true."
            },
            "include_antibodies": {
                "type": "boolean",
                "description": "Whether to include detailed antibody information (validation status, Western blot data, etc.), defaults to true."
            },
            "include_expression": {
                "type": "boolean",
                "description": "Whether to include detailed expression data (tissue specificity, subcellular localization, etc.), defaults to true."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensembl_id": {
                    "type": "string",
                    "description": "Ensembl Gene ID, e.g., 'ENSG00000064787' (BCAS1), 'ENSG00000141510' (TP53), etc. Usually obtained through HPA_search_genes_by_query tool."
                },
                "include_images": {
                    "type": "boolean",
                    "description": "Whether to include image URL information (immunofluorescence, cell line images, etc.), defaults to true."
                },
                "include_antibodies": {
                    "type": "boolean",
                    "description": "Whether to include detailed antibody information (validation status, Western blot data, etc.), defaults to true."
                },
                "include_expression": {
                    "type": "boolean",
                    "description": "Whether to include detailed expression data (tissue specificity, subcellular localization, etc.), defaults to true."
                }
            },
            "required": [
                "ensembl_id"
            ]
        },
        "exampleInput": {
            "ensembl_id": "ENSG00000141510",
            "include_images": true,
            "include_antibodies": true,
            "include_expression": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2e8b72a-585b-4d5c-8e3f-cc9fbf0aeea1",
        "name": "HPA_get_cancer_prognostics_by_gene",
        "description": "Retrieve prognostic significance of a gene across cancer types, showing expression-survival correlations.",
        "detailed_description": "Retrieve prognostic value of a gene across various cancer types, indicating if its expression level correlates with patient survival outcomes.",
        "toolType": "API",
        "tags": [
            "cancer-genomics",
            "cancer-prognostics",
            "ensembl-id-input",
            "gene-expression-survival",
            "gene-prognostic-analysis",
            "human-protein-atlas",
            "oncology-bioinformatics",
            "patient-survival-correlation",
            "predictive-oncology",
            "prognostic-biomarker-discovery",
            "survival-analysis",
            "transcriptomic-profiling"
        ],
        "category": "HPAGetCancerPrognosticsTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve prognostic significance of a gene across different cancer types",
            "Provide prognostic type (favorable/unfavorable) and p-value for survival correlations",
            "Include summary statistics indicating expression level impact on patient survival"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensembl_id": {
                "type": "string",
                "description": "Ensembl Gene ID of the gene to check, e.g., 'ENSG00000141510' for TP53, 'ENSG00000012048' for BRCA1."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensembl_id": {
                    "type": "string",
                    "description": "Ensembl Gene ID of the gene to check, e.g., 'ENSG00000141510' for TP53, 'ENSG00000012048' for BRCA1."
                }
            },
            "required": [
                "ensembl_id"
            ]
        },
        "exampleInput": {
            "ensembl_id": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f12a3b4c-5d6e-7f89-0abc-def123456789",
        "name": "HPA_get_protein_interactions_by_gene",
        "description": "Fetch protein interaction partners from Human Protein Atlas for a given gene.",
        "detailed_description": "Fetch known protein-protein interaction partners for a given gene from Human Protein Atlas database.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "gene-centric-ppi",
            "gene-symbol-query",
            "hpa-database-access",
            "hpa-protein-interactions",
            "human-interactome",
            "interactome-mining",
            "json-output",
            "network-biology",
            "pathway-analysis",
            "ppi-data-retrieval",
            "protein-protein-interaction",
            "proteomics",
            "systems-biology"
        ],
        "category": "HPAGetProteinInteractionsTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch protein-protein interactions for a given gene",
            "Retrieve interaction partner counts and summaries",
            "Query HPA API endpoint"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Official gene symbol, e.g., 'EGFR', 'TP53', 'BRCA1', etc."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Official gene symbol, e.g., 'EGFR', 'TP53', 'BRCA1', etc."
                }
            },
            "required": [
                "gene_name"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c9a15e2-f4b6-4d7e-8c2f-5a1b9e0d6c7f",
        "name": "HPA_get_rna_expression_in_specific_tissues",
        "description": "Fetch RNA expression (nTPM) for a gene in specified tissues with accurate tissue matching.",
        "detailed_description": "Query RNA expression levels (nTPM) for a specific gene in one or more user-specified tissues with precise tissue matching.",
        "toolType": "API",
        "tags": [
            "bioinformatics-pipeline",
            "ensembl-id-input",
            "expression-level-retrieval",
            "gene-expression-profiling",
            "human-protein-atlas",
            "multi-tissue-comparison",
            "ntpm-quantification",
            "organ-specific-expression",
            "precise-tissue-matching",
            "rna-expression-query",
            "tissue-specific-expression",
            "transcriptomics-analysis"
        ],
        "category": "HPAGetRnaExpressionByTissueTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch RNA expression levels in nTPM",
            "Match user-specified tissues precisely (case-insensitive)",
            "Categorize expression levels (Very high/High/Medium/Low/Very low)",
            "Provide sample of available tissues for reference"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensembl_id": {
                "type": "string",
                "description": "Ensembl Gene ID for the gene, e.g., 'ENSG00000141510' for TP53."
            },
            "tissue_names": {
                "type": "array",
                "description": "List of tissue names to query, e.g., ['brain', 'liver', 'heart muscle', 'kidney']. Case-insensitive matching is supported."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensembl_id": {
                    "type": "string",
                    "description": "Ensembl Gene ID for the gene, e.g., 'ENSG00000141510' for TP53."
                },
                "tissue_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tissue names to query, e.g., ['brain', 'liver', 'heart muscle', 'kidney']. Case-insensitive matching is supported."
                }
            },
            "required": [
                "ensembl_id",
                "tissue_names"
            ]
        },
        "exampleInput": {
            "ensembl_id": "ENSG00000141510",
            "tissue_names": [
                "brain",
                "liver",
                "heart muscle"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4d3b2f10-1a2c-4e3b-a5f6-7d8e9f0a1b2c",
        "name": "HPA_get_contextual_biological_process_analysis",
        "description": "Analyze a gene's biological processes in a specific tissue or cell line by combining functional annotation with expression data for functional relevance.",
        "detailed_description": "Analyze a gene's biological processes in the context of a specific tissue or cell line by integrating functional annotation with expression data to determine functional relevance.",
        "toolType": "API",
        "tags": [
            "cell-line-contextualization",
            "contextual-bioprocess-analysis",
            "functional-annotation-integration",
            "functional-genomics",
            "gene-function-relevance",
            "gene-pathway-mapping",
            "hpa-data-analysis",
            "pathway-enrichment",
            "systems-biology",
            "tissue-expression-profiling",
            "tissue-specific-expression",
            "transcriptome-integration"
        ],
        "category": "HPAGetContextualBiologicalProcessTool",
        "lab": "Zitnik Lab",
        "source": "HPA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze gene biological processes in a specific tissue or cell line context",
            "Integrate functional annotation with expression data",
            "Determine functional relevance of a gene in the given context"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or symbol, e.g., 'TP53', 'EGFR', 'BRCA1'."
            },
            "context_name": {
                "type": "string",
                "description": "Name of the tissue or cell line to provide context, e.g., 'brain', 'liver', 'hela', 'mcf7'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or symbol, e.g., 'TP53', 'EGFR', 'BRCA1'."
                },
                "context_name": {
                    "type": "string",
                    "description": "Name of the tissue or cell line to provide context, e.g., 'brain', 'liver', 'hela', 'mcf7'."
                }
            },
            "required": [
                "gene_name",
                "context_name"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53",
            "context_name": "liver"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1f2e3d4c-5b6a-7d8c-9e0f-1a2b3c4d5e6f",
        "name": "HPA_get_rna_expression_by_source",
        "description": "Retrieve RNA expression levels (nTPM) for a gene across various biological sources.",
        "detailed_description": "Get RNA expression level (nTPM) for a gene in a specific biological source using optimized columns parameter. Supports tissue, blood, brain, and single_cell source types with comprehensive source mappings.",
        "toolType": "API",
        "tags": [
            "blood-expression",
            "brain-expression",
            "cell-type-specific-expression",
            "computational-biology",
            "expression-analytics",
            "expression-profiling",
            "gene-expression",
            "human-proteinatlas",
            "molecular-biology",
            "ntpm-quantification",
            "rna-expression",
            "single-cell-expression",
            "source-specific-query",
            "tissue-specific-expression",
            "transcriptomics"
        ],
        "category": "HPAGetRnaExpressionBySourceTool",
        "lab": "Zitnik Lab",
        "source": "HPA-API",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve gene RNA expression (nTPM) for specified biological sources.",
            "Support querying by source type: tissue, blood, brain, single_cell.",
            "Return expression level categorization (Very high, High, Medium, Low, Very low) and metadata."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or gene symbol, e.g., 'GFAP', 'TP53', 'BRCA1', etc."
            },
            "source_type": {
                "type": "string",
                "description": "The type of biological source. Choose from: 'tissue', 'blood', 'brain', 'single_cell'."
            },
            "source_name": {
                "type": "string",
                "description": "The specific name of the biological source, e.g., 'liver', 'heart_muscle', 't_cell', 'hepatocytes', 'cerebellum'. Must be a valid name from the comprehensive HPA columns mapping."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or gene symbol, e.g., 'GFAP', 'TP53', 'BRCA1', etc."
                },
                "source_type": {
                    "type": "string",
                    "description": "The type of biological source. Choose from: 'tissue', 'blood', 'brain', 'single_cell'."
                },
                "source_name": {
                    "type": "string",
                    "description": "The specific name of the biological source, e.g., 'liver', 'heart_muscle', 't_cell', 'hepatocytes', 'cerebellum'. Must be a valid name from the comprehensive HPA columns mapping."
                }
            },
            "required": [
                "gene_name",
                "source_type",
                "source_name"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53",
            "source_type": "tissue",
            "source_name": "liver"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "get_biotite_info",
        "description": "Retrieve detailed information about the Biotite computational molecular biology library",
        "detailed_description": "Get comprehensive information about Biotite \u2013 comprehensive computational molecular biology library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-library",
            "biotite-library",
            "computational-biology",
            "homology-modeling",
            "library-overview",
            "molecular-biology",
            "package-documentation",
            "pdb-processing",
            "python-package-info",
            "quick-start-guide",
            "sequence-analysis",
            "structural-bioinformatics",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Biotite",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch general information about the Biotite package",
            "Provide usage examples and quick start guide if requested"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_flowio_info",
        "description": "Retrieve detailed information about FlowIO, a library for FCS file I/O in flow cytometry.",
        "detailed_description": "Get comprehensive information about FlowIO \u2013 FCS file I/O for flow cytometry",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics",
            "cytometry-data",
            "data-import-export",
            "dependency-inspection",
            "fcs-file-format",
            "fcs-file-io",
            "fcs-parser",
            "flow-cytometry",
            "flowio-documentation",
            "package-metadata",
            "scientific-data-io",
            "version-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "FlowIO",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the FlowIO library",
            "Get installation instructions for FlowIO",
            "Provide usage examples for FlowIO",
            "Fetch documentation links for FlowIO"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FlowIO"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FlowIO"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9b4f25de-8a0b-4c79-9c0a-2a1d3f8eb9f0",
        "name": "get_pyscreener_info",
        "description": "Retrieve information about PyScreener, a Python toolkit for high-throughput virtual screening.",
        "detailed_description": "Get comprehensive information about PyScreener \u2013 high-throughput virtual screening in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "cheminformatics",
            "computational-chemistry",
            "drug-discovery-pipeline",
            "feature-overview",
            "function-reference",
            "high-throughput-screening",
            "in-silico-screening",
            "molecular-docking",
            "package-metadata",
            "pyscreener-info",
            "python-package",
            "screening-workflow",
            "usage-examples",
            "virtual-screening"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyscreener",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of PyScreener",
            "Provide installation instructions for PyScreener",
            "Show usage examples for PyScreener",
            "Link to PyScreener documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyScreener"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyScreener"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7a8b-9c0d-e1f2a3b4c5d6",
        "name": "get_trackpy_info",
        "description": "Provides comprehensive information about the trackpy particle tracking toolkit for Python.",
        "detailed_description": "Get comprehensive information about trackpy \u2013 particle tracking toolkit for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "doc-explorer",
            "feature-detection",
            "image-analysis",
            "info-retrieval",
            "motion-analysis",
            "package-introspection",
            "particle-tracking",
            "python-package",
            "scientific-python",
            "time-series-processing",
            "trackpy-documentation",
            "trajectory-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "trackpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of trackpy",
            "Provide installation instructions for trackpy",
            "Show usage examples for trackpy",
            "Access documentation for trackpy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about trackpy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about trackpy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2c12345-6789-4abc-def0-1234567890ab",
        "name": "get_deepchem_info",
        "description": "Fetch detailed information about DeepChem, an open-source AI/ML toolkit for drug discovery, materials science, and quantum chemistry.",
        "detailed_description": "Get comprehensive information about DeepChem \u2013 an open-source toolkit that brings advanced AI/ML techniques to drug discovery, materials science and quantum chemistry.",
        "toolType": "Scientific Software Package",
        "tags": [
            "ai-driven-drug-discovery",
            "chemoinformatics-library",
            "computational-chemistry",
            "deepchem-info",
            "graph-neural-networks-chemistry",
            "materials-science-ml",
            "molecular-modeling",
            "package-documentation",
            "python-ml-library",
            "quantum-chemistry-toolkit",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DeepChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve DeepChem library metadata",
            "Provide installation instructions",
            "Offer links to documentation and repository",
            "Optionally include usage examples and quick-start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4f47cbe-8ab5-49bc-a301-57e21a2c9e1f",
        "name": "get_openmm_info",
        "description": "Retrieves detailed information about OpenMM, a molecular dynamics simulation toolkit.",
        "detailed_description": "Get comprehensive information about OpenMM \u2013 molecular dynamics simulation toolkit",
        "toolType": "Scientific Software Package",
        "tags": [
            "biophysical-simulation",
            "computational-chemistry",
            "force-field-parameters",
            "gpu-accelerated-compute",
            "md-simulation-toolkit",
            "molecular-dynamics",
            "openmm",
            "package-documentation",
            "python-api",
            "quick-start-guide",
            "scientific-computing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "OpenMM",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the OpenMM package",
            "Provide installation instructions for pip and conda",
            "Supply usage examples and quick start guide when requested",
            "Offer package metadata including description, category, keywords, documentation, and repository link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9fa1aab-2c57-4dbf-9e2b-6cbc7f84a729",
        "name": "get_poliastro_info",
        "description": "Retrieve comprehensive information about the poliastro astrodynamics library",
        "detailed_description": "Get comprehensive information about poliastro \u2013 astrodynamics library",
        "toolType": "Scientific Software Package",
        "tags": [
            "aerospace-engineering",
            "api-overview",
            "astrodynamics-library",
            "documentation-fetch",
            "feature-discovery",
            "library-inspection",
            "metadata-retrieval",
            "orbital-mechanics",
            "package-introspection",
            "poliastro-information",
            "python-library-reference",
            "software-reference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "poliastro",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of poliastro",
            "Provide installation instructions for poliastro",
            "Show usage examples for poliastro",
            "Fetch documentation link for poliastro"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about poliastro"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about poliastro"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d1f74f81-8b2c-4d2a-9a1e-5b2f3c4d6e7f",
        "name": "get_igraph_info",
        "description": "Provides detailed information on the igraph package for network analysis and visualization",
        "detailed_description": "Get comprehensive information about igraph \u0013 network analysis and visualization",
        "toolType": "Scientific Software Package",
        "tags": [
            "documentation-retrieval",
            "function-reference",
            "graph-analytics",
            "graph-theory",
            "igraph-documentation",
            "network-analysis",
            "network-visualization",
            "package-info",
            "package-quickstart",
            "python-igraph",
            "r-igraph",
            "social-network-analysis",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "igraph",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package description and metadata",
            "Offer installation instructions for pip and conda",
            "Show usage examples and quick start guide",
            "List keywords and categories",
            "Return documentation and source repository URLs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3af1b2e-4c5d-678e-9f01-a2b3c4d5e6f7",
        "name": "get_requests_info",
        "description": "Provides comprehensive information about the Requests HTTP library.",
        "detailed_description": "Get comprehensive information about Requests - Python HTTP library for humans",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-calls",
            "code-snippets",
            "developer-reference",
            "http-client-library",
            "http-requests",
            "human-friendly-api",
            "network-programming",
            "package-documentation",
            "python-package",
            "python-requests",
            "quick-start-guide",
            "rest-api-integration",
            "usage-examples",
            "web-requests"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Requests",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata (description, category, keywords)",
            "Provide installation instructions",
            "Display usage examples",
            "Offer quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b8f1a356-2c57-4c89-8f40-0af61a74b320",
        "name": "get_pybigwig_info",
        "description": "Provides comprehensive details on using the pyBigWig Python library for accessing BigWig genomic data files",
        "detailed_description": "Get comprehensive information about pyBigWig \u2013 BigWig file access in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "bigwig-file-access",
            "bigwig-metadata-extraction",
            "bigwig-reader",
            "binary-indexed-format",
            "bioinformatics-tool",
            "coverage-track-inspection",
            "epigenomics-processing",
            "file-format-inspection",
            "genomic-coverage-data",
            "next-generation-sequencing",
            "pybigwig-info",
            "python-bindings"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyBigWig",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pyBigWig library metadata",
            "Provide installation instructions for pip and conda",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5f1e4a76-3b2c-4d9e-9e59-2a3d6f5a8b2f",
        "name": "get_anndata_info",
        "description": "Retrieve comprehensive information about the AnnData package for computational biology",
        "detailed_description": "Get comprehensive information about AnnData \u2013 annotated data for computational biology",
        "toolType": "Scientific Software Package",
        "tags": [
            "anndata-inspection",
            "anndata-metadata",
            "annotated-data-summary",
            "bioinformatics-python",
            "computational-biology",
            "data-structure-overview",
            "dataset-exploration",
            "metadata-extraction",
            "quick-start-guide",
            "scanpy-integration",
            "single-cell-data",
            "transcriptomics-analysis"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "AnnData",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive AnnData package information",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b1c6f2-3a9d-4e1b-8f3c-7d2e4b5a6c7f",
        "name": "get_faiss_info",
        "description": "Retrieve information about Faiss, an efficient similarity search and clustering library",
        "detailed_description": "Get comprehensive information about Faiss \u2013 efficient similarity search and clustering",
        "toolType": "Scientific Software Package",
        "tags": [
            "approximate-nearest-neighbors",
            "clustering-with-faiss",
            "faiss-documentation",
            "high-dimensional-data-search",
            "information-retrieval",
            "machine-learning-library",
            "metric-learning",
            "python-vector-database",
            "quick-start-guide",
            "usage-examples",
            "vector-indexing",
            "vector-similarity-search"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "faiss-cpu",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide library description",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide quick start guide",
            "Provide repository and documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c43f5d1f-0c3a-4f1c-9faa-6b6bb78155da",
        "name": "get_tskit_info",
        "description": "Provides detailed information about the tskit toolkit for population genetics.",
        "detailed_description": "Get comprehensive information about tskit \u2013 tree sequence toolkit for population genetics",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "computational-genetics",
            "data-structure-inspection",
            "evolutionary-biology",
            "info-retrieval",
            "metadata-extraction",
            "package-metadata",
            "phylogenetic-analysis",
            "population-genetics",
            "software-overview",
            "toolkit-overview",
            "tree-sequence-toolkit",
            "tskit-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "tskit",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve tskit overview",
            "Provide installation instructions for tskit",
            "Show usage examples of tskit",
            "Provide documentation link for tskit"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about tskit"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about tskit"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4d8fde92-1a46-4bcb-8cde-3f79a0bf2e1d",
        "name": "get_pymassspec_info",
        "description": "Retrieve information about the PyMassSpec toolkit for mass spectrometry data analysis",
        "detailed_description": "Get comprehensive information about PyMassSpec \u2013 mass spectrometry data analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-information",
            "high-throughput-spectrometry",
            "instrument-data-format",
            "mass-spectrometry-data-analysis",
            "metabolomics-workflow",
            "package-documentation",
            "proteomics-analysis",
            "pymassspec-info",
            "python-bioinformatics",
            "software-metadata",
            "spectral-annotation",
            "spectral-processing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PyMassSpec",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get overview of PyMassSpec",
            "Get installation instructions for PyMassSpec",
            "Get usage examples for PyMassSpec",
            "Get documentation link for PyMassSpec"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyMassSpec"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyMassSpec"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3f1c4d2-8a76-4f90-932e-5b344f62c3ae",
        "name": "get_gget_info",
        "description": "Fetch detailed information about the gget genomics CLI and Python package.",
        "detailed_description": "Get comprehensive information about gget \u2013 genomics command-line tool and Python package",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-tool",
            "cli-tool-reference",
            "command-line-interface",
            "documentation-fetch",
            "genomics-package",
            "gget-documentation",
            "gget-info",
            "metadata-retrieval",
            "python-package-metadata",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "gget",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed information about the gget package",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_overdosage_info",
        "description": "Retrieve drug names from FDA labels based on acute overdosage signs, symptoms, and lab findings.",
        "detailed_description": "Retrieve drug names based on information about signs, symptoms, and laboratory findings of acute overdosage.",
        "toolType": "API",
        "tags": [
            "acute-overdose-analysis",
            "adverse-effect-detection",
            "drug-name-retrieval",
            "fda-drug-label-mining",
            "indication-based-filtering",
            "medication-safety-monitoring",
            "overdosage-info-search",
            "overdose-diagnosis-assistance",
            "overdose-laboratory-findings",
            "pharmacovigilance-tool",
            "symptom-based-drug-search",
            "toxicology-informatics"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on acute overdosage information",
            "Optional filtering by drug indication",
            "Supports pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "overdosage_info": {
                "type": "string",
                "description": "Information about signs, symptoms, and laboratory findings of acute overdosage.",
                "required": true
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug.",
                "required": false
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "overdosage_info": {
                    "type": "string",
                    "description": "Information about signs, symptoms, and laboratory findings of acute overdosage.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "overdosage_info": "Vomiting, drowsiness, and elevated liver enzymes",
            "indication": "Pain relief",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8b5f5df-1e2c-4d0c-9f4a-fa2b26e5d123",
        "name": "FDA_get_overdosage_info_by_drug_name",
        "description": "Retrieve acute overdosage signs, symptoms, and lab findings by drug name.",
        "detailed_description": "Retrieve information about signs, symptoms, and laboratory findings of acute overdosage based on the drug name.",
        "toolType": "API",
        "tags": [
            "acute-overdose-info",
            "clinical-toxicology-reference",
            "drug-overdosage-symptoms",
            "drug-safety-assessment",
            "drug-toxicity-profile",
            "fda-drug-label",
            "json-api-retrieval",
            "medication-safety-info",
            "overdose-laboratory-findings",
            "paginated-results",
            "pharmacovigilance-database",
            "query-by-drug-name"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve signs, symptoms, and laboratory findings of acute drug overdosage",
            "Search by drug brand and generic names",
            "Support record pagination using limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4b1c3d2-5f6a-4b7c-8d9e-0f1a2b3c4d5e",
        "name": "FDA_get_drug_name_by_principal_display_panel",
        "description": "Retrieve drug names from package display panel content.",
        "detailed_description": "Retrieve the drug name based on the content of the principal display panel of the product package.",
        "toolType": "API",
        "tags": [
            "drug-labeling",
            "drug-name-retrieval",
            "fda-database-query",
            "fda-drug-label",
            "label-content-extraction",
            "label-text-mining",
            "medication-identification",
            "packaging-text-parsing",
            "pharmaceutical-packaging",
            "principal-display-panel",
            "regulatory-compliance",
            "structured-data-extraction"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search principal display panel content for drug name",
            "Return brand and generic drug names",
            "Allow pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "display_panel_content": {
                "type": "string",
                "description": "The content of the principal display panel of the product package."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "display_panel_content": {
                    "type": "string",
                    "description": "The content of the principal display panel of the product package.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "display_panel_content": "Acetaminophen 500 mg Tablets",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4f5e6a7-b8c9-40d1-9234-56e7f8a9b0c1",
        "name": "FDA_get_principal_display_panel_by_drug_name",
        "description": "Retrieve principal display panel of a drug package by name.",
        "detailed_description": "Retrieve the content of the principal display panel of the product package based on the drug name.",
        "toolType": "API",
        "tags": [
            "drug-name-lookup",
            "drug-package-label-content",
            "drug-safety-information",
            "fda-label-retrieval",
            "fda-regulation",
            "json-output",
            "medication-label-extraction",
            "package-insert-panel",
            "pagination-support",
            "pharmaceutical-packaging",
            "pharmacovigilance-data",
            "principal-display-panel-fetch",
            "regulatory-compliance",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve principal display panel content by drug name",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d0f7b8a-1c4d-4af9-bb8d-2f9e1a4e5678",
        "name": "FDA_retrieve_drug_names_by_patient_medication_info",
        "description": "Retrieve drug names using patient medication safety information.",
        "detailed_description": "Retrieve drug names based on patient medication information, which is about safe use of the drug.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "drug-name-retrieval",
            "fda-drug-label-query",
            "health-it-integration",
            "json-output-format",
            "medication-safety",
            "pagination-support",
            "patient-instruction-processing",
            "patient-medication-information",
            "pharmacy-automation",
            "regulatory-compliance",
            "safe-use-guidance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on patient medication information",
            "Supports pagination with limit and skip",
            "Returns brand and generic names from FDA drug labels"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "patient_info": {
                "type": "string",
                "description": "Information or instructions to patients about safe use of the drug product."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "patient_info": {
                    "type": "string",
                    "description": "Information or instructions to patients about safe use of the drug product.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "patient_info": "Take with food to reduce stomach upset",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b1c4e2a-8f18-4b4f-9a3a-3d5e6f7a8b9c",
        "name": "FDA_retrieve_patient_medication_info_by_drug_name",
        "description": "Retrieve patient medication safety information by drug name.",
        "detailed_description": "Retrieve patient medication information (which is about safe use of the drug) based on drug names.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "drug-name-lookup",
            "drug-safety-information",
            "fda-drug-label",
            "healthcare-informatics",
            "label-retrieval-api",
            "medication-label-query",
            "medication-safety-data",
            "patient-medication-info",
            "pharmaceutical-guidelines",
            "pharmacovigilance",
            "prescription-drug-labels"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve patient medication information based on drug names",
            "Support pagination via 'limit' and 'skip' parameters",
            "Search uses openfda.brand_name and openfda.generic_name fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c0a0cb1-7be3-4e45-b30f-58c98cbd4b3d",
        "name": "FDA_get_drug_names_by_pediatric_use",
        "description": "Retrieve drug names based on pediatric use.",
        "detailed_description": "Retrieve drug names based on pediatric use information.",
        "toolType": "API",
        "tags": [
            "child-safety-information",
            "clinical-research-tool",
            "drug-name-retrieval",
            "fda-drug-label",
            "json-response-format",
            "label-data-mining",
            "pagination-parameter",
            "pediatric-drug-search",
            "pediatric-indication-query",
            "pediatric-pharmacology",
            "pediatric-use-filter",
            "pharmacovigilance",
            "regulatory-compliance",
            "string-query-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pediatric drug names",
            "Filter by indication",
            "Pagination support via limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pediatric_use_info": {
                "type": "string",
                "description": "Information related to the safe and effective pediatric use of the drug."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pediatric_use_info": {
                    "type": "string",
                    "description": "Information related to the safe and effective pediatric use of the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pediatric_use_info": "Safety and efficacy established in children aged 2-12",
            "indication": "Asthma management",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8b8b9d85-5dd8-4a44-b9dc-3a1fca4a513f",
        "name": "FDA_get_pediatric_use_info_by_drug_name",
        "description": "Retrieve pediatric use information based on drug names.",
        "detailed_description": "Retrieve pediatric use information based on drug names.",
        "toolType": "API",
        "tags": [
            "api-pagination-support",
            "clinical-pharmacology",
            "drug-name-query",
            "drug-safety-monitoring",
            "fda-drug-label-api",
            "health-regulation-compliance",
            "medication-safety-info",
            "pediatric-clinical-research",
            "pediatric-dosing-guidelines",
            "pediatric-pharmacotherapy",
            "pediatric-use-lookup",
            "regulatory-label-data"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pediatric use information",
            "Filter by drug name",
            "Limit number of records returned",
            "Skip a number of records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Amoxicillin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7bb9b29-7643-4e0e-9c7e-8c81d45a8f3b",
        "name": "FDA_get_drug_name_by_pharmacodynamics",
        "description": "Retrieve drug names based on pharmacodynamics information.",
        "detailed_description": "Retrieve the drug name based on pharmacodynamics information.",
        "toolType": "API",
        "tags": [
            "active-ingredient-identification",
            "biomedical-text-mining",
            "clinical-pharmacology",
            "drug-database-query",
            "drug-name-retrieval",
            "fda-drug-label",
            "mechanism-of-action-search",
            "medicine-information-extraction",
            "pharmacodynamics-search",
            "pharmacological-profile-search",
            "pharmacology-data-mining",
            "therapeutic-agent-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by pharmacodynamics information",
            "Return brand_name and generic_name fields",
            "Support limit and skip for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pharmacodynamics": {
                "type": "string",
                "description": "Information about the biochemical or physiologic pharmacologic effects of the drug.",
                "required": true
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pharmacodynamics": {
                    "type": "string",
                    "description": "Information about the biochemical or physiologic pharmacologic effects of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pharmacodynamics": "Inhibits neurotransmitter metabolism by targeting enzyme X",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29a5ed-0fdb-4c0e-b46a-1e531682b73d",
        "name": "FDA_get_pharmacodynamics_by_drug_name",
        "description": "Retrieve pharmacodynamics information for a given drug.",
        "detailed_description": "Retrieve pharmacodynamics information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "dose-response-data",
            "drug-action-profiles",
            "drug-development-research",
            "drug-name-lookup",
            "fda-drug-label-query",
            "paginated-data-retrieval",
            "pharmacodynamic-properties",
            "pharmacodynamics-retrieval",
            "pharmacology-database-search",
            "regulatory-drug-information",
            "string-parameter-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pharmacodynamics information by drug name",
            "Supports pagination with limit and skip",
            "Searches using brand or generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d94c1e20-2a60-4e17-b3f1-5ad8a1e76491",
        "name": "FDA_get_drug_name_by_pharmacogenomics",
        "description": "Retrieve drug names using pharmacogenomics information.",
        "detailed_description": "Retrieve the drug name based on pharmacogenomics field information.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "bioinformatics-api",
            "clinical-decision-support",
            "clinical-pharmacology",
            "drug-name-retrieval",
            "fda-drug-label-access",
            "genomics-driven-prescribing",
            "paginated-api-response",
            "personalized-therapy",
            "pharmacogenetic-search",
            "pharmacogenomics-query",
            "precision-medicine"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names using pharmacogenomics information",
            "Support pagination with limit and skip parameters",
            "Provides brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pharmacogenomics": {
                "type": "string",
                "description": "Pharmacogenomics information to search for."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pharmacogenomics": {
                    "type": "string",
                    "description": "Pharmacogenomics information to search for.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pharmacogenomics": "CYP2C19 poor metabolizer",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a1e5c2e-8b9d-4fa5-96fc-1e2b3c4d5f6a",
        "name": "FDA_get_pharmacogenomics_info_by_drug_name",
        "description": "Retrieve pharmacogenomics information for a specified drug.",
        "detailed_description": "Retrieve pharmacogenomics information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-gene-interactions",
            "drug-name-query",
            "drug-safety-label",
            "fda-drug-label",
            "gene-drug-response",
            "limit-skip-parameters",
            "personalized-medicine",
            "pharmacogenetic-markers",
            "pharmacogenetics",
            "pharmacogenomics-database",
            "pharmacogenomics-info"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pharmacogenomics information for a given drug name",
            "Supports pagination through limit and skip parameters",
            "Searches openfda.brand_name and openfda.generic_name fields",
            "Returns pharmacogenomics data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "warfarin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7a12b2e-8cd1-4d35-b472-0f18a5c9d2f3",
        "name": "FDA_get_drug_names_by_pharmacokinetics",
        "description": "Retrieve drug names based on pharmacokinetic profiles, including absorption, distribution, elimination, metabolism, interactions, and patient populations.",
        "detailed_description": "Retrieve drug names based on specific pharmacokinetics information, such as absorption, distribution, elimination, metabolism, drug interactions, and specific patient populations.",
        "toolType": "API",
        "tags": [
            "adme-profiling",
            "bioavailability-information",
            "clinical-pharmacology",
            "drug-database-search",
            "drug-interaction-data",
            "drug-name-retrieval",
            "fda-drug-label",
            "indication-based-search",
            "patient-population-specific",
            "pharmaceutical-research",
            "pharmacokinetic-profiling",
            "pharmacokinetics-query",
            "regulatory-affairs"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by pharmacokinetics information",
            "Support optional filtering by indication",
            "Pagination via limit and skip parameters",
            "Returns brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pharmacokinetics_info": {
                "type": "string",
                "description": "Information about the clinically significant pharmacokinetics of a drug or active metabolites."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pharmacokinetics_info": {
                    "type": "string",
                    "description": "Information about the clinically significant pharmacokinetics of a drug or active metabolites.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pharmacokinetics_info": "high oral bioavailability",
            "indication": "hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8e246e77-82fd-4f4e-9a3f-5bed2d727c5a",
        "name": "FDA_get_pharmacokinetics_by_drug_name",
        "description": "Retrieve pharmacokinetics details for a specified drug by its name.",
        "detailed_description": "Retrieve pharmacokinetics information (e.g. absorption, distribution, elimination, metabolism, drug interactions, and specific patient populations) for a specific drug based on its name.",
        "toolType": "API",
        "tags": [
            "adme-parameters",
            "clinical-pharmacology",
            "clinical-research",
            "drug-distribution-info",
            "drug-elimination-info",
            "drug-interactions-info",
            "drug-metabolism-data",
            "fda-drug-label",
            "pharmacokinetics-retrieval",
            "pk-data-query",
            "pk-profile",
            "population-pharmacokinetics",
            "regulatory-science"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA-drug-label",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pharmacokinetics information for a drug by name",
            "Search by brand or generic name fields",
            "Limit number of records returned",
            "Skip a specified number of records",
            "Returns pharmacokinetics data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b5ac378-f540-4db1-9e1d-e5f2c380a6a3",
        "name": "FDA_get_drug_name_by_precautions",
        "description": "Retrieve drug names based on precautions information.",
        "detailed_description": "Retrieve the drug name based on the precautions field information.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "drug-name-retrieval",
            "drug-precautions",
            "drug-safety-warning",
            "fda-drug-label",
            "json-response-format",
            "pharmacology-data",
            "pharmacovigilance",
            "precautions-based-search",
            "regulatory-affairs",
            "string-field-search",
            "textual-data-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on precautions information",
            "Return brand and generic names",
            "Support record limiting and skipping"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "precautions": {
                "type": "string",
                "description": "Information about any special care to be exercised for safe and effective use of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "precautions": {
                    "type": "string",
                    "description": "Information about any special care to be exercised for safe and effective use of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "precautions": "Use with caution in patients with renal impairment",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3a9c6e2-2c3d-4f12-9a8b-5d6e7f8a9c0b",
        "name": "FDA_get_precautions_by_drug_name",
        "description": "Retrieves drug precaution information by name.",
        "detailed_description": "Retrieve precautions information based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-guidelines",
            "drug-name-query",
            "drug-safety-information",
            "fda-drug-label",
            "fda-precautions-retrieval",
            "medication-warning-labels",
            "paginated-data-access",
            "pharmaceutical-labeling",
            "pharmacovigilance-data",
            "prescription-safety",
            "regulatory-compliance"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve precautions information for a given drug",
            "Search by brand_name and generic_name fields",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f5b8a27e-3d44-4d6d-b872-2fa64f9e8c3a",
        "name": "FDA_get_drug_names_by_pregnancy_effects_info",
        "description": "Retrieve drug names based on specified pregnancy effects information.",
        "detailed_description": "Retrieve drug names based on information about effects the drug may have on pregnant women or on a fetus.",
        "toolType": "API",
        "tags": [
            "adverse-pregnancy-effects",
            "clinical-pharmacology",
            "drug-name-retrieval",
            "fda-drug-labels",
            "fetal-risk-assessment",
            "indication-based-filtering",
            "maternal-fetal-safety",
            "pharmacovigilance-database",
            "pregnancy-safety-search",
            "query-pagination",
            "regulatory-science",
            "string-query-input",
            "structured-json-output",
            "teratogenicity-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels by pregnancy effects information",
            "Filter results by drug indication",
            "Support pagination with limit and skip parameters",
            "Return brand and generic drug names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pregnancy_info": {
                "type": "string",
                "description": "Information about the effects on pregnancy to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pregnancy_info": {
                    "type": "string",
                    "description": "Information about the effects on pregnancy to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pregnancy_info": "may cause fetal harm",
            "indication": "hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "6f8d0f60-9532-4cba-b4fc-3a1ea220a7ef",
        "name": "mesh_get_subjects_by_pharmacological_action",
        "description": "Retrieve MeSH subjects matching a specified pharmacological action.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching pharmacological actions.",
        "toolType": "Database",
        "tags": [
            "biomedical-informatics",
            "case-sensitive-filter",
            "controlled-vocabulary-query",
            "drug-action-indexing",
            "exact-match-filter",
            "literature-indexing",
            "medical-subject-headings",
            "mesh-taxonomy-search",
            "mesh-term-retrieval",
            "pharmacological-action-search",
            "subject-heading-discovery",
            "thesaurus-navigation",
            "xml-based-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH2025",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by pharmacological action.",
            "Support case-sensitive and exact matching options.",
            "Limit the number of returned results.",
            "Extract metadata fields including subject name, ID, actions, concepts, synonyms, scope notes, hierarchy numbers, creation and revision dates.",
            "Retrieve related MeSH subjects."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Pharmacological action to search for in MeSH subjects"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the pharmacological action query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the pharmacological action query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Pharmacological action to search for in MeSH subjects",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the pharmacological action query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the pharmacological action query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Analgesic Agents",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1e5f6d2-9b3c-4d7e-8f0a-1b2c3d4e5f6a",
        "name": "mesh_get_subjects_by_subject_scope_or_definition",
        "description": "Search MeSH subjects by their scope notes (definitions).",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching scopes (definitions).",
        "toolType": "Database",
        "tags": [
            "biomedical-ontology-search",
            "case-sensitive-search",
            "definition-based-filtering",
            "exact-match-filter",
            "medical-subject-heading",
            "mesh-ontology-query",
            "mesh-scope-note-matching",
            "mesh-subject-search",
            "query-result-limiting",
            "scope-note-search",
            "semantic-text-search",
            "subject-heading-lookup",
            "xml-based-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by scope notes",
            "Supports case-sensitive searches",
            "Supports exact match searches",
            "Configurable result limit"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in the scope notes of MeSH subjects"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in the scope notes of MeSH subjects",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 50
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "mesh_get_subjects_by_subject_name",
        "description": "Search MeSH subjects by matching names.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with matching names.",
        "toolType": "Database",
        "tags": [
            "biomedical-text-mining",
            "biomedical-thesaurus",
            "case-sensitive-search",
            "concept-synonym-search",
            "controlled-vocabulary-search",
            "exact-match-query",
            "literature-indexing",
            "medical-subject-heading",
            "mesh-lookup",
            "mesh-subject-search",
            "ontology-navigation",
            "ontology-query",
            "subject-heading-retrieval",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH2025",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by subject name, key concepts, and synonyms",
            "Support case-sensitive searches",
            "Support exact match searches",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in the name of each MeSH subject and the names of the subject's key concepts and concept synonyms."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in the name of each MeSH subject and the names of the subject's key concepts and concept synonyms.",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "mesh_get_subjects_by_subject_id",
        "description": "Search and retrieve MeSH subjects by their Descriptor UI.",
        "detailed_description": "Find MeSH (Medical Subject Heading) subjects with a matching subject ID (also called Descriptor UI).",
        "toolType": "Database",
        "tags": [
            "biomedical-ontology",
            "case-sensitive-match",
            "controlled-vocabulary",
            "descriptor-ui-search",
            "exact-match-filter",
            "medical-subject-heading",
            "mesh-id-query",
            "mesh-subject-lookup",
            "metadata-extraction",
            "ontology-term-retrieval",
            "subject-id-search",
            "xml-api-search"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "MeSH2025",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search MeSH subjects by subject ID",
            "Support case-sensitive and case-insensitive search",
            "Support exact match filtering",
            "Limit number of results",
            "Parse XML records via specified XPath",
            "Extract and map multiple fields from XML records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query ID to search for among the MeSH subject IDs"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search for the query"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match for the query"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query ID to search for among the MeSH subject IDs",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search for the query",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match for the query",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 1000
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "D012345",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 50
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "drugbank_get_drug_basic_info_by_drug_name_or_drugbank_id",
        "description": "Retrieve basic drug information from DrugBank by name or ID",
        "detailed_description": "Get basic drug information including name, description, CAS number, and approval status by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "approval-status",
            "cas-registry-number",
            "case-sensitive-search",
            "chemoinformatics",
            "drug-basic-info",
            "drug-discovery-support",
            "drug-identifier",
            "drug-name-search",
            "drugbank-id-lookup",
            "exact-match-search",
            "pharmaceutical-research",
            "pharmacological-data",
            "regulatory-compliance-data",
            "xml-data-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug records by name or DrugBank ID",
            "Retrieve drug name, description, CAS number, UNII, state, type, approval groups, synonyms, and entry dates",
            "Support case-sensitive search",
            "Support exact match search",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or DrugBank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match with the queried name or ID"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or DrugBank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match with the queried name or ID",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "81d1f419-7c0d-4a23-8c1e-52b89e6c8d6f",
        "name": "drugbank_get_indications_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug indications and therapeutic uses by drug name or DrugBank ID.",
        "detailed_description": "Get drug indications and therapeutic uses by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-query",
            "clinical-indications",
            "drug-indications",
            "drug-information-service",
            "drug-search",
            "drugbank-integration",
            "exact-match-search",
            "indication-retrieval",
            "pharmaceutical-informatics",
            "pharmacology-data",
            "therapeutic-uses",
            "xml-data-access"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug indications and therapeutic uses by name or DrugBank ID",
            "Perform case-sensitive or case-insensitive searches",
            "Support exact or partial matches",
            "Limit number of results returned",
            "Extract drug categories",
            "Retrieve ATC codes and hierarchy",
            "Retrieve drug synonyms"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e5a1f7cd-3d1b-4a19-8a8f-4f2b0e2d5a79",
        "name": "drugbank_get_drug_name_and_description_by_indication",
        "description": "Search DrugBank by indication and return drug name, primary DrugBank ID, and description.",
        "detailed_description": "Get drug name, Drugbank ID, and description by its indication.",
        "toolType": "Database",
        "tags": [
            "bioinformatics-resource",
            "chemoinformatics-search",
            "clinical-indication-query",
            "drug-description-fetch",
            "drug-indication-search",
            "drug-name-retrieval",
            "drugbank-id-retrieval",
            "drugbank-query",
            "indication-based-lookup",
            "pharmacology-database",
            "xml-api-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank XML by indication",
            "Retrieve drug name",
            "Retrieve primary DrugBank ID",
            "Retrieve drug description"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug indication to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug indication to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "cancer",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "6f3f2372-42a8-4d8d-8949-2f9b5c3e4a7d",
        "name": "drugbank_get_pharmacology_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug pharmacodynamics, mechanism of action, and pharmacokinetics by name or DrugBank ID.",
        "detailed_description": "Get drug pharmacodynamics, mechanism of action, and pharmacokinetics by drug name or Drugbank ID.",
        "toolType": "Database",
        "tags": [
            "biomedical-informatics",
            "clinical-pharmacology",
            "drug-identifier-query",
            "drug-information-retrieval",
            "drug-profile-fetch",
            "drugbank-pharmacology",
            "in-silico-pharmacology",
            "mechanism-of-action",
            "pharmaceutical-research",
            "pharmacodynamics-retrieval",
            "pharmacokinetics-data",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by name, DrugBank ID, or synonyms",
            "Retrieve pharmacodynamics",
            "Retrieve mechanism of action",
            "Retrieve pharmacokinetics details (absorption, metabolism, half-life, etc.)"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "49b2c634-8d47-4a21-8d9e-5b2e9fa2a7b1",
        "name": "drugbank_get_drug_name_description_pharmacology_by_mechanism_of_action",
        "description": "Retrieve drug details by mechanism of action, including name, ID, description, pharmacodynamics, and pharmacokinetics.",
        "detailed_description": "Get drug name, ID, description, pharmacodynamics, mechanism of action, and pharmacokinetics by drug mechanism of action.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-search",
            "drug-description-extraction",
            "drug-discovery-assistance",
            "drug-id-fetch",
            "drug-mechanism-of-action",
            "drugbank-query",
            "exact-match-filter",
            "limit-based-results",
            "mechanism-of-action-search",
            "pharmacodynamics-retrieval",
            "pharmacoinformatics",
            "pharmacokinetics-retrieval",
            "xml-data-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by mechanism of action using XML dataset",
            "Extract drug details: name, DrugBank ID, description, pharmacodynamics, mechanism of action",
            "Retrieve pharmacokinetic properties: absorption, metabolism, half-life, protein binding, route of elimination, volume of distribution, clearance",
            "Support case-sensitive or case-insensitive and exact or partial matching of queries",
            "Limit number of returned records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Query string to search for in mechanism of action descriptions"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Query string to search for in mechanism of action descriptions",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "inhibition of cyclooxygenase",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "bf2a3e1d-5c8a-4dcf-9f75-2a1c2d3e4f56",
        "name": "drugbank_get_drug_interactions_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug interactions and contraindications using a drug name or DrugBank ID.",
        "detailed_description": "Get drug interactions and contraindications by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "api-query",
            "case-sensitive-search",
            "clinical-decision-support",
            "contraindication-check",
            "drug-compatibility-analysis",
            "drug-interaction-retrieval",
            "drug-name-search",
            "drugbank-id-search",
            "exact-match-search",
            "pharmaceutical-safety",
            "pharmacovigilance",
            "result-limit-control",
            "xml-data-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by name or DrugBank ID",
            "Retrieve details of interacting drugs",
            "Retrieve food and dietary interactions",
            "Support case-sensitive and exact matching searches",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name to search for interactions"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name to search for interactions",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3d5f1e5c-2b9a-4f7c-ae74-8d9b1a234567",
        "name": "drugbank_get_targets_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug targets, enzymes, carriers, and transporters using a drug name or DrugBank ID.",
        "detailed_description": "Get drug targets, enzymes, carriers, and transporters by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-filtering",
            "cheminformatics",
            "drug-discovery-support",
            "drug-protein-interactions",
            "drug-target-retrieval",
            "drugbank-search",
            "enzyme-carrier-transporter-mapping",
            "exact-match-search",
            "pharmacology-data-mining",
            "pharmacology-research",
            "target-annotation",
            "xml-data-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug targets, enzymes, carriers, and transporters by drug name or DrugBank ID",
            "Supports case-sensitive and exact match searches",
            "Allows setting a limit on returned results",
            "Parses DrugBank XML records into structured JSON"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f3c49d-4814-4d85-9c61-2e4b1d3a1a9f",
        "name": "drugbank_get_drug_name_and_description_by_target_name",
        "description": "Fetch drug names and descriptions linked to a specified target protein, enzyme, carrier, or transporter.",
        "detailed_description": "Get associated drug names and descriptions for a particular target, enzyme, carrier, or transporter protein.",
        "toolType": "Database",
        "tags": [
            "carrier-transporter-drugs",
            "case-sensitive-search",
            "drug-information-retrieval",
            "drug-target-search",
            "drugbank-integration",
            "enzyme-inhibitor-search",
            "exact-match-filter",
            "pharmacology-database",
            "protein-target-mapping",
            "result-limiting",
            "target-based-drug-discovery",
            "xml-api-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank XML for drugs by target, enzyme, carrier, or transporter name",
            "Retrieve drug names, primary DrugBank IDs, and descriptions",
            "Support case-sensitive and exact-match filtering",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Target, enzyme, carrier, or transporter name to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Target, enzyme, carrier, or transporter name to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "EGFR",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4a1a4f2-2a6d-4efd-8f9c-1eae4b3bf13a",
        "name": "drugbank_get_drug_products_by_name_or_drugbank_id",
        "description": "Retrieves commercial drug products, dosage forms, and pricing information for a given drug name or DrugBank ID.",
        "detailed_description": "Get commercial drug products, dosage forms, and pricing informatiomon by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-search",
            "commercial-drug-data",
            "dosage-form-lookup",
            "drug-database-access",
            "drug-name-search",
            "drug-pricing-info",
            "drug-product-retrieval",
            "drugbank-id-query",
            "exact-match-search",
            "pharmaceutical-catalog",
            "pharmacology-data",
            "xml-based-query"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by name or DrugBank ID",
            "Retrieve commercial drug product details",
            "Retrieve dosage forms",
            "Retrieve pricing information",
            "Supports case-sensitive and exact match searches",
            "Limit results count"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 3
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3c4e5a6-b7d8-4e9f-8a0b-1c2d3e4f5a6b",
        "name": "drugbank_get_safety_by_drug_name_or_drugbank_id",
        "description": "Fetch toxicity, contraindications, and safety data for drugs via name or DrugBank ID.",
        "detailed_description": "Get drug toxicity, contraindications, and safety information by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "adverse-effects-data",
            "case-sensitive-search",
            "contraindications-info",
            "drug-safety",
            "drug-safety-profile",
            "drugbank-lookup",
            "exact-match-search",
            "id-based-search",
            "pharmacology-data",
            "pharmacovigilance",
            "toxicity-assessment",
            "xml-api-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drugs using name, DrugBank ID, or synonyms",
            "Retrieve drug toxicity and safety information",
            "Retrieve affected organisms and food interactions",
            "Support case-sensitive and exact-match search options",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": true,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1a6cc58-ff3f-4aec-9e8d-6d8b5c8a1234",
        "name": "drugbank_get_drug_chemistry_by_drug_name_or_drugbank_id",
        "description": "Retrieve key chemical properties of drugs from DrugBank using drug name or DrugBank ID.",
        "detailed_description": "Get drug chemical properties including molecular formula, weight, and structure by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "chemical-database",
            "chemical-structure",
            "cheminformatics",
            "drug-chemistry",
            "drug-discovery",
            "drug-property-retrieval",
            "drugbank-query",
            "in-silico-screening",
            "molecular-formula",
            "molecular-weight",
            "pharmacology-data",
            "small-molecule-properties"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank records by drug name, synonym, or DrugBank ID",
            "Retrieve chemical properties including molecular formula, molecular weight, melting point, water solubility, and isoelectric point",
            "Extract classification information (kingdom, superclass, class, subclass)",
            "Return additional identifiers like CAS number and UNII",
            "Support for case-sensitive and exact match searching",
            "Limit the number of returned results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a38c4c-2a94-4b73-9a7a-c2f0d3b9e8a1",
        "name": "drugbank_get_drug_references_by_drug_name_or_drugbank_id",
        "description": "Fetch drug literature references, patents, and external links by drug name or DrugBank ID.",
        "detailed_description": "Get drug literature references, patents, and external links by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "biomedical-database-search",
            "case-sensitive-search",
            "drug-name-query",
            "drug-reference-retrieval",
            "drugbank-api-access",
            "drugbank-id-search",
            "exact-match-filtering",
            "external-link-aggregation",
            "literature-mining",
            "patent-search",
            "pharmacological-data",
            "xml-data-fetch"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug literature references by drug name or DrugBank ID",
            "Retrieve patent information associated with a drug",
            "Extract external identifiers and external links for drugs",
            "Support case-sensitive and exact match querying",
            "Limit number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for references"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for references",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4e65766-4e38-4d1f-bb37-8b2e1bb5c434",
        "name": "drugbank_get_drug_pathways_and_reactions_by_drug_name_or_drugbank_id",
        "description": "Retrieve drug pathways and metabolic reactions using a drug name or DrugBank ID.",
        "detailed_description": "Get drug pathways and metabolic reactions by drug name or DrugBank ID.",
        "toolType": "Database",
        "tags": [
            "bioinformatics",
            "case-sensitive-search",
            "cheminformatics",
            "drug-discovery-research",
            "drug-information-retrieval",
            "drug-name-or-id-search",
            "drug-pathway-retrieval",
            "drugbank-data-query",
            "exact-match-filtering",
            "mechanism-of-action-analysis",
            "metabolic-reaction-extraction",
            "pharmacokinetics-analysis",
            "systems-biology",
            "xml-data-integration"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search DrugBank data by drug name or DrugBank ID",
            "Retrieve drug pathways (SMPDB ID, name, category)",
            "Retrieve metabolic reactions (sequence, left and right elements)",
            "Support case-sensitive and exact-match search options",
            "Limit number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Drug name or Drugbank ID to search for"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Select True to perform a case-sensitive search"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Select True to require an exact match"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Drug name or Drugbank ID to search for",
                    "minLength": 1
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Select True to perform a case-sensitive search",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Select True to require an exact match",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "Aspirin",
            "case_sensitive": false,
            "exact_match": false,
            "limit": 5
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3c1f4a6-9d2a-4b7f-8f74-cd831ac7d2e5",
        "name": "get_pydeseq2_info",
        "description": "Retrieve key information about PyDESeq2, a Python package for RNA-seq differential expression analysis.",
        "detailed_description": "Get comprehensive information about PyDESeq2 \u2013 RNA-seq differential expression analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "bulk-rnaseq",
            "differential-gene-expression",
            "gene-expression-analysis",
            "information-retrieval",
            "package-documentation",
            "pydeseq2",
            "python-library",
            "rna-seq-differential-expression",
            "statistical-modeling",
            "transcriptomic-analysis",
            "workflow-integration"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pydeseq2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package overview",
            "Retrieve installation instructions",
            "Retrieve usage examples",
            "Retrieve documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyDESeq2"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyDESeq2"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3a29f6d-2c21-4d65-b1dc-5f3a281e59f8",
        "name": "get_cellxgene_census_info",
        "description": "Retrieves information about the cellxgene-census Python API, including overview, installation, usage, and documentation.",
        "detailed_description": "Get comprehensive information about cellxgene-census \u2013 access to the CELLxGENE Census single-cell data",
        "toolType": "Scientific Software Package",
        "tags": [
            "atlas-exploration",
            "bioinformatics-package",
            "cell-atlas",
            "cellxgene-census",
            "data-access",
            "data-discovery",
            "dataset-catalog",
            "information-query",
            "metadata-retrieval",
            "scrna-seq",
            "single-cell-data",
            "transcriptomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "cellxgene-census",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of the cellxgene-census package",
            "Provide installation instructions",
            "Show usage examples for querying single-cell data",
            "Link to official documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about cellxgene-census"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about cellxgene-census"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9c1a247-3b23-4bc8-80fe-8cbc18c5a59a",
        "name": "get_viennarna_info",
        "description": "Provides comprehensive information about ViennaRNA, a toolkit for RNA structure prediction and analysis",
        "detailed_description": "Get comprehensive information about ViennaRNA \u2013 RNA structure prediction and analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "computational-biology",
            "method-reference",
            "package-overview",
            "quickstart-guide",
            "rna-folding-algorithms",
            "rna-secondary-structure",
            "rna-structure-analysis",
            "rna-structure-prediction",
            "scientific-software-info",
            "tool-documentation",
            "usage-examples-guide",
            "vienna-rna-package",
            "viennarna-info"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "viennarna",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch package documentation URL",
            "Provide installation instructions",
            "Return source repository link",
            "Offer usage examples and quick start guide",
            "Summarize library description and features"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f50c1c1-8d46-4f1d-9f87-2b9e0f7d4653",
        "name": "get_reportlab_info",
        "description": "Fetch detailed information about the ReportLab PDF generation library",
        "detailed_description": "Get comprehensive information about ReportLab \u2013 PDF generation library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "code-snippets",
            "documentation-retrieval",
            "package-inspection",
            "pdf-creation",
            "pdf-reporting",
            "python-library-info",
            "python-pdf-generation",
            "quickstart-guide",
            "reportlab-documentation",
            "reportlab-library",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "ReportLab",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve detailed package information (description, category, keywords)",
            "Provide documentation and repository URLs",
            "Supply installation commands for pip and conda",
            "Show usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f6ae8d3-9f1a-4b5c-b7a8-d9876abc1234",
        "name": "get_pyvcf_info",
        "description": "Retrieve details of the pyvcf library for parsing and manipulating VCF files.",
        "detailed_description": "Get information about the pyvcf package. Python library for parsing and manipulating VCF files",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-tool",
            "computational-biology",
            "dependency-analysis",
            "genome-variant-processing",
            "genomics-analysis",
            "library-documentation",
            "package-discovery",
            "package-metadata",
            "pip-package-tool",
            "python-library-inspection",
            "python-vcf-parser",
            "pyvcf-info",
            "variant-call-format",
            "vcf-file-parsing",
            "vcf-manipulation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyvcf",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get pyvcf package information"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29d6b9-8e2e-4aab-b0b3-4d8f3a3a2c5d",
        "name": "get_kipoiseq_info",
        "description": "Retrieve information about the kipoiseq package for genomics deep learning",
        "detailed_description": "Get information about the kipoiseq package. Kipoi sequence utilities for genomics deep learning",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-utilities",
            "deep-learning-pipelines",
            "dna-sequence-encoding",
            "genomic-data-toolkit",
            "genomics-deep-learning",
            "kipoi-integration",
            "kipoi-sequence-utilities",
            "kipoiseq-info",
            "model-input-preparation",
            "package-metadata",
            "python-library-info",
            "sequence-preprocessing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "kipoiseq",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package information",
            "Access package metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f3e5a2d-8d47-4c22-bf79-9e5ba7b1d8c9",
        "name": "get_pyfasta_info",
        "description": "Retrieve metadata about the pyfasta package for efficient random access to fasta subsequences",
        "detailed_description": "Get information about the pyfasta package. Python library for efficient random access to fasta subsequences",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "computational-genomics",
            "dna-subsequence-extraction",
            "fasta-random-access",
            "fasta-subsequence-retrieval",
            "genomics-sequence-processing",
            "library-documentation",
            "package-inspection",
            "package-metadata-retrieval",
            "pyfasta-package-info",
            "python-library-metadata",
            "sequence-analysis-library",
            "sequence-data-access",
            "sequence-file-parsing",
            "version-check"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyfasta",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata of the pyfasta package",
            "Describe functionalities for random access to fasta subsequences"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a1f5c4-22d2-42c3-9b3c-0d8f4b47a29a",
        "name": "get_pyensembl_info",
        "description": "Retrieves metadata from the pyensembl package for Ensembl reference genomes.",
        "detailed_description": "Get information about the pyensembl package. Python interface to Ensembl reference genome metadata",
        "toolType": "Scientific Software Package",
        "tags": [
            "annotation-retrieval",
            "ensembl-api",
            "ensembl-metadata",
            "gene-metadata",
            "genome-coordinates",
            "genomic-annotation",
            "genomics-package",
            "metadata-fetch",
            "pyensembl-info",
            "python-bioinformatics",
            "reference-genome",
            "transcript-annotation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyensembl",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch pyensembl package information",
            "Access Ensembl reference genome metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9e38fa7-b8e1-4b9f-8f32-b6e2630a3f57",
        "name": "get_poretools_info",
        "description": "Retrieves information about the poretools Python package.",
        "detailed_description": "Get information about the poretools package. Python package: poretools",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "computational-biology",
            "dependency-management",
            "metadata-retrieval",
            "nanopore-sequencing",
            "package-documentation",
            "pip-package-query",
            "poretools-info",
            "python-package-inspection",
            "sequencing-data-analysis",
            "software-cataloging",
            "version-inspection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "poretools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata of the poretools Python package"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f12a7c12-8abc-4e67-92cb-1f23456789ab",
        "name": "get_scanpy_info",
        "description": "Provides comprehensive information about Scanpy, a scalable single-cell analysis toolkit in Python.",
        "detailed_description": "Get comprehensive information about Scanpy \u2013 scalable single-cell analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-tool",
            "omics-data-analysis",
            "package-inspector",
            "package-overview",
            "python-bioinformatics",
            "quick-start-guide",
            "scalable-analysis",
            "scanpy-documentation",
            "scanpy-info",
            "single-cell-analysis",
            "single-cell-rna-seq",
            "transcriptomics-pipeline",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scanpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve Scanpy package metadata",
            "Provide installation instructions",
            "Offer documentation and repository links",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_anndata_info",
        "description": "Retrieve detailed metadata and usage info for the AnnData package",
        "detailed_description": "Get comprehensive information about AnnData \u2013 annotated data for computational biology",
        "toolType": "Scientific Software Package",
        "tags": [
            "anndata-inspection",
            "anndata-overview",
            "annotated-data-summary",
            "computational-biology",
            "layers-information",
            "matrix-dimensions",
            "metadata-extraction",
            "obs-var-metadata",
            "python-data-structure",
            "quickstart-guide",
            "scanpy-compatibility",
            "single-cell-rna-seq",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "anndata",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide metadata for AnnData package",
            "Include usage examples",
            "Offer quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f1c72fe-8b0a-4bb6-a6ca-12e8d6e7f9a1",
        "name": "get_mudata_info",
        "description": "Retrieves detailed metadata, installation steps, and usage examples for the MuData package used in multimodal computational biology.",
        "detailed_description": "Get comprehensive information about MuData \u2013 multimodal annotated data for computational biology",
        "toolType": "Scientific Software Package",
        "tags": [
            "annotated-omics-data",
            "api-documentation",
            "bioinformatics-pipeline",
            "computational-biology",
            "data-discovery",
            "metadata-summary",
            "mudata-metadata",
            "multimodal-data",
            "muon-data-format",
            "package-inspection",
            "quickstart-guide",
            "scverse-integration",
            "single-cell-multiomics",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "mudata",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve MuData package description",
            "Provide installation instructions for MuData",
            "Access usage examples and quick start guide",
            "Return documentation and repository links for MuData"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c7b7f0d9-4c3b-4f4e-9f86-61f0dc005a85",
        "name": "get_scvelo_info",
        "description": "Provides comprehensive information and usage guidance for scVelo, a Python library for RNA velocity analysis in single-cell data.",
        "detailed_description": "Get comprehensive information about scVelo \u2013 RNA velocity analysis in single cells",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-biology",
            "dynamic-modeling",
            "example-usage",
            "gene-expression-dynamics",
            "python-bioinformatics",
            "quickstart-guide",
            "rna-velocity-analysis",
            "scRNA-seq-analysis",
            "scvelo-documentation",
            "scvelo-info",
            "single-cell-omics",
            "single-cell-rna-seq",
            "transcriptional-dynamics",
            "velocity-inference"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scvelo",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata for scVelo",
            "Provide installation commands via pip and conda",
            "Offer usage examples and quick start guide",
            "Link to documentation and repository"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3cfa0fd9-3c07-4335-a271-8f930b9c6ab4",
        "name": "get_scrublet_info",
        "description": "Retrieve comprehensive Scrublet information for single-cell doublet detection",
        "detailed_description": "Get comprehensive information about Scrublet \u2013 single-cell doublet detection",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "cell-filtering",
            "doublet-identification",
            "parameter-reference",
            "python-library",
            "quick-start-guide",
            "sc-data-analysis",
            "scRNA-seq-preprocessing",
            "scrublet-info",
            "single-cell-doublet-detection",
            "single-cell-quality-control",
            "transcriptomics-pipeline",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scrublet",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the Scrublet package",
            "Optionally include usage examples and a quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_souporcell_info",
        "description": "Retrieve information on souporcell, a scRNA-seq genotype clustering tool.",
        "detailed_description": "Get comprehensive information about souporcell \u2013 scRNA-seq genotype clustering",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-package",
            "cluster-analysis",
            "computational-genomics",
            "genotype-demultiplexing",
            "metadata-retrieval",
            "pipeline-metadata",
            "sc-rna-seq-genotype-clustering",
            "single-cell-rna-seq",
            "software-information",
            "souporcell-info",
            "tool-documentation",
            "unsupervised-clustering"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "souporcell",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of souporcell",
            "Retrieve installation instructions",
            "Retrieve usage examples",
            "Retrieve documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about souporcell"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about souporcell"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e1f8b4c7-2d5a-4c3f-8b17-3fd6e72a0cda",
        "name": "get_pyscenic_info",
        "description": "Retrieve comprehensive information on pySCENIC, a Python package for single-cell regulatory network inference",
        "detailed_description": "Get comprehensive information about pySCENIC \u2013 single-cell regulatory network inference",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-configuration",
            "bioinformatics-package",
            "computational-biology",
            "gene-regulatory-network",
            "metadata-retrieval",
            "package-metadata",
            "pyscenic-info-retrieval",
            "pyscenic-package",
            "single-cell-analysis",
            "single-cell-regulatory-network-inference",
            "software-documentation",
            "tool-documentation",
            "transcription-factor-activity",
            "transcriptomics-workflow"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyscenic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch overview of pySCENIC",
            "Retrieve installation instructions",
            "Provide usage examples",
            "Access documentation details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about pySCENIC"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about pySCENIC"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b2f6138-5cfe-4f88-9a7d-1e2f3a4b5c6d",
        "name": "FDA_get_spl_indexing_data_elements_by_drug_name",
        "description": "Retrieve SPL indexing data elements by drug name.",
        "detailed_description": "Retrieve Structured Product Labeling (SPL) indexing data elements based on drug names.",
        "toolType": "API",
        "tags": [
            "drug-information-retrieval",
            "drug-label-indexing",
            "drug-name-search",
            "fda-spl-indexing",
            "labeling-data-elements",
            "medication-indexing",
            "offset-pagination",
            "pharmaceutical-regulatory",
            "regulatory-data-retrieval",
            "spl-indexing-data",
            "structured-product-labeling",
            "xml-data-processing"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "search SPL indexing data elements using drug name",
            "paginate results with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9b2d63d-a233-4123-867d-38e7f37a9087",
        "name": "FDA_get_drug_names_by_medication_guide",
        "description": "Retrieve drug names using specific information from the medication guide.",
        "detailed_description": "Retrieve drug names based on the presence of specific information in the medication guide.",
        "toolType": "API",
        "tags": [
            "drug-name-extraction",
            "fda-drug-database",
            "fda-label-search",
            "healthcare-regulations",
            "indication-based-query",
            "label-information-retrieval",
            "medguide-info-query",
            "medication-guide-mining",
            "pharma-research",
            "pharmacovigilance",
            "regulatory-affairs",
            "text-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by medication guide information",
            "Filter results by indication",
            "Limit and skip records for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "medguide_info": {
                "type": "string",
                "description": "Information contained in the medication guide."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "medguide_info": {
                    "type": "string",
                    "description": "Information contained in the medication guide.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "medguide_info": "dosage instructions",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1e2b3c4-d5f6-7890-ab12-c3d4e5f67890",
        "name": "FDA_get_medication_guide_info_by_drug_name",
        "description": "Fetch medication guide details for a specified drug name.",
        "detailed_description": "Retrieve medication guide information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "drug-information-api",
            "drug-name-search",
            "drug-safety-information",
            "fda-drug-label",
            "healthcare-it",
            "integer-parameter",
            "json-response",
            "limit-offset-pagination",
            "medication-guide-retrieval",
            "patient-education-material",
            "pharmacology",
            "pharmacovigilance-data",
            "regulatory-science",
            "string-parameter"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search medication guide by drug name",
            "Supports brand and generic name lookup",
            "Paginate results with limit and skip",
            "Returns SPL medication guide data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1f8a155-12be-4e95-8bd1-5e0f531da2e8",
        "name": "FDA_get_drug_name_from_patient_package_insert",
        "description": "Get drug brand and generic names from a patient package insert.",
        "detailed_description": "Retrieve the drug name based on the information provided in the patient package insert.",
        "toolType": "API",
        "tags": [
            "drug-identification",
            "drug-name-extraction",
            "fda-drug-label",
            "fda-label-parsing",
            "medication-information-retrieval",
            "nlp-extraction",
            "package-insert-text",
            "patient-package-insert-analysis",
            "pharmacovigilance",
            "prescription-information",
            "regulatory-compliance",
            "regulatory-label-processing",
            "text-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug labels using patient package insert text.",
            "Retrieve brand and generic drug names.",
            "Support pagination through limit and skip parameters."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "patient_package_insert": {
                "type": "string",
                "description": "Information necessary for patients to use the drug safely and effectively."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "patient_package_insert": {
                    "type": "string",
                    "description": "Information necessary for patients to use the drug safely and effectively.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "patient_package_insert": "Take one tablet daily with food.",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f3c5d8-1a4b-4a2c-9f87-6e0d3c73e3f5",
        "name": "FDA_get_patient_package_insert_from_drug_name",
        "description": "Retrieve patient package insert information by drug name.",
        "detailed_description": "Retrieve the patient package insert information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "clinical-pharmacy-support",
            "drug-name-search",
            "fda-label-lookup",
            "healthcare-information-access",
            "json-paginated-response",
            "package-insert-retrieval",
            "patient-information-leaflet",
            "patient-package-insert",
            "pharmacovigilance-data",
            "ppi-retrieval",
            "prescribing-information-fetch",
            "regulatory-document-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search patient package insert by drug name",
            "Limit number of records",
            "Skip a number of records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2b34609-5c4a-4d5f-a8bd-1c9f1102e7a2",
        "name": "FDA_get_drug_names_by_ingredient",
        "description": "Retrieve drug names by ingredient",
        "detailed_description": "Retrieve drug names based on a specific ingredient present in the drug product.",
        "toolType": "API",
        "tags": [
            "active-ingredient-lookup",
            "active-pharmaceutical-ingredient",
            "drug-indication-filter",
            "drug-name-retrieval",
            "drug-nomenclature",
            "fda-approved-drugs",
            "fda-drug-labels",
            "ingredient-based-search",
            "medication-information",
            "pharmaceutical-database",
            "pharmaceutical-research",
            "regulatory-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug products by ingredient",
            "Filter by indication",
            "Paginate results with limit and skip",
            "Return brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ingredient_name": {
                "type": "string",
                "description": "The name of the ingredient to search for in drug products."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ingredient_name": {
                    "type": "string",
                    "description": "The name of the ingredient to search for in drug products.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "ingredient_name": "Ibuprofen",
            "indication": "Pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c7b9b4f-12a0-4f76-b6e6-5a1b2c3d4e5f",
        "name": "FDA_get_ingredients_by_drug_name",
        "description": "Retrieve a list of drug ingredients by drug name.",
        "detailed_description": "Retrieve a list of drug ingredients based on the drug name.",
        "toolType": "API",
        "tags": [
            "active-ingredient-lookup",
            "drug-information-api",
            "drug-ingredient-retrieval",
            "drug-safety",
            "fda-drug-label",
            "healthcare-informatics",
            "inactive-ingredient-lookup",
            "json-response",
            "medication-composition",
            "paginated-data",
            "pharmaceutical-database",
            "pharmaceutical-regulation",
            "regulatory-affairs",
            "text-input-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug ingredients based on drug name",
            "Supports limit and skip for pagination",
            "Searches using openfda.brand_name and openfda.generic_name",
            "Returns spl_product_data_elements"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f7a2e2b1-5c9f-4f3e-9c49-8d29e1a245ff",
        "name": "FDA_get_spl_unclassified_section_by_drug_name",
        "description": "Retrieve SPL unclassified section info by drug name.",
        "detailed_description": "Retrieve the SPL unclassified section information based on the drug name.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "drug-information-retrieval",
            "drug-label-sections",
            "fda-drug-label",
            "healthcare-data-api",
            "label-section-extraction",
            "pharmaceutical-regulatory",
            "pharmacovigilance",
            "regulatory-compliance-data",
            "restful-api",
            "spl-api",
            "spl-unclassified-section",
            "structured-product-labeling",
            "unclassified-section-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search SPL unclassified sections using drug name",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7f92a93-0cbd-4f01-9a2b-3f7d8eac1c2d",
        "name": "FDA_get_drug_name_by_stop_use_info",
        "description": "Retrieve drug names based on stop use information.",
        "detailed_description": "Retrieve the drug name based on the stop use information provided.",
        "toolType": "API",
        "tags": [
            "adverse-event-warning",
            "discontinuation-guidelines",
            "drug-name-retrieval",
            "drug-safety-monitoring",
            "fda-drug-label",
            "label-data-extraction",
            "medical-text-search",
            "pagination-support",
            "parameterized-query",
            "pharmaceutical-discontinuation",
            "pharmacovigilance-query",
            "regulatory-compliance",
            "stop-use-info-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names using stop use information",
            "Return brand and generic names of drugs",
            "Supports pagination via limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "stop_use_info": {
                "type": "string",
                "description": "Information about when use of the drug product should be discontinued immediately and a doctor consulted."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "stop_use_info": {
                    "type": "string",
                    "description": "Information about when use of the drug product should be discontinued immediately and a doctor consulted.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "stop_use_info": "If patient experiences severe rash or difficulty breathing, discontinue use immediately.",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "FDA_get_stop_use_info_by_drug_name",
        "description": "Retrieve stop use information for a given drug name.",
        "detailed_description": "Retrieve stop use information based on the drug name provided.",
        "toolType": "API",
        "tags": [
            "adverse-event-alert",
            "drug-name-query",
            "drug-safety-notice",
            "fda-drug-labeling",
            "healthcare-decision-support",
            "label-data-retrieval",
            "medication-discontinuation",
            "pagination-support",
            "pharmacovigilance",
            "regulatory-compliance",
            "stop-use-information",
            "structured-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve stop use information based on drug name",
            "Supports pagination via 'limit' and 'skip' parameters",
            "Returns 'stop_use' field"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a12f890-ebcd-4b3f-9a2b-1f45c6d7890e",
        "name": "FDA_get_drug_name_by_storage_and_handling_info",
        "description": "Get drug names based on storage and handling details.",
        "detailed_description": "Retrieve the drug name based on storage and handling information.",
        "toolType": "API",
        "tags": [
            "cold-chain-storage",
            "drug-name-extraction",
            "drug-safety",
            "fda-drug-label",
            "handling-requirements",
            "json-response-format",
            "label-data-search",
            "pharmaceutical-regulatory",
            "skip-limit-pagination",
            "storage-conditions",
            "storage-handling-query",
            "text-input-query"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by storage and handling information",
            "Retrieve brand and generic names of drugs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "storage_info": {
                "type": "string",
                "description": "Information about the storage and handling of the drug product."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "storage_info": {
                    "type": "string",
                    "description": "Information about the storage and handling of the drug product.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "storage_info": "Keep refrigerated between 2-8\u00b0C",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c2d4a6e8-0123-4567-89ab-cdef01234567",
        "name": "FDA_get_storage_and_handling_info_by_drug_name",
        "description": "Get storage and handling information for a drug by its name.",
        "detailed_description": "Retrieve storage and handling information based on the drug name.",
        "toolType": "API",
        "tags": [
            "cold-chain-management",
            "drug-handling-requirements",
            "drug-storage-information",
            "fda-drug-label",
            "json-api",
            "limit-skip-pagination",
            "pharmaceutical-storage",
            "pharmacy-logistics",
            "regulatory-compliance",
            "search-by-drug-name",
            "shelf-life-guidelines",
            "storage-and-handling",
            "temperature-control"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve storage and handling information",
            "Search by drug name using brand or generic name",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8a1b2c-4d5e-6f7a-8b9c-d0e1f2a3b4c5",
        "name": "FDA_get_drug_names_by_safety_summary",
        "description": "Retrieve drug names based on safety and effectiveness summaries.",
        "detailed_description": "Retrieve drug names based on the summary of safety and effectiveness information.",
        "toolType": "API",
        "tags": [
            "clinical-indication-search",
            "drug-name-retrieval",
            "drug-safety-profiling",
            "effectiveness-summary-search",
            "fda-label-search",
            "indication-based-filter",
            "paginated-result-output",
            "pharmaceutical-regulation-data",
            "pharmacoepidemiology",
            "pharmacovigilance-tool",
            "regulatory-label-query",
            "safety-summary-search",
            "text-based-drug-search",
            "toxicology-data-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Searches drug safety and effectiveness summaries",
            "Filters by indication",
            "Supports pagination via limit and skip",
            "Returns brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "summary_text": {
                "type": "string",
                "description": "Text to search within the summary of safety and effectiveness field."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "summary_text": {
                    "type": "string",
                    "description": "Text to search within the summary of safety and effectiveness field.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "summary_text": "liver toxicity",
            "indication": "hepatitis",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "FDA_get_safety_summary_by_drug_name",
        "description": "Get a summary of safety and effectiveness information for a specified drug.",
        "detailed_description": "Retrieve a summary of safety and effectiveness information based on the drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-reporting",
            "clinical-research",
            "drug-regulation",
            "drug-safety-summary",
            "efficacy-summary",
            "fda-drug-safety",
            "fda-label-information",
            "medication-safety",
            "paginated-api",
            "pharmacoepidemiology",
            "pharmacovigilance",
            "regulatory-affairs",
            "safety-and-effectiveness"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve safety and effectiveness summary by drug name",
            "Search by brand or generic name",
            "Support pagination with limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug (either brand name or generic name)."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug (either brand name or generic name).",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Lipitor",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b2f5ff47-5e7c-4f8b-9c64-d13e187092dc",
        "name": "FDA_get_drug_names_by_teratogenic_effects",
        "description": "Fetches drug names filtered by teratogenic effect categories.",
        "detailed_description": "Retrieve drug names based on specific teratogenic effects categories.",
        "toolType": "API",
        "tags": [
            "clinical-research-tool",
            "drug-name-retrieval",
            "drug-safety-analysis",
            "fda-drug-label-search",
            "fetal-toxicity-data",
            "indication-based-search",
            "pharmacovigilance",
            "pregnancy-category-query",
            "record-pagination",
            "regulatory-affairs",
            "teratogenicity-filter",
            "teratology-information"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names by teratogenic effects",
            "Filter results by drug indication",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "teratogenic_effects": {
                "type": "string",
                "description": "The teratogenic effects category to search for (e.g., Pregnancy category A, B, C, D, or X)."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "teratogenic_effects": {
                    "type": "string",
                    "description": "The teratogenic effects category to search for (e.g., Pregnancy category A, B, C, D, or X).",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "teratogenic_effects": "Pregnancy category C",
            "indication": "Hypertension",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fc3f1cb5-8aea-4d0f-9a39-f8c823627266",
        "name": "FDA_get_teratogenic_effects_by_drug_name",
        "description": "Fetch teratogenic effects of a drug by name.",
        "detailed_description": "Retrieve teratogenic effects information based on the drug name.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-name-query",
            "drug-safety-assessment",
            "drug-teratogenicity",
            "fda-drug-label",
            "fetotoxicity-information",
            "healthcare-decision-support",
            "pharmacovigilance",
            "pregnancy-safety",
            "reproductive-toxicity",
            "teratogenicity-data",
            "toxicology-database"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search teratogenic effects by drug name",
            "Returns teratogenic_effects field",
            "Supports pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug (either brand name or generic name)."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug (either brand name or generic name).",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8f3d1-1e2c-4f3a-9f7b-0a8d1c2e3b4f",
        "name": "FDA_get_drug_names_by_population_use",
        "description": "Retrieve drug names used in specific populations like pregnant women, nursing mothers, pediatric and geriatric patients.",
        "detailed_description": "Retrieve drug names based on their use in specific populations, such as pregnant women, nursing mothers, pediatric patients, and geriatric patients.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-indexing",
            "drug-name-retrieval",
            "fda-database-access",
            "fda-drug-label",
            "geriatric-drug-list",
            "indication-based-search",
            "medicine-database-query",
            "nursing-mothers-medications",
            "pediatric-drug-list",
            "pharmacovigilance-search",
            "population-specific-drugs",
            "population-use-query",
            "pregnant-women-medications"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by specific population use",
            "Filter by drug indication",
            "Support pagination via limit and skip",
            "Return brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "population_use": {
                "type": "string",
                "description": "The specific population use to search for (e.g., pregnant women, nursing mothers)."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "population_use": {
                    "type": "string",
                    "description": "The specific population use to search for (e.g., pregnant women, nursing mothers).",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "population_use": "pregnant women",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8f2d9-47a2-4f2b-9c55-8e7ef6df4d8a",
        "name": "get_pytdc_info",
        "description": "Get comprehensive information about PyTDC, the Python interface to Therapeutics Data Commons.",
        "detailed_description": "Get comprehensive information about PyTDC \u2013 Therapeutics Data Commons in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "bioinformatics-datasets",
            "computational-biology",
            "dataset-cataloging",
            "documentation-extraction",
            "drug-discovery",
            "library-inspection",
            "metadata-retrieval",
            "package-metadata",
            "pytdc-info",
            "python-package-introspection",
            "therapeutics-data-commons"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pytdc",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve an overview of PyTDC",
            "Provide installation instructions for PyTDC",
            "Provide usage examples for PyTDC",
            "List datasets available in PyTDC",
            "Provide documentation URL for PyTDC"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyTDC",
                "enum": [
                    "overview",
                    "installation",
                    "usage",
                    "datasets",
                    "documentation"
                ]
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "datasets",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyTDC"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8a1e4c5-6b0b-4ba4-8e32-4e5d3a2b1c4d",
        "name": "get_gseapy_info",
        "description": "Retrieve detailed usage, installation, and functionality information for the GSEApy package.",
        "detailed_description": "Get comprehensive information about GSEApy \u2013 Gene Set Enrichment Analysis in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-genomics",
            "enrichment-analysis",
            "functional-enrichment",
            "gene-set-enrichment",
            "get-gseapy-info",
            "gsea-analysis",
            "omics-data-analysis",
            "package-documentation",
            "pathway-analysis",
            "python-bioinformatics",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "gseapy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide detailed information about the GSEApy package",
            "Generate installation instructions",
            "Summarize supported gene set enrichment analyses",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e1f8a9c-4b2d-4f5e-9c7a-6d8e2f3a1b4c",
        "name": "get_matplotlib_info",
        "description": "Get information about Matplotlib, a Python library for creating visualizations.",
        "detailed_description": "Get comprehensive information about Matplotlib - comprehensive library for creating visualizations in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "charting-tool",
            "code-snippets",
            "data-visualization",
            "matplotlib-documentation",
            "matplotlib-information",
            "package-overview",
            "plotting-library",
            "python-visualization",
            "quickstart-guide",
            "scientific-visualization",
            "tutorial-material",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "matplotlib",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide detailed information about the Matplotlib package",
            "Retrieve installation commands",
            "List usage example code",
            "Provide quick start guide",
            "Show documentation and repository URLs",
            "List keywords and popularity metrics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b07384-d9f3-4768-ace0-290a14218bcf",
        "name": "get_pytorch_info",
        "description": "Provides detailed information about the PyTorch machine learning framework.",
        "detailed_description": "Get comprehensive information about PyTorch - an open source machine learning framework",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "deep-learning-library",
            "machine-learning-framework",
            "neural-network-framework",
            "open-source-ml-framework",
            "python-ml-package",
            "pytorch-documentation",
            "pytorch-information",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "torch",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides comprehensive information about PyTorch",
            "Returns description, category, and keywords",
            "Provides installation instructions for pip and conda",
            "Includes usage examples and quick start guide",
            "Supplies documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d7a9bcf1-5e5a-4c71-938f-54c5be1d2e77",
        "name": "get_flowutils_info",
        "description": "Retrieve detailed info about FlowUtils, a suite of flow cytometry utilities and algorithms",
        "detailed_description": "Get comprehensive information about FlowUtils \u2013 flow cytometry utilities and algorithms",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-documentation",
            "bioinformatics",
            "cell-gating-algorithms",
            "cytometry-pipeline",
            "data-preprocessing",
            "fcs-file-processing",
            "flow-cytometry",
            "flowutils-package",
            "fluorescence-intensity-analysis",
            "high-dimensional-cytometry",
            "package-metadata",
            "single-cell-data"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "flowutils",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of FlowUtils",
            "Provide installation instructions",
            "Show usage examples",
            "Link to documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about FlowUtils"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about FlowUtils"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2f8e7c3-9a45-4d66-8f2b-1b2e3c4d5f6a",
        "name": "get_harmony_pytorch_info",
        "description": "Retrieve information about the harmony-pytorch single-cell data integration package.",
        "detailed_description": "Get comprehensive information about harmony-pytorch \u2013 single-cell data integration",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-documentation",
            "batch-correction-algorithm",
            "batch-effect-correction",
            "bioinformatics-package",
            "biological-data-integration",
            "computational-biology",
            "data-integration",
            "harmony-pytorch",
            "machine-learning",
            "python-data-analysis",
            "pytorch-library",
            "scrna-seq-integration",
            "single-cell-integration",
            "single-cell-transcriptomics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "harmony-pytorch",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of harmony-pytorch",
            "Retrieve installation instructions for harmony-pytorch",
            "Retrieve usage examples for harmony-pytorch",
            "Retrieve documentation link for harmony-pytorch"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about harmony-pytorch"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about harmony-pytorch"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e2f3c1a4-76b9-4d3b-9e2c-5cfa8d7b3a1e",
        "name": "get_pyliftover_info",
        "description": "Fetch detailed information about PyLiftover for genomic coordinate conversion between assemblies",
        "detailed_description": "Get comprehensive information about PyLiftover \u2013 genomic coordinate conversion between assemblies",
        "toolType": "Scientific Software Package",
        "tags": [
            "comparative-genomics",
            "computational-genomics",
            "cross-assembly-mapping",
            "genome-annotation-liftover",
            "genome-assembly-conversion",
            "genome-assembly-liftover",
            "genomic-coordinate-conversion",
            "genomic-data-integration",
            "liftover-automation",
            "python-genomics-package",
            "reference-genome-mapping",
            "sequence-coordinate-mapping",
            "variant-coordinate-conversion"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pyliftover",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about PyLiftover",
            "Detail genomic coordinate conversion between assemblies",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3e3b8c40-6d7e-4f44-8c41-d8f2a7ecf4b0",
        "name": "get_pymed_info",
        "description": "Get comprehensive information about the PyMed package for accessing PubMed in Python",
        "detailed_description": "Get comprehensive information about PyMed \u2013 PubMed access in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-integration",
            "bibliographic-data",
            "biomedical-informatics",
            "literature-mining",
            "metadata-fetching",
            "pmid-retrieval",
            "publication-metadata",
            "pubmed-access",
            "pubmed-api-client",
            "pymed-info",
            "python-sdk",
            "scholarly-research"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pymed",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve PyMed package metadata",
            "Provide installation instructions",
            "Show usage examples and quick start guide",
            "Fetch documentation and repository links",
            "List relevant keywords and popularity metrics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1e5d6c3-b2f4-4e1a-9d3f-7b8a6c2e5f10",
        "name": "get_pydeseq2_info",
        "description": "Retrieve detailed info on PyDESeq2 for RNA-seq differential expression analysis",
        "detailed_description": "Get comprehensive information about PyDESeq2 \u2013 RNA-seq differential expression analysis",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics",
            "bulk-rna-seq",
            "count-data-analysis",
            "differential-expression",
            "gene-expression",
            "genomics",
            "package-reference",
            "pipeline-integration",
            "pydeseq2-info",
            "python-package",
            "rna-seq-analysis",
            "statistical-modeling",
            "tool-documentation",
            "transcriptomics",
            "workflow-component"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pydeseq2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Overview of PyDESeq2",
            "Installation instructions",
            "Usage examples",
            "Documentation link"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyDESeq2"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyDESeq2"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1a4fcc4-1f43-4b47-8d2a-0f9b5ed5c6e2",
        "name": "get_scikit_bio_info",
        "description": "Retrieve detailed info on scikit-bio, a Python bioinformatics library.",
        "detailed_description": "Get comprehensive information about scikit-bio \u2013 bioinformatics library built on scientific Python stack",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-biology",
            "diversity-metrics",
            "library-documentation",
            "metagenomics",
            "microbial-ecology",
            "package-metadata",
            "phylogenetics",
            "python-bioinformatics-library",
            "quick-start-guide",
            "scikit-bio-library",
            "sequence-analysis",
            "taxonomy-profiling",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scikit-bio",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide information about scikit-bio library",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide",
                "default": true
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "af3e8a94-556c-4e6d-8f27-9cba66f0b451",
        "name": "get_numpy_info",
        "description": "Retrieve comprehensive information about NumPy, the core scientific computing library for Python.",
        "detailed_description": "Get comprehensive information about NumPy - the fundamental package for scientific computing with Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "array-processing",
            "data-science",
            "documentation-explorer",
            "numerical-analysis",
            "numpy-documentation",
            "numpy-information",
            "numpy-usage-examples",
            "open-source-package",
            "programming-guide",
            "python-library-reference",
            "python-numerical",
            "quickstart-guide",
            "scientific-computing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "numpy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide comprehensive information about the NumPy package",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b9c1f3e-2a4b-4c6e-a5d7-8f9e0a1b2c3d",
        "name": "get_souporcell_info",
        "description": "Retrieve key information about souporcell, a scRNA-seq genotype clustering tool.",
        "detailed_description": "Get comprehensive information about souporcell \u2013 scRNA-seq genotype clustering",
        "toolType": "Scientific Software Package",
        "tags": [
            "algorithm-overview",
            "bioinformatics-package",
            "computational-genomics",
            "deconvolution-algorithm",
            "genotype-clustering",
            "genotype-inference",
            "high-throughput-sequencing",
            "package-inspection",
            "scrna-seq-analysis",
            "scrna-seq-methodology",
            "software-metadata",
            "souporcell-info-retrieval",
            "tool-documentation"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "souporcell",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of souporcell",
            "Provide installation instructions for souporcell",
            "Provide usage examples for souporcell",
            "Provide documentation link for souporcell"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about souporcell"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about souporcell"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7a9bc3eb-4f29-4c0d-a707-8b5b5d957d07",
        "name": "get_pybigwig_info",
        "description": "Retrieves detailed information about the pyBigWig package for BigWig file access in Python",
        "detailed_description": "Get comprehensive information about pyBigWig \u2014 BigWig file access in Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "bigwig-file-access",
            "bigwig-format",
            "genome-data-processing",
            "genomic-coverage",
            "interval-data-processing",
            "metadata-inspection",
            "package-documentation",
            "pybigwig-info",
            "python-api",
            "python-bioinformatics",
            "python-library-inspection",
            "wiggle-track"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pybigwig",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide overview of pyBigWig",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about pyBigWig"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about pyBigWig"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b12f1df-5232-4d5f-8e35-0a1294fa5e8a",
        "name": "get_plip_info",
        "description": "Retrieves information about PLIP (Protein-Ligand Interaction Profiler), including overview, installation, usage, and documentation.",
        "detailed_description": "Get comprehensive information about PLIP \u2013 protein-ligand interaction profiler",
        "toolType": "Scientific Software Package",
        "tags": [
            "binding-site-analysis",
            "cheminformatics",
            "computational-chemistry",
            "drug-discovery",
            "interaction-mapping",
            "interaction-profiler",
            "metadata-retrieval",
            "pipeline-component",
            "plip-info",
            "protein-ligand-interaction",
            "software-integration",
            "structural-bioinformatics"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "plip",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about PLIP",
            "Provide installation instructions for PLIP",
            "Show usage examples for PLIP",
            "Provide documentation links for PLIP"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PLIP"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PLIP"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_scipy_info",
        "description": "Retrieve key information about SciPy, including overview, installation, usage, modules, and documentation.",
        "detailed_description": "Get comprehensive information about SciPy \u2013 fundamental algorithms for scientific computing",
        "toolType": "Scientific Software Package",
        "tags": [
            "advanced-math-functions",
            "algorithm-reference",
            "differential-equation-solvers",
            "image-processing-functions",
            "library-metadata",
            "linear-algebra-tools",
            "numerical-integration",
            "numerical-library-overview",
            "optimization-algorithms",
            "package-inspection",
            "scientific-computing",
            "scipy-documentation",
            "signal-processing-modules",
            "statistical-methods"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scipy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch an overview of SciPy",
            "Provide installation instructions for SciPy",
            "Show usage examples of SciPy",
            "List available SciPy modules",
            "Provide SciPy documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about SciPy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "modules",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about SciPy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "HPA_get_subcellular_location",
        "description": "Retrieves annotated main and additional subcellular locations for a protein using optimized parameters.",
        "detailed_description": "Get annotated subcellular locations for a protein using optimized columns parameter. Retrieves both main and additional subcellular locations efficiently.",
        "toolType": "API",
        "tags": [
            "annotation-optimization",
            "bioinformatics-workflow",
            "cell-biology-research",
            "cellular-compartment-mapping",
            "gene-symbol-input",
            "gene-to-location-mapping",
            "hpa-subcellular-data",
            "human-protein-atlas-integration",
            "protein-compartment-annotation",
            "protein-localization",
            "proteomics-data-retrieval",
            "subcellular-location-annotation"
        ],
        "category": "HPAGetSubcellularLocationTool",
        "lab": "Zitnik Lab",
        "source": "Human Protein Atlas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches protein subcellular location annotations",
            "Retrieves main and additional subcellular locations",
            "Optimizes data retrieval with specific columns"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_name": {
                "type": "string",
                "description": "Gene name or gene symbol, e.g., 'CCNB1', 'TP53', 'EGFR', etc."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_name": {
                    "type": "string",
                    "description": "Gene name or gene symbol, e.g., 'CCNB1', 'TP53', 'EGFR', etc."
                }
            },
            "required": [
                "gene_name"
            ]
        },
        "exampleInput": {
            "gene_name": "TP53"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4b825dc6-ec2a-4fa4-9ef4-8da2d0f1c123",
        "name": "HPA_get_gene_basic_info_by_ensembl_id",
        "description": "Retrieves gene information and expression data from Human Protein Atlas using Ensembl Gene ID via the efficient JSON API.",
        "detailed_description": "Get gene basic information and expression data from Human Protein Atlas using Ensembl Gene ID. Enhanced version now uses efficient JSON API.",
        "toolType": "API",
        "tags": [
            "bioinformatics-integration",
            "ensembl-hpa-integration",
            "ensembl-id-query",
            "functional-genomics",
            "gene-annotation",
            "gene-basic-info",
            "gene-expression-data",
            "genomic-data-retrieval",
            "hpa-gene-data",
            "human-protein-atlas",
            "json-api-access",
            "proteomics",
            "transcriptomics"
        ],
        "category": "HPAGetGeneJSONTool",
        "lab": "Zitnik Lab",
        "source": "Human Protein Atlas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve basic gene information",
            "Fetch gene expression data",
            "Utilize Human Protein Atlas JSON API",
            "Query by Ensembl Gene ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensembl_id": {
                "type": "string",
                "description": "Ensembl Gene ID, e.g., 'ENSG00000134057', 'ENSG00000141510', etc."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensembl_id": {
                    "type": "string",
                    "description": "Ensembl Gene ID, e.g., 'ENSG00000134057', 'ENSG00000141510', etc."
                }
            },
            "required": [
                "ensembl_id"
            ]
        },
        "exampleInput": {
            "ensembl_id": "ENSG00000134057"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1c4e7f13-8b2f-4353-9f06-7a9b3e282994",
        "name": "HPA_get_gene_tsv_data_by_ensembl_id",
        "description": "Retrieves detailed gene data in TSV format from the Human Protein Atlas using an Ensembl Gene ID.",
        "detailed_description": "Get detailed gene data in TSV format from Human Protein Atlas using Ensembl Gene ID (backward compatibility tool).",
        "toolType": "API",
        "tags": [
            "backward-compatibility",
            "bioinformatics",
            "computational-biology",
            "data-integration",
            "ensembl-gene-id",
            "gene-expression-data",
            "genomic-data-access",
            "human-protein-atlas",
            "molecular-biology",
            "research-workflow",
            "transcriptomics",
            "tsv-download"
        ],
        "category": "HPAGetGeneXMLTool",
        "lab": "Zitnik Lab",
        "source": "Human Protein Atlas",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch gene data from Human Protein Atlas API",
            "Output data in TSV format",
            "Provide gene basic information, biological processes, and RNA expression levels across cell lines"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "ensembl_id": {
                "type": "string",
                "description": "Ensembl Gene ID, e.g., 'ENSG00000134057', 'ENSG00000141510', etc."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "ensembl_id": {
                    "type": "string",
                    "description": "Ensembl Gene ID, e.g., 'ENSG00000134057', 'ENSG00000141510', etc."
                }
            },
            "required": [
                "ensembl_id"
            ]
        },
        "exampleInput": {
            "ensembl_id": "ENSG00000141510"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d480a7c2-5cab-4a1f-b25f-9f1dc2b8574d",
        "name": "humanbase_ppi_analysis",
        "description": "Fetch tissue-specific protein-protein interactions and related biological processes from HumanBase.",
        "detailed_description": "Retrieve tissue-specific protein-protein interactions and biological processes from HumanBase. Returns a NetworkX graph of tissue specific protein-protein interactions and a list of associated biological processes involeed by the given genes from Gene Ontology.",
        "toolType": "API",
        "tags": [
            "biological-process-mapping",
            "coexpression-filtering",
            "computational-biology",
            "functional-enrichment",
            "gene-network-visualization",
            "gene-ontology-enrichment",
            "gsea-microrna-targets",
            "humanbase-integration",
            "networkx-graph",
            "ppi-network-analysis",
            "protein-protein-interactions",
            "tf-binding-analysis",
            "tissue-specific-ppi"
        ],
        "category": "HumanBaseTool",
        "lab": "Zitnik Lab",
        "source": "HumanBase",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve tissue-specific protein-protein interactions",
            "Fetch associated biological processes from Gene Ontology",
            "Return results as NetworkX graph and list or as formatted string",
            "Filter interactions by tissue type and interaction type",
            "Limit the number of nodes in the interaction network"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_list": {
                "type": "array",
                "description": "List of gene names or symbols to analyze for protein-protein interactions. The gene name should be the official gene symbol, not the synonym."
            },
            "tissue": {
                "type": "string",
                "description": "Tissue type for tissue-specific interactions. Examples: 'brain', 'heart', 'liver', 'kidney', etc."
            },
            "max_node": {
                "type": "integer",
                "description": "Maximum number of nodes to retrieve in the interaction network. Warning: the more nodes, the more time it takes to retrieve the data. Default is 10 (~30 seconds)."
            },
            "interaction": {
                "type": "string",
                "description": "Specific interaction type to filter by. Available types: 'co-expression', 'interaction', 'tf-binding', 'gsea-microrna-targets', 'gsea-perturbations'. If not specified, all types will be included."
            },
            "string_mode": {
                "type": "boolean",
                "description": "Whether to return the result in string mode. If True, the result will be a string of the network graph and the biological processes. If False, the result will be a NetworkX graph and a list of biological processes."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of gene names or symbols to analyze for protein-protein interactions. The gene name should be the official gene symbol, not the synonym.",
                    "minItems": 1
                },
                "tissue": {
                    "type": "string",
                    "description": "Tissue type for tissue-specific interactions. Examples: 'brain', 'heart', 'liver', 'kidney', etc.",
                    "default": "brain"
                },
                "max_node": {
                    "type": "integer",
                    "description": "Maximum number of nodes to retrieve in the interaction network. Warning: the more nodes, the more time it takes to retrieve the data. Default is 10 (~30 seconds).",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100
                },
                "interaction": {
                    "type": "string",
                    "description": "Specific interaction type to filter by. Available types: 'co-expression', 'interaction', 'tf-binding', 'gsea-microrna-targets', 'gsea-perturbations'. If not specified, all types will be included.",
                    "enum": [
                        "co-expression",
                        "interaction",
                        "tf-binding",
                        "gsea-microrna-targets",
                        "gsea-perturbations"
                    ]
                },
                "string_mode": {
                    "type": "boolean",
                    "description": "Whether to return the result in string mode. If True, the result will be a string of the network graph and the biological processes. If False, the result will be a NetworkX graph and a list of biological processes.",
                    "default": true
                }
            },
            "required": [
                "gene_list"
            ]
        },
        "exampleInput": {
            "gene_list": [
                "BRCA1",
                "TP53",
                "EGFR"
            ],
            "tissue": "liver",
            "max_node": 10,
            "interaction": "co-expression",
            "string_mode": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "openalex_literature_search",
        "description": "Search academic literature via the OpenAlex API, retrieving key paper metadata by keywords.",
        "detailed_description": "Search for academic literature using OpenAlex API. Retrieves papers with title, abstract, authors, publication year, and organizational affiliations based on search keywords.",
        "toolType": "API",
        "tags": [
            "abstract-search",
            "academic-paper-retrieval",
            "api-integration",
            "author-affiliation-filter",
            "bibliographic-search",
            "digital-library-search",
            "literature-mining",
            "metadata-extraction",
            "open-access-filter",
            "openalex-literature-search",
            "publication-year-filter",
            "research-discovery",
            "scholarly-research-tool",
            "scientific-publications"
        ],
        "category": "OpenAlexTool",
        "lab": "Zitnik Lab",
        "source": "OpenAlex",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for papers using keywords",
            "Retrieve paper titles",
            "Retrieve abstracts",
            "Retrieve authors",
            "Retrieve publication year",
            "Retrieve organizational affiliations",
            "Filter results by publication year range",
            "Filter results by open access status"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "search_keywords": {
                "type": "string",
                "description": "Keywords to search for in paper titles, abstracts, and content. Use relevant scientific terms or phrases."
            },
            "max_results": {
                "type": "integer",
                "description": "Maximum number of papers to retrieve (default: 10, maximum: 200)."
            },
            "year_from": {
                "type": "integer",
                "description": "Start year for publication date filter (e.g., 2020). Optional parameter to limit search to papers published from this year onwards."
            },
            "year_to": {
                "type": "integer",
                "description": "End year for publication date filter (e.g., 2023). Optional parameter to limit search to papers published up to this year."
            },
            "open_access": {
                "type": "boolean",
                "description": "Filter for open access papers only. Set to true for open access papers, false for non-open access, or omit for all papers."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "search_keywords": {
                    "type": "string",
                    "description": "Keywords to search for in paper titles, abstracts, and content. Use relevant scientific terms or phrases."
                },
                "max_results": {
                    "type": "integer",
                    "description": "Maximum number of papers to retrieve (default: 10, maximum: 200).",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 200
                },
                "year_from": {
                    "type": "integer",
                    "description": "Start year for publication date filter (e.g., 2020). Optional parameter to limit search to papers published from this year onwards."
                },
                "year_to": {
                    "type": "integer",
                    "description": "End year for publication date filter (e.g., 2023). Optional parameter to limit search to papers published up to this year."
                },
                "open_access": {
                    "type": "boolean",
                    "description": "Filter for open access papers only. Set to true for open access papers, false for non-open access, or omit for all papers."
                }
            },
            "required": [
                "search_keywords"
            ]
        },
        "exampleInput": {
            "search_keywords": "deep learning",
            "max_results": 10,
            "year_from": 2020,
            "year_to": 2023,
            "open_access": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8e6b4d-13a2-4b5d-9f4c-2e7a7d8abcd6",
        "name": "ToolCompatibilityAnalyzer",
        "description": "Analyzes two tool specifications to assess if one tool\u2019s output can serve as input for another and suggests parameter mappings.",
        "detailed_description": "Analyzes two tool specifications to determine if one tool's output can be used as input for another tool. Returns compatibility information and suggested parameter mappings.",
        "toolType": "AI Agent",
        "tags": [
            "api-integration",
            "automation-pipeline",
            "compatibility-analysis",
            "input-output-matching",
            "interface-compatibility",
            "interoperability-check",
            "json-schema-mapping",
            "parameter-mapping",
            "semantic-compatibility",
            "specification-compatibility",
            "system-integration",
            "workflow-integration"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "Agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Basic compatibility assessment",
            "Parameter mapping analysis",
            "Data type compatibility checking",
            "Semantic compatibility analysis",
            "Composition viability assessment",
            "Parameter mapping suggestion generation",
            "Final compatibility scoring"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "source_tool": {
                "type": "string",
                "description": "The source tool specification (JSON string with name, description, parameter schema, and example outputs)"
            },
            "target_tool": {
                "type": "string",
                "description": "The target tool specification (JSON string with name, description, parameter schema)"
            },
            "analysis_depth": {
                "type": "string",
                "description": "Level of analysis depth - quick for basic compatibility, detailed for parameter mapping, comprehensive for semantic analysis"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "source_tool": {
                    "type": "string",
                    "description": "The source tool specification (JSON string with name, description, parameter schema, and example outputs)",
                    "required": true
                },
                "target_tool": {
                    "type": "string",
                    "description": "The target tool specification (JSON string with name, description, parameter schema)",
                    "required": true
                },
                "analysis_depth": {
                    "type": "string",
                    "enum": [
                        "quick",
                        "detailed",
                        "comprehensive"
                    ],
                    "description": "Level of analysis depth - quick for basic compatibility, detailed for parameter mapping, comprehensive for semantic analysis",
                    "default": "detailed"
                }
            },
            "required": [
                "source_tool",
                "target_tool"
            ]
        },
        "exampleInput": {
            "source_tool": "{\"name\":\"ExampleSourceTool\",\"description\":\"Produces JSON output\",\"parameter_schema\":{\"field\":{\"type\":\"string\"}},\"example_output\":{\"field\":\"value\"}}",
            "target_tool": "{\"name\":\"ExampleTargetTool\",\"description\":\"Consumes specific inputs\",\"parameter_schema\":{\"target_field\":{\"type\":\"string\"}}}",
            "analysis_depth": "detailed"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "ToolGraphComposer",
        "description": "Generates a directed compatibility graph of tools in ToolUniverse.",
        "detailed_description": "Builds a comprehensive graph of tool compatibility relationships in ToolUniverse. Analyzes all available tools and creates a directed graph showing which tools can be composed together.",
        "toolType": "Compositional Tool",
        "tags": [
            "compatibility-graph-generation",
            "compatibility-network",
            "compatibility-scoring",
            "composition-analysis",
            "directed-graph-analysis",
            "graph-based-discovery",
            "json-graph-serialization",
            "modular-tool-architecture",
            "pickle-graph-export",
            "tool-compatibility-mapping",
            "tool-composition-graph",
            "tool-metadata-analysis",
            "workflow-integration"
        ],
        "category": "ComposeTool",
        "lab": "Zitnik Lab",
        "source": "Agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Build tool compatibility graph",
            "Analyze tool composability",
            "Filter tools by compatibility score",
            "Exclude specified tool categories",
            "Configure analysis depth and limits",
            "Force rebuild of existing graphs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "output_path": {
                "type": "string",
                "description": "Path to save the generated graph files (JSON and pickle formats)"
            },
            "analysis_depth": {
                "type": "string",
                "description": "Level of compatibility analysis to perform"
            },
            "min_compatibility_score": {
                "type": "integer",
                "description": "Minimum compatibility score to create an edge in the graph"
            },
            "exclude_categories": {
                "type": "array",
                "description": "Tool categories to exclude from analysis (e.g., ['tool_finder', 'special_tools'])"
            },
            "max_tools_per_category": {
                "type": "integer",
                "description": "Maximum number of tools to analyze per category (for performance)"
            },
            "force_rebuild": {
                "type": "boolean",
                "description": "Whether to force rebuild even if cached graph exists"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "output_path": {
                    "type": "string",
                    "description": "Path to save the generated graph files (JSON and pickle formats)",
                    "default": "./tool_composition_graph"
                },
                "analysis_depth": {
                    "type": "string",
                    "enum": [
                        "quick",
                        "detailed",
                        "comprehensive"
                    ],
                    "description": "Level of compatibility analysis to perform",
                    "default": "detailed"
                },
                "min_compatibility_score": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Minimum compatibility score to create an edge in the graph",
                    "default": 60
                },
                "exclude_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tool categories to exclude from analysis (e.g., ['tool_finder', 'special_tools'])",
                    "default": [
                        "tool_finder",
                        "special_tools"
                    ]
                },
                "max_tools_per_category": {
                    "type": "integer",
                    "description": "Maximum number of tools to analyze per category (for performance)",
                    "default": 50
                },
                "force_rebuild": {
                    "type": "boolean",
                    "description": "Whether to force rebuild even if cached graph exists",
                    "default": false
                }
            },
            "required": []
        },
        "exampleInput": {
            "output_path": "./tool_composition_graph",
            "analysis_depth": "detailed",
            "min_compatibility_score": 60,
            "exclude_categories": [
                "tool_finder",
                "special_tools"
            ],
            "max_tools_per_category": 50,
            "force_rebuild": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8d61f04-4621-4b4a-9d19-2a1d2e9b7c4f",
        "name": "embedding_database_create",
        "description": "Creates an embedding database from documents using OpenAI/Azure models, with FAISS vector index and SQLite storage.",
        "detailed_description": "Create a new embedding database from a collection of documents. Generates embeddings using OpenAI or Azure OpenAI models and stores them in a searchable database with FAISS vector index and SQLite metadata storage.",
        "toolType": "Embedding Store",
        "tags": [
            "azure-openai-embeddings",
            "document-embedding",
            "embedding-database-creation",
            "faiss-indexing",
            "knowledge-base-construction",
            "openai-embeddings",
            "retrieval-augmentation",
            "semantic-search",
            "sqlite-metadata-storage",
            "text-embedding",
            "unstructured-text-indexing",
            "vector-database"
        ],
        "category": "EmbeddingDatabase",
        "lab": "Zitnik Lab",
        "source": "FAISS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "creates embedding database from documents",
            "generates embeddings using OpenAI or Azure OpenAI models",
            "stores embeddings in FAISS vector index",
            "stores metadata in SQLite"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to create database from documents"
            },
            "database_name": {
                "type": "string",
                "description": "Name for the new database (must be unique)"
            },
            "documents": {
                "type": "array",
                "description": "List of document texts to embed and store"
            },
            "metadata": {
                "type": "array",
                "description": "Optional metadata for each document (same length as documents)"
            },
            "model": {
                "type": "string",
                "description": "OpenAI/Azure OpenAI embedding model to use"
            },
            "description": {
                "type": "string",
                "description": "Optional description for the database"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "create_from_docs",
                    "description": "Action to create database from documents"
                },
                "database_name": {
                    "type": "string",
                    "description": "Name for the new database (must be unique)"
                },
                "documents": {
                    "type": "array",
                    "description": "List of document texts to embed and store",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 10000
                },
                "metadata": {
                    "type": "array",
                    "description": "Optional metadata for each document (same length as documents)",
                    "items": {
                        "type": "object"
                    },
                    "default": []
                },
                "model": {
                    "type": "string",
                    "description": "OpenAI/Azure OpenAI embedding model to use",
                    "enum": [
                        "text-embedding-3-small",
                        "text-embedding-3-large",
                        "text-embedding-ada-002"
                    ],
                    "default": "text-embedding-3-small"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description for the database",
                    "default": ""
                }
            },
            "required": [
                "database_name",
                "documents"
            ]
        },
        "exampleInput": {
            "action": "create_from_docs",
            "database_name": "my_embeddings_db",
            "documents": [
                "First document text",
                "Second document text"
            ],
            "metadata": [],
            "model": "text-embedding-ada-002",
            "description": "A new embedding database for sample documents"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b7a9d65e-2b34-4d8e-a91f-3da6518c10f2",
        "name": "embedding_database_add",
        "description": "Adds documents to an existing embedding database using the original model and updates the FAISS index.",
        "detailed_description": "Add new documents to an existing embedding database. Generates embeddings for new documents using the same model as the original database and appends them to the existing FAISS index.",
        "toolType": "Embedding Store",
        "tags": [
            "document-embedding",
            "embedding-database-update",
            "faiss-index-append",
            "incremental-indexing",
            "knowledge-base-enrichment",
            "metadata-annotation",
            "ml-preprocessing",
            "natural-language-processing",
            "semantic-search-prep",
            "text-embedding",
            "vector-index-update",
            "vector-store-augmentation"
        ],
        "category": "EmbeddingDatabase",
        "lab": "Zitnik Lab",
        "source": "FAISS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Add documents to embedding database",
            "Generate embeddings using original model",
            "Append embeddings to FAISS index"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to add documents to existing database"
            },
            "database_name": {
                "type": "string",
                "description": "Name of the existing database to add documents to"
            },
            "documents": {
                "type": "array",
                "description": "List of new document texts to embed and add"
            },
            "metadata": {
                "type": "array",
                "description": "Optional metadata for each new document (same length as documents)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "add_docs",
                    "description": "Action to add documents to existing database"
                },
                "database_name": {
                    "type": "string",
                    "description": "Name of the existing database to add documents to"
                },
                "documents": {
                    "type": "array",
                    "description": "List of new document texts to embed and add",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 10000
                },
                "metadata": {
                    "type": "array",
                    "description": "Optional metadata for each new document (same length as documents)",
                    "items": {
                        "type": "object"
                    },
                    "default": []
                }
            },
            "required": [
                "database_name",
                "documents"
            ]
        },
        "exampleInput": {
            "action": "add_docs",
            "database_name": "my_embedding_db",
            "documents": [
                "This is the first new document.",
                "This is the second document."
            ],
            "metadata": [
                {
                    "source": "user"
                },
                {
                    "source": "admin"
                }
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "embedding_database_search",
        "description": "Search semantically similar documents using OpenAI embeddings and FAISS with optional metadata filters.",
        "detailed_description": "Search for semantically similar documents in an embedding database. Uses OpenAI embeddings to convert query text to vectors and performs similarity search using FAISS with optional metadata filtering.",
        "toolType": "Embedding Store",
        "tags": [
            "document-retrieval",
            "embedding-database-search",
            "faiss-approximate-nearest-neighbor",
            "information-retrieval",
            "knowledge-discovery",
            "metadata-filtering",
            "openai-embeddings",
            "semantic-search",
            "semantic-similarity-search",
            "text-embedding-retrieval",
            "top-k-retrieval",
            "vector-similarity-search"
        ],
        "category": "EmbeddingDatabase",
        "lab": "Zitnik Lab",
        "source": "FAISS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Convert text queries into embeddings using OpenAI",
            "Perform similarity search with FAISS",
            "Apply metadata filters to search results",
            "Return top_k most similar documents"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to search the database"
            },
            "database_name": {
                "type": "string",
                "description": "Name of the database to search in"
            },
            "query": {
                "type": "string",
                "description": "Query text to find similar documents for"
            },
            "top_k": {
                "type": "integer",
                "description": "Number of most similar documents to return"
            },
            "filters": {
                "type": "object",
                "description": "Optional metadata filters to apply to search results"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "search",
                    "description": "Action to search the database"
                },
                "database_name": {
                    "type": "string",
                    "description": "Name of the database to search in"
                },
                "query": {
                    "type": "string",
                    "description": "Query text to find similar documents for"
                },
                "top_k": {
                    "type": "integer",
                    "description": "Number of most similar documents to return",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 5
                },
                "filters": {
                    "type": "object",
                    "description": "Optional metadata filters to apply to search results",
                    "additionalProperties": true,
                    "default": {}
                }
            },
            "required": [
                "database_name",
                "query"
            ]
        },
        "exampleInput": {
            "action": "search",
            "database_name": "my_embeddings_db",
            "query": "climate change impacts",
            "top_k": 5,
            "filters": {
                "year": ">=2020"
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29f1b3-2c4d-4b4e-9fdd-6a5b7c8d9e0f",
        "name": "embedding_database_load",
        "description": "Load an existing embedding database from a local or external source into ToolUniverse.",
        "detailed_description": "Load an existing embedding database from a local path or external source. Allows importing databases created elsewhere or backed up databases into the current ToolUniverse instance.",
        "toolType": "Embedding Store",
        "tags": [
            "backup-restore",
            "data-ingestion",
            "database-migration",
            "embedding-database-load",
            "embedding-import",
            "external-database-load",
            "knowledge-base-import",
            "local-database-import",
            "overwrite-capable",
            "precomputed-embeddings",
            "tool-universe-integration",
            "vector-database-management",
            "vector-store-import"
        ],
        "category": "EmbeddingDatabase",
        "lab": "Zitnik Lab",
        "source": "embedding-database",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Load existing embedding database",
            "Import database from external source",
            "Optionally overwrite existing database"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to load database from external source"
            },
            "database_path": {
                "type": "string",
                "description": "Path to the existing database directory or file"
            },
            "database_name": {
                "type": "string",
                "description": "Local name to assign to the loaded database"
            },
            "overwrite": {
                "type": "boolean",
                "description": "Whether to overwrite existing database with same name"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "load_database",
                    "description": "Action to load database from external source"
                },
                "database_path": {
                    "type": "string",
                    "description": "Path to the existing database directory or file"
                },
                "database_name": {
                    "type": "string",
                    "description": "Local name to assign to the loaded database"
                },
                "overwrite": {
                    "type": "boolean",
                    "description": "Whether to overwrite existing database with same name",
                    "default": false
                }
            },
            "required": [
                "database_path",
                "database_name"
            ]
        },
        "exampleInput": {
            "action": "load_database",
            "database_path": "/path/to/existing/db",
            "database_name": "my_embeddings",
            "overwrite": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3e1c2b4-6f78-4a9a-8d2f-b83e8f0d6c2a",
        "name": "embedding_sync_upload",
        "description": "Upload a local embedding database to HuggingFace Hub as a dataset repository with metadata.",
        "detailed_description": "Upload a local embedding database to HuggingFace Hub for sharing and collaboration. Creates a dataset repository with the database files and metadata.",
        "toolType": "API",
        "tags": [
            "cloud-embeddings",
            "collaborative-embeddings",
            "dataset-management",
            "dataset-publishing",
            "dataset-versioning",
            "embedding-sync",
            "embedding-upload",
            "huggingface-integration",
            "local-embedding-db",
            "nlp-vector-store",
            "private-repository",
            "semantic-search",
            "vector-database"
        ],
        "category": "EmbeddingSync",
        "lab": "Zitnik Lab",
        "source": "Hugging Face Hub",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Uploads local embedding databases to HuggingFace Hub",
            "Creates dataset repositories with files and metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to upload database to HuggingFace"
            },
            "database_name": {
                "type": "string",
                "description": "Name of the local database to upload"
            },
            "repository": {
                "type": "string",
                "description": "HuggingFace repository name (format: username/repo-name)"
            },
            "description": {
                "type": "string",
                "description": "Description for the HuggingFace dataset"
            },
            "private": {
                "type": "boolean",
                "description": "Whether to create a private repository"
            },
            "commit_message": {
                "type": "string",
                "description": "Commit message for the upload"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "upload",
                    "description": "Action to upload database to HuggingFace"
                },
                "database_name": {
                    "type": "string",
                    "description": "Name of the local database to upload"
                },
                "repository": {
                    "type": "string",
                    "description": "HuggingFace repository name (format: username/repo-name)"
                },
                "description": {
                    "type": "string",
                    "description": "Description for the HuggingFace dataset",
                    "default": ""
                },
                "private": {
                    "type": "boolean",
                    "description": "Whether to create a private repository",
                    "default": false
                },
                "commit_message": {
                    "type": "string",
                    "description": "Commit message for the upload",
                    "default": "Upload embedding database"
                }
            },
            "required": [
                "database_name",
                "repository"
            ]
        },
        "exampleInput": {
            "action": "upload",
            "database_name": "my_embedding_db",
            "repository": "username/my-embed-repo",
            "description": "My embedding dataset",
            "private": false,
            "commit_message": "Initial upload of embeddings"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f2b5c4-1d6f-4a7b-8e9c-0d1e2f3a4b5c",
        "name": "embedding_sync_download",
        "description": "Download an embedding database from HuggingFace Hub to local storage.",
        "detailed_description": "Download an embedding database from HuggingFace Hub to local storage. Allows accessing databases shared by others or your own backups.",
        "toolType": "API",
        "tags": [
            "data-synchronization",
            "database-management",
            "embedding-backup-restore",
            "embedding-database-download",
            "huggingface-hub-sync",
            "local-embeddings-storage",
            "ml-infrastructure",
            "model-artifact-sync",
            "nlp-embeddings",
            "offline-embeddings-access",
            "reproducibility",
            "vector-database-sync",
            "vector-embeddings"
        ],
        "category": "EmbeddingSync",
        "lab": "Zitnik Lab",
        "source": "Hugging Face",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Download embedding databases from HuggingFace Hub",
            "Specify local name for downloaded database",
            "Overwrite existing local databases",
            "Require HF_TOKEN for authentication"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "action": {
                "type": "string",
                "description": "Action to download database from HuggingFace"
            },
            "repository": {
                "type": "string",
                "description": "HuggingFace repository to download from (format: username/repo-name)"
            },
            "local_name": {
                "type": "string",
                "description": "Local name for the downloaded database (optional, defaults to repo name)"
            },
            "overwrite": {
                "type": "boolean",
                "description": "Whether to overwrite existing local database with same name"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "const": "download",
                    "description": "Action to download database from HuggingFace"
                },
                "repository": {
                    "type": "string",
                    "description": "HuggingFace repository to download from (format: username/repo-name)"
                },
                "local_name": {
                    "type": "string",
                    "description": "Local name for the downloaded database (optional, defaults to repo name)"
                },
                "overwrite": {
                    "type": "boolean",
                    "description": "Whether to overwrite existing local database with same name",
                    "default": false
                }
            },
            "required": [
                "repository"
            ]
        },
        "exampleInput": {
            "action": "download",
            "repository": "username/my-embeddings",
            "local_name": "my-embeddings",
            "overwrite": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "PubChem_get_associated_patents_by_CID",
        "description": "Retrieve a list of patents linked to a given PubChem compound ID.",
        "detailed_description": "Get a list of patents associated with a specific compound CID.",
        "toolType": "API",
        "tags": [
            "chemical-patent-mining",
            "cheminformatics",
            "cid-based-retrieval",
            "compound-patent-search",
            "drug-discovery-ip",
            "intellectual-property-analysis",
            "json-patent-list",
            "medicinal-chemistry",
            "patent-association",
            "patent-retrieval",
            "pharmaceutical-research",
            "pubchem-cid-query"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve patents associated with a specific PubChem compound ID",
            "Return patent identifiers and their URLs",
            "Fetch data from PubChem PUG REST API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "integer",
                "description": "PubChem compound ID to query, e.g., 2244 (Aspirin)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "description": "PubChem compound ID to query, e.g., 2244 (Aspirin)."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": 2244
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3e5f9e8-3ada-4c79-93f8-1f6d2e9f8c56",
        "name": "PubChem_get_compound_properties_by_CID",
        "description": "Retrieve molecular properties (e.g., molecular weight, IUPAC name, SMILES) by PubChem CID.",
        "detailed_description": "Get a set of specified molecular properties through CID (Compound ID), such as molecular weight, IUPAC name, Canonical SMILES.",
        "toolType": "API",
        "tags": [
            "canonical-smiles",
            "chemical-database",
            "cheminformatics",
            "cid-lookup",
            "compound-properties",
            "drug-discovery-support",
            "iupac-name",
            "molecular-properties",
            "molecular-weight",
            "property-retrieval",
            "pubchem-compound-query",
            "pubchem-rest-api"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve molecular properties by PubChem CID",
            "Supports properties such as MolecularWeight, IUPACName, and CanonicalSMILES",
            "Returns structured JSON with property values"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "integer",
                "description": "PubChem compound ID to query, e.g., 2244 (Aspirin)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "description": "PubChem compound ID to query, e.g., 2244 (Aspirin)."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": 2244
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e81c45d7-29f1-4d8b-9b2a-8e4f1d0c5b9a",
        "name": "PubChem_get_CID_by_compound_name",
        "description": "Retrieve CID list by chemical name",
        "detailed_description": "Retrieve corresponding CID list (IdentifierList) by chemical name.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chemical-database-query",
            "chemical-identifier-retrieval",
            "chemical-informatics",
            "cheminformatics",
            "compound-name-search",
            "computational-chemistry",
            "drug-discovery-support",
            "identifierlist-fetching",
            "metabolite-lookup",
            "name-to-cid-resolution",
            "pubchem-api",
            "pubchem-cid-lookup",
            "small-molecule-annotation"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve PubChem CID list by chemical name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Chemical name (e.g., \"Aspirin\" or IUPAC name)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Chemical name (e.g., \"Aspirin\" or IUPAC name)."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "Aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f2b8a64e-57d1-4bb5-9fb4-2d84c9b6abcd",
        "name": "PubChem_get_CID_by_SMILES",
        "description": "Retrieve PubChem CIDs by SMILES string.",
        "detailed_description": "Retrieve corresponding CID list by SMILES string.",
        "toolType": "API",
        "tags": [
            "chemical-database-query",
            "chemical-structure-search",
            "cheminformatics",
            "cid-mapping",
            "compound-discovery",
            "compound-identifier-lookup",
            "molecular-informatics",
            "pubchem-cid-retrieval",
            "pubchem-database-query",
            "pubchem-rest-api",
            "smiles-to-cid",
            "smiles-to-pubchem-cid"
        ],
        "category": "PubChemRESTTool",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve PubChem CIDs by SMILES string",
            "Return CIDs in JSON format"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "string",
                "description": "SMILES expression (e.g., \"CC(=O)OC1=CC=CC=C1C(=O)O\" corresponds to aspirin)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "string",
                    "description": "SMILES expression (e.g., \"CC(=O)OC1=CC=CC=C1C(=O)O\" corresponds to aspirin)."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": "CC(=O)OC1=CC=CC=C1C(=O)O"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f9b8c7d6-e5f4-3a2b-1c0d-9e8f7a6b5c4d",
        "name": "DescriptionQualityEvaluator",
        "description": "Evaluates the quality of tool and parameter descriptions with a score and feedback.",
        "detailed_description": "Evaluates the quality of tool descriptions and parameter descriptions, providing a score and specific feedback for improvements.",
        "toolType": "AI Agent",
        "tags": [
            "ci-cd-integration",
            "description-quality-evaluation",
            "developer-documentation",
            "documentation-analysis",
            "feedback-generation",
            "json-input-processing",
            "nlp-based-evaluation",
            "parameter-description-assessment",
            "quality-assurance",
            "readability-assessment",
            "scoring-metrics",
            "tool-description-validator"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Evaluates tool descriptions",
            "Evaluates parameter descriptions",
            "Generates quality score",
            "Provides specific improvement feedback"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_description": {
                "type": "string",
                "description": "The tool description to evaluate."
            },
            "parameter_descriptions": {
                "type": "string",
                "description": "JSON string of parameter names and their descriptions."
            },
            "test_results": {
                "type": "string",
                "description": "JSON string containing test case results."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_description": {
                    "type": "string",
                    "description": "The tool description to evaluate."
                },
                "parameter_descriptions": {
                    "type": "string",
                    "description": "JSON string of parameter names and their descriptions."
                },
                "test_results": {
                    "type": "string",
                    "description": "JSON string containing test case results."
                }
            },
            "required": [
                "tool_description",
                "parameter_descriptions",
                "test_results"
            ]
        },
        "exampleInput": {
            "tool_description": "A tool that converts temperatures between Celsius and Fahrenheit scales.",
            "parameter_descriptions": "{\"temperature\": \"Numerical value representing the temperature to convert.\", \"scale\": \"Target scale for conversion, either 'C' or 'F'.\"}",
            "test_results": "{\"test1\": \"passed\", \"test2\": \"failed\"}"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b2f4c18-8c4a-4d3a-b5c5-6f9a2d5614e2",
        "name": "ToolSpecificationGenerator",
        "description": "Generates ToolUniverse-compliant tool specifications based on provided requirements and analysis of similar tools.",
        "detailed_description": "Generates complete ToolUniverse-compliant tool specifications based on a description and analysis of similar existing tools. Creates comprehensive tool configurations including parameters, prompts, and metadata.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tool-design",
            "api-specification",
            "config-automation",
            "llm-tool-development",
            "meta-programming-tool",
            "metadata-generation",
            "parameter-schema-generation",
            "prompt-design",
            "specification-generator",
            "tool-configuration",
            "tool-specification-builder",
            "tool-template-creation"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generates complete ToolUniverse-compliant tool specifications",
            "Creates comprehensive tool configurations including parameters, prompts, and metadata",
            "Analyzes similar existing tools to inform specification generation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_description": {
                "type": "string",
                "description": "Brief description of the desired tool functionality and purpose."
            },
            "tool_category": {
                "type": "string",
                "description": "Target category for the tool (e.g., 'biomedical', 'data_analysis', 'text_processing')."
            },
            "tool_type": {
                "type": "string",
                "description": "Specific ToolUniverse tool type (e.g., 'AgenticTool', 'RESTTool', 'PythonTool')."
            },
            "similar_tools": {
                "type": "string",
                "description": "JSON string containing configurations of similar existing tools for analysis and differentiation."
            },
            "existing_tools_summary": {
                "type": "string",
                "description": "Summary of existing tools in the ecosystem to avoid duplication and identify gaps."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_description": {
                    "type": "string",
                    "description": "Brief description of the desired tool functionality and purpose.",
                    "required": true
                },
                "tool_category": {
                    "type": "string",
                    "description": "Target category for the tool (e.g., 'biomedical', 'data_analysis', 'text_processing').",
                    "required": true
                },
                "tool_type": {
                    "type": "string",
                    "description": "Specific ToolUniverse tool type (e.g., 'AgenticTool', 'RESTTool', 'PythonTool').",
                    "required": true
                },
                "similar_tools": {
                    "type": "string",
                    "description": "JSON string containing configurations of similar existing tools for analysis and differentiation.",
                    "required": true
                },
                "existing_tools_summary": {
                    "type": "string",
                    "description": "Summary of existing tools in the ecosystem to avoid duplication and identify gaps.",
                    "required": true
                }
            },
            "required": [
                "tool_description",
                "tool_category",
                "tool_type",
                "similar_tools",
                "existing_tools_summary"
            ]
        },
        "exampleInput": {
            "tool_description": "Tool to aggregate and visualize genomic data with pandas",
            "tool_category": "data_analysis",
            "tool_type": "CustomTool",
            "similar_tools": "[{\"type\":\"CustomTool\",\"name\":\"GenomeDataAggregator\",\"description\":\"Aggregates genome sequencing data using pandas.\"}]",
            "existing_tools_summary": "Current tools perform basic aggregation but lack integrated visualization."
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3f5b7e2-9a4c-4ab1-8a1f-2c7890b6cd1e",
        "name": "AdvancedCodeQualityAnalyzer",
        "description": "Deep analysis of code quality across complexity, security, performance, and maintainability with domain-specific expertise",
        "detailed_description": "Performs deep analysis of code quality including complexity, security, performance, and maintainability metrics with domain-specific expertise",
        "toolType": "AI Agent",
        "tags": [
            "ci-quality-gate",
            "code-complexity-metrics",
            "code-quality-analysis",
            "devops-integration",
            "domain-contextual-analysis",
            "maintainability-evaluation",
            "multi-language-support",
            "performance-benchmarking",
            "security-vulnerability-assessment",
            "source-code-audit",
            "static-code-analysis",
            "technical-debt-assessment"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Analyze code complexity",
            "Assess security vulnerabilities",
            "Evaluate performance and resource usage",
            "Measure maintainability and best practices adherence",
            "Provide domain-specific code quality metrics",
            "Generate structured JSON quality reports"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "source_code": {
                "type": "string",
                "description": "The source code to analyze for quality assessment"
            },
            "language": {
                "type": "string",
                "description": "Programming language (python, javascript, etc.)"
            },
            "analysis_depth": {
                "type": "string",
                "description": "Level of analysis depth to perform"
            },
            "domain_context": {
                "type": "string",
                "description": "Domain context for specialized analysis (e.g., bioinformatics, web development)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "source_code": {
                    "type": "string",
                    "description": "The source code to analyze for quality assessment",
                    "required": true
                },
                "language": {
                    "type": "string",
                    "description": "Programming language (python, javascript, etc.)",
                    "default": "python",
                    "required": false
                },
                "analysis_depth": {
                    "type": "string",
                    "enum": [
                        "basic",
                        "comprehensive",
                        "security-focused"
                    ],
                    "description": "Level of analysis depth to perform",
                    "default": "comprehensive",
                    "required": false
                },
                "domain_context": {
                    "type": "string",
                    "description": "Domain context for specialized analysis (e.g., bioinformatics, web development)",
                    "required": false
                }
            },
            "required": [
                "source_code"
            ]
        },
        "exampleInput": {
            "source_code": "def add(a, b):\n    return a + b",
            "language": "python",
            "analysis_depth": "comprehensive",
            "domain_context": "web development"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f5f1a4-7d4e-4b2f-a8c1-e9e4bbc1a123",
        "name": "ToolImplementationGenerator",
        "description": "Generates domain-specific functional code implementations with intelligent algorithm and package selection based on tool requirements.",
        "detailed_description": "Generates domain-specific, functional code implementations based on tool descriptions and requirements with intelligent algorithm selection",
        "toolType": "AI Agent",
        "tags": [
            "algorithmic-engineering",
            "automated-development",
            "code-generation",
            "code-scaffolding",
            "complexity-level-control",
            "developer-assistant",
            "domain-specific-implementation",
            "functional-code-output",
            "intelligent-algorithm-selection",
            "json-parameter-schema",
            "performance-optimized-code",
            "software-prototyping"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Generate domain-specific functional code implementations",
            "Intelligently select and prioritize existing well-maintained packages",
            "Analyze requirements and design implementations based on performance constraints",
            "Produce structured JSON output with implementation details"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_description": {
                "type": "string",
                "description": "Detailed description of what the tool should accomplish"
            },
            "tool_parameters": {
                "type": "string",
                "description": "JSON string of parameter schema for the tool"
            },
            "domain": {
                "type": "string",
                "description": "Domain area for specialized implementation"
            },
            "complexity_level": {
                "type": "string",
                "description": "Desired complexity level of implementation"
            },
            "performance_requirements": {
                "type": "string",
                "description": "Performance requirements or constraints"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_description": {
                    "type": "string",
                    "description": "Detailed description of what the tool should accomplish",
                    "required": true
                },
                "tool_parameters": {
                    "type": "string",
                    "description": "JSON string of parameter schema for the tool",
                    "required": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain area for specialized implementation",
                    "enum": [
                        "bioinformatics",
                        "data-science",
                        "web-api",
                        "mathematical",
                        "text-processing",
                        "general"
                    ],
                    "default": "general",
                    "required": false
                },
                "complexity_level": {
                    "type": "string",
                    "enum": [
                        "basic",
                        "intermediate",
                        "advanced"
                    ],
                    "description": "Desired complexity level of implementation",
                    "default": "intermediate",
                    "required": false
                },
                "performance_requirements": {
                    "type": "string",
                    "description": "Performance requirements or constraints",
                    "required": false
                }
            },
            "required": [
                "tool_description",
                "tool_parameters"
            ]
        },
        "exampleInput": {
            "tool_description": "Implementation of a genomic data parser and analyzer",
            "tool_parameters": "{\"input_file\": {\"type\": \"string\", \"description\": \"Path to the input file\"}, \"output_format\": {\"type\": \"string\", \"description\": \"Desired output format, e.g., JSON\"}}",
            "domain": "bioinformatics",
            "complexity_level": "intermediate",
            "performance_requirements": "High throughput with low latency"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f5e1a02-7c5d-4f1b-b6c0-123456789abc",
        "name": "ToolSpecificationOptimizer",
        "description": "Optimizes tool specifications for clarity, completeness, and usability with benchmarking",
        "detailed_description": "Optimizes tool specifications for clarity, completeness, and usability with comprehensive benchmarking against similar tools",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tool-development",
            "benchmarking-comparison",
            "clarity-improvement",
            "completeness-assessment",
            "config-optimization",
            "config-refinement",
            "json-configuration",
            "specification-benchmarking",
            "specification-optimization",
            "technical-documentation",
            "tool-evaluation",
            "usability-enhancement"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Optimize tool specifications",
            "Assess clarity",
            "Evaluate completeness",
            "Analyze usability",
            "Benchmark against similar tools"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string of current tool configuration to optimize"
            },
            "optimization_focus": {
                "type": "string",
                "description": "Primary optimization focus"
            },
            "target_audience": {
                "type": "string",
                "description": "Target user expertise level"
            },
            "similar_tools": {
                "type": "string",
                "description": "JSON string array of similar tools for comparison and benchmarking"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string of current tool configuration to optimize",
                    "required": true
                },
                "optimization_focus": {
                    "type": "string",
                    "enum": [
                        "clarity",
                        "completeness",
                        "usability",
                        "performance",
                        "all"
                    ],
                    "description": "Primary optimization focus",
                    "default": "all",
                    "required": false
                },
                "target_audience": {
                    "type": "string",
                    "enum": [
                        "beginner",
                        "intermediate",
                        "expert",
                        "mixed"
                    ],
                    "description": "Target user expertise level",
                    "default": "mixed",
                    "required": false
                },
                "similar_tools": {
                    "type": "string",
                    "description": "JSON string array of similar tools for comparison and benchmarking",
                    "required": false
                }
            },
            "required": [
                "tool_config"
            ]
        },
        "exampleInput": {
            "tool_config": "{\"type\": \"AgenticTool\", \"name\": \"SampleTool\", \"description\": \"A sample tool to demonstrate optimization.\"}",
            "optimization_focus": "all",
            "target_audience": "mixed",
            "similar_tools": "[{\"type\": \"AgenticTool\", \"name\": \"BenchmarkTool\", \"description\": \"A comparable tool.\"}]"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f46e0c4-99f1-4a5c-9b8f-12d34b5e6789",
        "name": "DomainExpertValidator",
        "description": "Provides domain-specific validation and expert recommendations for scientific and technical tools",
        "detailed_description": "Provides domain-specific validation and expert recommendations for tools with deep expertise across scientific and technical domains",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tool",
            "config-sanity-check",
            "domain-specific-validation",
            "expert-recommendation",
            "field-specific-audit",
            "implementation-code-review",
            "json-configuration",
            "quality-assurance",
            "scientific-validator",
            "technical-expertise-audit",
            "tool-configuration-validation",
            "validation-aspects-analysis",
            "validation-pipeline"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Domain-specific validation",
            "Expert recommendations",
            "Supports multiple scientific and technical domains"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string of tool configuration to validate"
            },
            "domain": {
                "type": "string",
                "description": "Domain expertise area for validation"
            },
            "validation_aspects": {
                "type": "string",
                "description": "JSON array string of specific aspects to validate"
            },
            "implementation_code": {
                "type": "string",
                "description": "Implementation code to validate (optional)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string of tool configuration to validate",
                    "required": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain expertise area for validation",
                    "enum": [
                        "bioinformatics",
                        "computational-biology",
                        "data-science",
                        "machine-learning",
                        "web-development",
                        "mathematics",
                        "chemistry",
                        "physics",
                        "general"
                    ],
                    "required": true
                },
                "validation_aspects": {
                    "type": "string",
                    "description": "JSON array string of specific aspects to validate",
                    "default": "[\"accuracy\", \"methodology\", \"best-practices\"]",
                    "required": false
                },
                "implementation_code": {
                    "type": "string",
                    "description": "Implementation code to validate (optional)",
                    "required": false
                }
            },
            "required": [
                "tool_config",
                "domain"
            ]
        },
        "exampleInput": {
            "tool_config": "{\"type\":\"XMLTool\",\"name\":\"SampleXMLParser\",\"description\":\"Parses XML data\"}",
            "domain": "data-science",
            "validation_aspects": "[\"accuracy\",\"methodology\",\"best-practices\"]",
            "implementation_code": "def validate_tool(config):\n    pass"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29d0f6-2e4a-41a4-bb1b-1b0e12345678",
        "name": "ToolQualityEvaluator",
        "description": "Evaluates tool configuration quality and provides detailed improvement feedback",
        "detailed_description": "Evaluates the quality of tool configurations and implementations. Provides detailed scoring and feedback for improvement.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tool-assessor",
            "best-practices-review",
            "code-quality-evaluation",
            "completeness-check",
            "configuration-evaluation",
            "functionality-assessment",
            "implementation-audit",
            "json-config-analysis",
            "qa-automation",
            "scoring-and-feedback",
            "software-testing",
            "test-case-validation",
            "tool-quality-assessment",
            "usability-evaluation"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Evaluates tool configuration quality",
            "Provides scoring on functionality, usability, completeness, and best practices",
            "Generates actionable feedback for improvement"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string of the tool configuration"
            },
            "test_cases": {
                "type": "string",
                "description": "JSON string of test cases"
            },
            "evaluation_aspects": {
                "type": "array",
                "description": "Aspects to evaluate (functionality, usability, completeness, best_practices)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string of the tool configuration"
                },
                "test_cases": {
                    "type": "string",
                    "description": "JSON string of test cases"
                },
                "evaluation_aspects": {
                    "type": "array",
                    "description": "Aspects to evaluate (functionality, usability, completeness, best_practices)"
                }
            },
            "required": [
                "tool_config"
            ]
        },
        "exampleInput": {
            "tool_config": "{\"type\":\"ExampleTool\",\"name\":\"SampleTool\",\"description\":\"A sample tool for demonstration.\"}",
            "test_cases": "[{\"input\":{},\"expected_output\":{}}]",
            "evaluation_aspects": [
                "functionality",
                "usability",
                "completeness",
                "best_practices"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f56e330-2d27-4e61-8fd2-9f2a6b2c7c92",
        "name": "ToolOptimizer",
        "description": "Optimizes and refines tool configurations using feedback to enhance quality, validation, and error handling.",
        "detailed_description": "Optimizes tool configurations based on quality feedback. Improves tool specifications and implementations to address identified issues.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tool-optimization",
            "automated-tuning",
            "config-optimization",
            "continuous-improvement",
            "devops-automation",
            "feedback-driven-optimization",
            "implementation-refinement",
            "json-configuration",
            "parameter-tuning",
            "performance-enhancement",
            "quality-improvement",
            "software-maintenance",
            "specification-enhancement"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Optimize tool configurations based on quality feedback",
            "Enhance parameter validation",
            "Improve error handling",
            "Generate optimized tool implementations",
            "Maintain backward compatibility"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string of the original tool configuration"
            },
            "quality_feedback": {
                "type": "string",
                "description": "JSON string of quality evaluation feedback"
            },
            "optimization_target": {
                "type": "string",
                "description": "What to optimize for (improve_quality, enhance_performance, etc.)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string of the original tool configuration"
                },
                "quality_feedback": {
                    "type": "string",
                    "description": "JSON string of quality evaluation feedback"
                },
                "optimization_target": {
                    "type": "string",
                    "description": "What to optimize for (improve_quality, enhance_performance, etc.)"
                }
            },
            "required": [
                "tool_config",
                "quality_feedback"
            ]
        },
        "exampleInput": {
            "tool_config": "{\"type\":\"SampleTool\",\"name\":\"DemoTool\",\"description\":\"A sample tool.\"}",
            "quality_feedback": "{\"feedback\":\"Add error handling\",\"issues\":[\"No input validation\",\"Lacks tests\"]}",
            "optimization_target": "improve_quality"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a7b8c9d0-e1f2-3456-7890-abcd1234ef56",
        "name": "CodeOptimizer",
        "description": "Optimizes tool code based on configuration and quality feedback.",
        "detailed_description": "Optimizes code implementation for tools based on quality evaluation. Takes tool configuration and quality evaluation results to produce improved source code.",
        "toolType": "AI Agent",
        "tags": [
            "automated-refactoring",
            "ci-cd-integration",
            "code-enhancement",
            "code-optimization",
            "code-quality-improvement",
            "developer-productivity",
            "evaluation-feedback-processing",
            "json-configuration-input",
            "maintainability-automation",
            "performance-tuning",
            "program-analysis",
            "software-engineering",
            "source-code-refactoring"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Optimize code implementation based on quality evaluation feedback",
            "Improve code quality, readability, and maintainability",
            "Enhance error handling and input validation",
            "Optimize performance and efficiency",
            "Apply Python best practices and PEP 8 standards"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string containing the complete tool configuration including current implementation"
            },
            "quality_evaluation": {
                "type": "string",
                "description": "JSON string containing quality evaluation results and feedback"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string containing the complete tool configuration including current implementation",
                    "required": true
                },
                "quality_evaluation": {
                    "type": "string",
                    "description": "JSON string containing quality evaluation results and feedback",
                    "required": true
                }
            },
            "required": [
                "tool_config",
                "quality_evaluation"
            ]
        },
        "exampleInput": {
            "tool_config": "{\"type\":\"AgenticTool\",\"name\":\"SampleTool\",\"description\":\"A sample tool for demonstration.\",\"parameter\":{\"type\":\"object\",\"properties\":{},\"required\":[]}}",
            "quality_evaluation": "{\"score\":3.5,\"feedback\":[\"Missing input validation\",\"Inefficient loop detected\"]}"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d5e72814-6f8a-4ec5-9d3a-2b4c9e1f7a8b",
        "name": "LabelGenerator",
        "description": "Automatically generates relevant keyword labels for tools to improve discovery and categorization.",
        "detailed_description": "Generates relevant keyword labels for tools based on their name, description, parameters, and category. Creates a comprehensive list of tags for tool discovery and categorization.",
        "toolType": "AI Agent",
        "tags": [
            "category-assignment",
            "classification-service",
            "content-organization",
            "keyword-extraction",
            "label-generator",
            "metadata-generation",
            "metadata-tagging",
            "ontology-tagging",
            "semantic-labeling",
            "tag-generator",
            "tag-suggestion",
            "taxonomy-generation",
            "tool-categorization",
            "tool-discovery"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "generate keyword labels",
            "analyze tool metadata",
            "create comprehensive tag lists",
            "support tool discovery and organization",
            "process name, description, parameters, and category inputs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_name": {
                "type": "string",
                "description": "The name of the tool"
            },
            "tool_description": {
                "type": "string",
                "description": "Detailed description of what the tool does"
            },
            "tool_parameters": {
                "type": "string",
                "description": "JSON string describing the tool's input parameters and their types"
            },
            "category": {
                "type": "string",
                "description": "The general category or domain the tool belongs to"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_name": {
                    "type": "string",
                    "description": "The name of the tool",
                    "required": true
                },
                "tool_description": {
                    "type": "string",
                    "description": "Detailed description of what the tool does",
                    "required": true
                },
                "tool_parameters": {
                    "type": "string",
                    "description": "JSON string describing the tool's input parameters and their types",
                    "required": true
                },
                "category": {
                    "type": "string",
                    "description": "The general category or domain the tool belongs to",
                    "required": true
                }
            },
            "required": [
                "tool_name",
                "tool_description",
                "tool_parameters",
                "category"
            ]
        },
        "exampleInput": {
            "tool_name": "MoleculeAnalyzer",
            "tool_description": "Analyzes molecular structures for bioinformatics research",
            "tool_parameters": "{\"molecule_sequence\": \"string\", \"analysis_type\": \"string\"}",
            "category": "bioinformatics"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d",
        "name": "call_agentic_human",
        "description": "Provides concise, practical human-like responses to questions.",
        "detailed_description": "Produces a concise, practical answer that emulates how a well-informed human would respond to the question.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-response",
            "ai-text-generator",
            "concise-answer-generator",
            "context-aware-answer",
            "conversational-ai",
            "human-emulation-engine",
            "human-like-answer",
            "knowledge-based-qa",
            "natural-language-qa",
            "practical-response",
            "prompt-based-generation",
            "question-answering-engine"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Answers questions in a human-like manner",
            "Provides concise and practical responses",
            "Maintains a natural, conversational tone",
            "Offers reasoned perspectives for opinion-based or uncertain queries"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "question": {
                "type": "string",
                "description": "The user's question to be answered in a human-like manner."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string",
                    "description": "The user's question to be answered in a human-like manner.",
                    "required": true
                }
            },
            "required": [
                "question"
            ]
        },
        "exampleInput": {
            "question": "What are the benefits of meditation?"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "ToolMetadataGenerator",
        "description": "Generates a structured JSON metadata template from ToolUniverse configurations.",
        "detailed_description": "Generates a JSON structure with the metadata of a tool in ToolUniverse, given the JSON configuration of the tool.",
        "toolType": "AI Agent",
        "tags": [
            "agentic-tooling",
            "config-parsing",
            "data-transformation",
            "developer-productivity",
            "json-metadata-generator",
            "metadata-extraction",
            "metadata-organization",
            "schema-generation",
            "software-documentation",
            "tool-cataloging",
            "tool-configuration-analysis",
            "tool-discovery"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Processes ToolUniverse tool configurations",
            "Extracts key metadata fields",
            "Generates structured JSON output"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "tool_config": {
                "type": "string",
                "description": "JSON string of the tool configuration to extract metadata from"
            },
            "tool_type_mappings": {
                "type": "object",
                "description": "A mapping from a simplified toolType to a list of tool_config.type that fall under the toolType"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "tool_config": {
                    "type": "string",
                    "description": "JSON string of the tool configuration to extract metadata from",
                    "required": true
                },
                "tool_type_mappings": {
                    "type": "object",
                    "description": "A mapping from a simplified toolType to a list of tool_config.type that fall under the toolType (e.g., {'Databases': ['XMLTool']})",
                    "required": false
                }
            },
            "required": [
                "tool_config"
            ]
        },
        "exampleInput": {
            "tool_config": "{ \"type\": \"AgenticTool\", \"name\": \"ExampleTool\", \"description\": \"Example description\" }",
            "tool_type_mappings": {
                "Embedding Store": [
                    "EmbeddingDatabase"
                ],
                "Database": [
                    "XMLTool",
                    "DatasetTool"
                ],
                "Scientific Software Package": [
                    "PackageTool"
                ],
                "AI Agent": [
                    "AgenticTool"
                ],
                "ML Model": [
                    "ADMETAITool",
                    "AlphaFoldRESTTool",
                    "boltz2_docking",
                    "compute_depmap24q2_gene_correlations",
                    "run_compass_prediction",
                    "run_pinnacle_ppi_retrieval",
                    "run_transcriptformer_embedding_retrieval",
                    "get_abstract_from_patent_app_number",
                    "get_claims_from_patent_app_number",
                    "get_full_text_from_patent_app_number"
                ],
                "Human Expert Feedback": [
                    "mcp_auto_loader_human_expert",
                    "consult_human_expert",
                    "get_expert_response",
                    "get_expert_status",
                    "list_pending_expert_requests",
                    "submit_expert_response"
                ],
                "MCP": [
                    "MCPAutoLoaderTool"
                ],
                "Compositional Tool": [
                    "ComposeTool"
                ],
                "Tool Finder Tool": [
                    "ToolFinderEmbedding",
                    "ToolFinderLLM",
                    "ToolFinderKeyword"
                ],
                "Special Tool": [
                    "Finish",
                    "CallAgent"
                ]
            }
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9e8f3c1a-2d4f-45b9-8e6c-3d2f7b1a4c5e",
        "name": "ToolMetadataStandardizer",
        "description": "Standardizes metadata strings into canonical forms for consistent downstream usage.",
        "detailed_description": "Standardizes and groups semantically equivalent metadata strings (e.g., sources, tags) into canonical forms for consistent downstream usage.",
        "toolType": "AI Agent",
        "tags": [
            "canonicalization",
            "data-governance",
            "etl-pipeline",
            "metadata-harmonization",
            "metadata-management",
            "metadata-normalization",
            "metadata-standardization",
            "nlp-data-cleaning",
            "semantic-clustering",
            "source-canonicalization",
            "string-grouping",
            "tag-normalization",
            "text-preprocessing"
        ],
        "category": "AgenticTool",
        "lab": "Zitnik Lab",
        "source": "agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Trim whitespace and remove extraneous punctuation",
            "Collapse and normalize variant metadata strings",
            "Map raw metadata variants to canonical forms",
            "Produce JSON mappings of canonical values to their raw variants"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "metadata_list": {
                "type": "array",
                "description": "List of raw metadata strings (e.g., sources, tags) to standardize and group."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "metadata_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of raw metadata strings (e.g., sources, tags) to standardize and group.",
                    "required": true
                }
            },
            "required": [
                "metadata_list"
            ]
        },
        "exampleInput": {
            "metadata_list": [
                "Gene Expression",
                "gene_expression",
                "Gene-Expression",
                "protein analysis",
                "Protein-Analysis",
                "NCBI",
                "national center for biotechnology information"
            ]
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa2d2c6e-3b5a-4d1b-8a1b-9f7e6c5d4a2b",
        "name": "disease_target_score",
        "description": "Extracts disease-target association scores from specified data sources via GraphQL.",
        "detailed_description": "Extract disease-target association scores from a specific data source using GraphQL API. This tool retrieves all targets associated with a disease and their scores from a specified datasource (e.g., chembl, eva, cancer_gene_census, etc.).",
        "toolType": "API",
        "tags": [
            "association-score-extraction",
            "bioinformatics",
            "biomarker-identification",
            "computational-biology",
            "datasource-integration",
            "disease-target-association",
            "drug-discovery-support",
            "efo-id-query",
            "experimental-factor-ontology",
            "genomics-research",
            "graphql-api-query",
            "paginated-results",
            "target-prioritization"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "GraphQL API",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve targets associated with a disease",
            "Extract scores from specified data sources",
            "Support pagination of results",
            "Query via GraphQL API"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "datasourceId": {
                "type": "string",
                "description": "The datasource ID to extract scores from. Available options: 'chembl', 'eva', 'eva_somatic', 'cancer_gene_census', 'cancer_biomarkers', 'europepmc', 'expression_atlas', 'genomics_england', 'impc', 'reactome', 'uniprot_literature', 'uniprot_variants'"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)",
                "default": 100
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "datasourceId": {
                    "type": "string",
                    "description": "The datasource ID to extract scores from. Available options: 'chembl', 'eva', 'eva_somatic', 'cancer_gene_census', 'cancer_biomarkers', 'europepmc', 'expression_atlas', 'genomics_england', 'impc', 'reactome', 'uniprot_literature', 'uniprot_variants'"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId",
                "datasourceId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "datasourceId": "chembl",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "6a7b1c2d-3e4f-5678-90ab-cdef12345678",
        "name": "chembl_disease_target_score",
        "description": "Retrieve disease-target association scores from ChEMBL.",
        "detailed_description": "Extract disease-target association scores specifically from ChEMBL database. ChEMBL provides bioactivity data for drug-target interactions.",
        "toolType": "API",
        "tags": [
            "bioactivity-score",
            "bioinformatics-tool",
            "chembl-api-access",
            "chembl-bioactivity-extraction",
            "cheminformatics",
            "disease-target-association",
            "disease-target-scoring",
            "drug-discovery",
            "drug-target-interactions",
            "efo-id-query",
            "pharmacology-data",
            "target-prioritization",
            "target-validation"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "ChEMBL",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve disease-target association scores from ChEMBL",
            "Support pagination of results",
            "Provide bioactivity scores for targets"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "9f78a274-3d2e-4bc9-bf73-5d61d4a3b8b6",
        "name": "eva_disease_target_score",
        "description": "Extracts disease-target association scores from the European Variation Archive.",
        "detailed_description": "Extract disease-target association scores from EVA (European Variation Archive). EVA provides genetic variant data.",
        "toolType": "API",
        "tags": [
            "bioinformatics-analysis",
            "computational-genetics",
            "disease-gene-prioritization",
            "disease-target-association",
            "efo-disease-id",
            "european-variation-archive",
            "genetic-biomarker-discovery",
            "genetic-variation-data",
            "ontology-driven-query",
            "phenotype-association-metrics",
            "score-extraction",
            "variant-disease-scoring"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "EVA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extracts disease-target association scores from EVA",
            "Allows querying by EFO ID",
            "Supports pagination via pageSize parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "eva_somatic_disease_target_score",
        "description": "Extract disease-target association scores from EVA somatic mutations",
        "detailed_description": "Extract disease-target association scores from EVA somatic mutations. This includes somatic variant data.",
        "toolType": "API",
        "tags": [
            "bioinformatics-api",
            "cancer-genomics",
            "computational-genetics",
            "disease-biomarker-discovery",
            "disease-target-scoring",
            "efo-id-query",
            "eva-somatic-mutations",
            "mutation-driven-target-identification",
            "oncology-bioinformatics",
            "somatic-variant-analysis",
            "target-prioritization",
            "variant-disease-mapping"
        ],
        "category": "DiseaseTargetScoreTool",
        "lab": "Zitnik Lab",
        "source": "eva-somatic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract disease-target association scores from EVA somatic mutations",
            "Retrieve disease information by EFO ID",
            "Support pagination through pageSize parameter",
            "Provide target symbols and their scores"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
            },
            "pageSize": {
                "type": "integer",
                "description": "Number of results per page (default: 100, max: 100)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO (Experimental Factor Ontology) ID of the disease, e.g., 'EFO_0000339' for chronic myelogenous leukemia"
                },
                "pageSize": {
                    "type": "integer",
                    "description": "Number of results per page (default: 100, max: 100)",
                    "default": 100
                }
            },
            "required": [
                "efoId"
            ]
        },
        "exampleInput": {
            "efoId": "EFO_0000339",
            "pageSize": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c4d2-9e74-4b1f-8f65-9aa1f2b3c4d5",
        "name": "MedlinePlus_connect_lookup_by_code",
        "description": "Lookup MedlinePlus pages by clinical/drug/test codes via Connect Web Service, returning JSON or XML.",
        "detailed_description": "Look up corresponding MedlinePlus page information through MedlinePlus Connect Web Service using clinical/drug/test codes (such as ICD-10 CM, RXCUI, LOINC, etc.), supports JSON or XML format return.",
        "toolType": "API",
        "tags": [
            "clinical-code-lookup",
            "clinical-terminology-service",
            "disease-information",
            "drug-information",
            "health-informatics",
            "icd-10-cm-lookup",
            "loinc-lookup",
            "medical-coding",
            "medlineplus-connect",
            "rxcui-lookup",
            "test-information",
            "xml-json-api"
        ],
        "category": "MedlinePlusRESTTool",
        "lab": "Zitnik Lab",
        "source": "MedlinePlus",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Lookup MedlinePlus page information by clinical/drug/test codes",
            "Supports JSON format return",
            "Supports XML format return",
            "Allows specifying code system OID and code value",
            "Optional descriptive name to improve matching",
            "Return information in English or Spanish"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cs": {
                "type": "string",
                "description": "Code system OID, e.g., ICD-10 CM=2.16.840.1.113883.6.90, RXCUI=2.16.840.1.113883.6.88, LOINC=2.16.840.1.113883.6.1, etc."
            },
            "c": {
                "type": "string",
                "description": "Specific code value to query, e.g., \"E11.9\" (ICD-10 CM) or \"637188\" (RXCUI)."
            },
            "dn": {
                "type": "string",
                "description": "Optional, descriptive name (English) corresponding to the code, for drugs can fill in \"Chantix 0.5 MG Oral Tablet\", can improve matching accuracy."
            },
            "language": {
                "type": "string",
                "description": "Return information language, \"en\" for English, \"es\" for Spanish, default \"en\"."
            },
            "format": {
                "type": "string",
                "description": "Return format, options \"json\" or \"xml\", default \"json\"."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cs": {
                    "type": "string",
                    "description": "Code system OID, e.g., ICD-10 CM=2.16.840.1.113883.6.90, RXCUI=2.16.840.1.113883.6.88, LOINC=2.16.840.1.113883.6.1, etc."
                },
                "c": {
                    "type": "string",
                    "description": "Specific code value to query, e.g., \"E11.9\" (ICD-10 CM) or \"637188\" (RXCUI)."
                },
                "dn": {
                    "type": "string",
                    "description": "Optional, descriptive name (English) corresponding to the code, for drugs can fill in \"Chantix 0.5 MG Oral Tablet\", can improve matching accuracy.",
                    "default": ""
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "en",
                        "es"
                    ],
                    "description": "Return information language, \"en\" for English, \"es\" for Spanish, default \"en\".",
                    "default": "en"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "json",
                        "xml"
                    ],
                    "description": "Return format, options \"json\" or \"xml\", default \"json\".",
                    "default": "json"
                }
            },
            "required": [
                "cs",
                "c"
            ]
        },
        "exampleInput": {
            "cs": "2.16.840.1.113883.6.90",
            "c": "E11.9",
            "dn": "Type 2 diabetes mellitus without complications",
            "language": "en",
            "format": "json"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5bfc2a1e-8e45-4b20-a9c7-2df8904fae3d",
        "name": "MedlinePlus_get_genetics_condition_by_name",
        "description": "Retrieve detailed genetic condition data from MedlinePlus Genetics in JSON or XML format.",
        "detailed_description": "Get detailed information from MedlinePlus Genetics corresponding to genetic condition name, supports JSON or XML format return.",
        "toolType": "API",
        "tags": [
            "biomedical-resource-integration",
            "clinical-genetics-data",
            "condition-name-search",
            "disease-annotation",
            "genetic-disorder-information",
            "genetics-condition-lookup",
            "health-knowledgebase-api",
            "heritable-disease-reference",
            "json-xml-output",
            "medlineplus-genetics",
            "phenotype-data-retrieval",
            "restful-genetics-api"
        ],
        "category": "MedlinePlusRESTTool",
        "lab": "Zitnik Lab",
        "source": "MedlinePlus Genetics",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch detailed data on a genetic condition from MedlinePlus Genetics",
            "Support JSON or XML response formats",
            "Allow querying by condition URL slug"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "condition": {
                "type": "string",
                "description": "URL slug of genetic condition, e.g., \"alzheimer-disease\", must match MedlinePlus page path."
            },
            "format": {
                "type": "string",
                "description": "Return format, options \"json\" or \"xml\", default \"json\"."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "URL slug of genetic condition, e.g., \"alzheimer-disease\", must match MedlinePlus page path."
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "json",
                        "xml"
                    ],
                    "description": "Return format, options \"json\" or \"xml\", default \"json\".",
                    "default": "json"
                }
            },
            "required": [
                "condition"
            ]
        },
        "exampleInput": {
            "condition": "alzheimer-disease",
            "format": "json"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f84c4e5-2f3d-4d1a-8b61-9ab2c6d8ecfe",
        "name": "MedlinePlus_get_genetics_gene_by_name",
        "description": "Retrieve detailed gene information from MedlinePlus Genetics in JSON or XML format.",
        "detailed_description": "Get detailed information from MedlinePlus Genetics corresponding to gene name, supports JSON or XML format return.",
        "toolType": "API",
        "tags": [
            "bioinformatics-integration",
            "disease-gene-association",
            "gene-data-retrieval",
            "gene-information",
            "genetic-disorder-reference",
            "genetic-testing-info",
            "genomic-database-access",
            "inheritance-pattern-info",
            "json-xml-support",
            "medical-genetics-api",
            "medlineplus-genetics",
            "url-slug-query"
        ],
        "category": "MedlinePlusRESTTool",
        "lab": "Zitnik Lab",
        "source": "MedlinePlus",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve gene information by name",
            "Supports JSON and XML formats",
            "Fetches data from MedlinePlus Genetics"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene": {
                "type": "string",
                "description": "URL slug of gene name, e.g., \"BRCA1\", must match MedlinePlus page path."
            },
            "format": {
                "type": "string",
                "description": "Return format, options \"json\" or \"xml\", default \"json\"."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene": {
                    "type": "string",
                    "description": "URL slug of gene name, e.g., \"BRCA1\", must match MedlinePlus page path."
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "json",
                        "xml"
                    ],
                    "description": "Return format, options \"json\" or \"xml\", default \"json\".",
                    "default": "json"
                }
            },
            "required": [
                "gene"
            ]
        },
        "exampleInput": {
            "gene": "BRCA1",
            "format": "json"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f72fa92d-5b13-4e0b-b453-7e3d77c3a8ef",
        "name": "MedlinePlus_get_genetics_index",
        "description": "Fetch the complete genetics index from MedlinePlus as an XML file.",
        "detailed_description": "Download index file (XML) of all genetics entries in MedlinePlus, get complete list in one call.",
        "toolType": "API",
        "tags": [
            "biomedical-informatics",
            "clinical-genetics",
            "genetic-information-index",
            "genetics-index-download",
            "genetics-xml-data",
            "genomic-resources",
            "health-data-retrieval",
            "health-information-access",
            "healthcare-api",
            "medical-genetics-data",
            "medical-index",
            "medlineplus-genetics",
            "medlineplus-rest-api",
            "xml-data-fetch",
            "xml-index-retrieval"
        ],
        "category": "MedlinePlusRESTTool",
        "lab": "Zitnik Lab",
        "source": "MedlinePlus",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Downloads the full genetics topic index in XML format",
            "Parses XML into a Python dictionary or OrderedDict",
            "Provides complete list of genetics entries for offline caching or batch processing"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {},
        "inputSchema": {
            "type": "object",
            "properties": {},
            "required": []
        },
        "exampleInput": {},
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa3b7a0a-8e6f-4c76-9f3b-2b0dba853cfe",
        "name": "get_patent_overview_by_text_query",
        "description": "Search USPTO patent applications by title with support for sorting, pagination, and filtering, returning key metadata fields.",
        "detailed_description": "Search for patent application overviews using a query string of the format 'applicationMetaData.inventionTitle:your_search_term', where your_search_term is the case-insensitive keyword or keyphrase you are searching for. If your_search_term is a multi-word phrase, it must be encased in escaped double quotation marks for exact matching. This tool allows for sorting, offsetting, and filterin of results. Returns a list of important metadata fields for each application, including application number, filing date, grant date, invention title, and CPC classifications.",
        "toolType": "API",
        "tags": [
            "cpc-classification-bag",
            "date-range-filter",
            "intellectual-property-discovery",
            "ip-research",
            "patent-analytics",
            "patent-application-search",
            "patent-metadata-retrieval",
            "search-by-invention-title",
            "sorting-and-pagination",
            "text-query-retrieval",
            "title-based-retrieval",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search patent applications by title keywords or phrases",
            "Sort results by filing or grant date",
            "Paginate results using offset and limit",
            "Filter results by date ranges",
            "Select specific metadata fields to include",
            "Retrieve key metadata such as application number, dates, title, and CPC classifications"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "q": {
                "type": "string",
                "description": "Keyword or keyphrase to search for in the patent application title. The exact format of your query must be 'applicationMetaData.inventionTitle:your_search_term', where your_search_term is the case-insensitive keyword or keyphrase you are searching for. If your_search_term is a multi-word phrase, enclose it in escaped double quotation marks \",\" to ensure exact match with the phrase. An example query is applicationMetaData.inventionTitle:\"machine learning\"'. This field is required."
            },
            "sort": {
                "type": "string",
                "description": "Sorts results by one of the following fields: applicationMetaData.filingDate or applicationMetaData.grantDate. Follow the field name with a space and 'asc' or 'desc' for ascending and descending by date, respectively. For example: 'applicationMetaData.filingDate desc'."
            },
            "offset": {
                "type": "integer",
                "description": "The starting position (zero-indexed) of the result set. Default is 0."
            },
            "limit": {
                "type": "integer",
                "description": "The maximum number of results to return. Default is 25."
            },
            "fields": {
                "type": "string",
                "description": "A comma-separated list of fields to include in the response, selected from the following list: 'applicationNumberText,grantDocumentMetaData,applicationMetaData.cpcClassificationBag,applicationMetaData.filingDate,applicationMetaData.grantDate,applicationMetaData.inventionTitle,applicationMetaData.applicationStatusDescriptionText,parentContinuityBag,childContinuityBag,pgpubDocumentMetaData,grantDocumentMetaData,applicationMetaData.earliestPublicationDate'. No spaces between fields!! For example: 'applicationNumberText,applicationMetaData.patentNumber'. If left empty, all fields in the above list are returned."
            },
            "rangeFilters": {
                "type": "string",
                "description": "Limits results to the date range specified for one of the following fields: applicationMetaData.filingDate or applicationMetaData.grantDate. Provide the field name and a colon-separated start and end value in YYYY-MM-DD format. For example: 'applicationMetaData.grantDate 2010-01-01:2011-01-01'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "q": {
                    "type": "string",
                    "description": "Keyword or keyphrase to search for in the patent application title. The exact format of your query must be 'applicationMetaData.inventionTitle:your_search_term', where your_search_term is the case-insensitive keyword or keyphrase you are searching for. If your_search_term is a multi-word phrase, enclose it in escaped double quotation marks \\\",\\\" to ensure exact match with the phrase. An example query is applicationMetaData.inventionTitle:\\\"machine learning\\\"'. This field is required.",
                    "required": true
                },
                "sort": {
                    "type": "string",
                    "description": "Sorts results by one of the following fields: applicationMetaData.filingDate or applicationMetaData.grantDate. Follow the field name with a space and 'asc' or 'desc' for ascending and descending by date, respectively. For example: 'applicationMetaData.filingDate desc'",
                    "required": false,
                    "default": "applicationMetaData.filingDate desc"
                },
                "offset": {
                    "type": "integer",
                    "description": "The starting position (zero-indexed) of the result set. Default is 0.",
                    "required": false,
                    "default": 0
                },
                "limit": {
                    "type": "integer",
                    "description": "The maximum number of results to return. Default is 25.",
                    "required": false,
                    "default": 25
                },
                "fields": {
                    "type": "string",
                    "description": "A comma-separated list of fields to include in the response, selected from the following list: 'applicationNumberText,grantDocumentMetaData,applicationMetaData.cpcClassificationBag,applicationMetaData.filingDate,applicationMetaData.grantDate,applicationMetaData.inventionTitle,applicationMetaData.applicationStatusDescriptionText,parentContinuityBag,childContinuityBag,pgpubDocumentMetaData,grantDocumentMetaData,applicationMetaData.earliestPublicationDate'. No spaces between fields!! For example: 'applicationNumberText,applicationMetaData.patentNumber'. If left empty, all fields in the above list are returned."
                },
                "rangeFilters": {
                    "type": "string",
                    "description": "Limits results to the date range specified for one of the following fields: applicationMetaData.filingDate or applicationMetaData.grantDate. Provide the field name and a colon-separated start and end value in YYYY-MM-DD format. For example: 'applicationMetaData.grantDate 2010-01-01:2011-01-01'",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "q": "applicationMetaData.inventionTitle:\"machine learning\"",
            "sort": "applicationMetaData.filingDate desc",
            "offset": 0,
            "limit": 25,
            "fields": "applicationNumberText,applicationMetaData.inventionTitle,applicationMetaData.filingDate,applicationMetaData.grantDate,applicationMetaData.cpcClassificationBag",
            "rangeFilters": "applicationMetaData.grantDate 2010-01-01:2020-12-31"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_patent_application_metadata",
        "description": "Retrieve metadata for a specific patent application using its application number.",
        "detailed_description": "Retrieves only the metadata for a specific patent application by its application number.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "application-number-query",
            "identifier-based-access",
            "intellectual-property-research",
            "legal-research",
            "metadata-fetch",
            "metadata-retrieval",
            "patent-application-metadata",
            "patent-data-mining",
            "patent-metadata-query",
            "prior-art-search",
            "uspto-open-data-access"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata for a specific patent application by its application number"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_patent_term_adjustment_data",
        "description": "Fetches patent term adjustment details for a specified application number.",
        "detailed_description": "Obtains the patent term adjustment details for a given application number.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "expiration-date-calculation",
            "intellectual-property-data",
            "legal-compliance",
            "legal-status-information",
            "patent-application-data",
            "patent-data-retrieval",
            "patent-expiration-analysis",
            "patent-prosecution-history",
            "patent-term-adjustment",
            "patent-term-extension",
            "pta-calculation",
            "term-adjustment-details",
            "uspto-api-query",
            "uspto-open-data-access"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves patent term adjustment details by application number",
            "Breaks down adjustment quantities (A\u2010delay, B\u2010delay, C\u2010delay, applicant delays, etc.)",
            "Provides historical event data in patentTermAdjustmentHistoryDataBag",
            "Returns total count and error information if applicable"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c9d0-1234-4567-89ab-cdef01234567",
        "name": "get_patent_assignment_data",
        "description": "Retrieve assignment history for a specified patent application.",
        "detailed_description": "Accesses the history of assignments for a particular patent application.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "data-api-access",
            "intellectual-property-data",
            "ip-assignment-tracking",
            "legal-document-history",
            "patent-assignment-history",
            "patent-data-retrieval",
            "patent-ownership-records",
            "patent-record-query",
            "public-patent-database",
            "technology-transfer-insights",
            "uspto-assignment-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches assignment history for a given patent application number",
            "Returns total count of matching assignment records",
            "Provides detailed assignment entries including reel/frame numbers and page counts",
            "Includes assignment dates, conveyance text, assignor and assignee information",
            "Supplies URIs to assignment document PDFs and correspondence addresses"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4f50cd0-9bfa-4a6a-a7f5-3e9b4c1d2e8f",
        "name": "get_patent_attorney_agent_info",
        "description": "Retrieve attorney or agent of record details for a patent application.",
        "detailed_description": "Retrieves details about the attorney or agent of record for an application.",
        "toolType": "API",
        "tags": [
            "agent-of-record-query",
            "application-attorney-retrieval",
            "application-metadata-fetch",
            "bar-number-identification",
            "docketing-assistance",
            "ip-legal-representation",
            "legal-information-retrieval",
            "patent-agent-details",
            "patent-attorney-info",
            "patent-prosecution-support",
            "public-records-access",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch attorney or agent details by application number",
            "Retrieve record attorney information",
            "Obtain patent application attorney/agent data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2c20a74-3b59-4f6e-9ab2-8c9d7e5f4a6b",
        "name": "get_patent_continuity_data",
        "description": "Fetches a patent application's parent and child continuity relationships.",
        "detailed_description": "Fetches the parent and child continuity data for a patent application, showing its relationship to other applications.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "intellectual-property-analytics",
            "ip-portfolio-management",
            "legal-due-diligence",
            "parent-child-patent-relations",
            "patent-ancestry",
            "patent-application-network",
            "patent-continuity-data",
            "patent-data-retrieval",
            "patent-family-tree",
            "patent-lineage",
            "patent-prosecution-history",
            "patent-relationship-mapping",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetches parent continuity data for a patent application",
            "Fetches child continuity data for a patent application",
            "Shows relationships to other applications"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "fa2e8c9d-1b3a-4f90-bbb2-6aad5c3f4e27",
        "name": "get_patent_foreign_priority_data",
        "description": "Retrieves foreign priority claims for a patent application.",
        "detailed_description": "Accesses information about any foreign priority claims associated with an application.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "cross-border-priority",
            "foreign-priority-data",
            "ip-data-access",
            "legal-tech-api",
            "patent-analytics",
            "patent-foreign-priority",
            "patent-priority-claims",
            "priority-chain-analysis",
            "priority-claim-retrieval",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve foreign priority claims associated with a patent application",
            "Provide count of matching patent applications",
            "Return detailed foreign priority data including office names and filing dates"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "US12345678A1"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3c9a9e2e-3b5f-4d36-8a59-1a2c5e8b7f0c",
        "name": "get_patent_transaction_history",
        "description": "Retrieves the prosecution history for a given patent application.",
        "detailed_description": "Retrieves the transaction history (prosecution history) for a given patent application.",
        "toolType": "API",
        "tags": [
            "application-number-query",
            "file-wrapper-access",
            "intellectual-property-data",
            "ip-docket-history",
            "patent-application-data",
            "patent-case-tracking",
            "patent-history-retrieval",
            "patent-legal-events",
            "patent-transaction-history",
            "prosecution-history",
            "transaction-history-fetch",
            "uspto-open-data"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO Open Data Portal",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves transaction history for a patent application",
            "Accepts applicationNumberText parameter",
            "Returns total count of matching applications",
            "Provides detailed event data including eventCode, eventDescriptionText, and eventDate"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f65ecd0-2fbd-4f96-8aad-1b2c3456d789",
        "name": "get_associated_documents_metadata",
        "description": "Retrieve metadata for documents linked to a patent application, including publications and grants.",
        "detailed_description": "Obtains metadata for documents associated with an application, such as publications and grants.",
        "toolType": "API",
        "tags": [
            "application-number-lookup",
            "associated-documents",
            "bibliometric-analysis",
            "document-metadata",
            "grant-metadata",
            "intellectual-property",
            "json-metadata-output",
            "metadata-retrieval",
            "open-data-portal",
            "patent-application-documents",
            "patent-data-integration",
            "prior-art-search",
            "publication-metadata"
        ],
        "category": "USPTOOpenDataPortalTool",
        "lab": "Zitnik Lab",
        "source": "USPTO",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve metadata for documents associated with a patent application",
            "Access publication and grant document metadata"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "applicationNumberText": {
                "type": "string",
                "description": "The application number of the patent."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "applicationNumberText": {
                    "type": "string",
                    "description": "The application number of the patent.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "applicationNumberText": "12345678"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8e991b04-8d0d-4c87-9847-3e0b092c0e73",
        "name": "OpenTargets_get_disease_ids_by_name",
        "description": "Retrieve cross-referenced external IDs for a disease or phenotype name via the Open Targets GraphQL API.",
        "detailed_description": "Given a disease or phenotype name, find all cross-referenced external IDs (e.g., OMIM, MONDO, MeSH, ICD10, UMLS, MedDRA, NCIt, Orphanet) using Open Targets GraphQL API.",
        "toolType": "API",
        "tags": [
            "clinical-informatics",
            "clinical-ontology-integration",
            "cross-reference-retrieval",
            "disease-id-mapping",
            "external-database-access",
            "graphql-api-query",
            "id-harmonization",
            "medical-terminology-mapping",
            "mondo-mapping",
            "omim-mapping",
            "open-targets-integration",
            "orphanet-access",
            "phenotype-lookup",
            "translational-bioinformatics"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Find cross-referenced external IDs for diseases or phenotypes",
            "Use Open Targets GraphQL API to search by name",
            "Return IDs from OMIM, MONDO, MeSH, ICD10, UMLS, MedDRA, NCIt, and Orphanet"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "The name of the disease or phenotype (e.g. 'rheumatoid arthritis')."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the disease or phenotype (e.g. 'rheumatoid arthritis').",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "name": "rheumatoid arthritis"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "OpenTargets_get_disease_ids_by_efoId",
        "description": "Retrieve cross-referenced external disease IDs for a given EFO ID, including MONDO, OMIM, MeSH, MedDRA, NCIt, ICD10, Orphanet, and UMLS.",
        "detailed_description": "Given an EFO ID, retrieve all cross-referenced external disease IDs including MONDO, OMIM, MeSH, MedDRA, NCIt, ICD10, Orphanet, UMLS.",
        "toolType": "API",
        "tags": [
            "cross-reference-extraction",
            "disease-id-mapping",
            "efo-ontology-query",
            "external-disease-identifiers",
            "icd10-id-retrieval",
            "identifier-mapping",
            "meddra-id-retrieval",
            "mesh-id-retrieval",
            "mondo-id-retrieval",
            "ncit-id-retrieval",
            "omim-id-retrieval",
            "ontology-integration",
            "orphanet-id-retrieval",
            "phenotype-annotation",
            "umls-id-retrieval"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve cross-referenced disease IDs given an EFO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "efoId": {
                "type": "string",
                "description": "The EFO ID of the disease or phenotype."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "efoId": {
                    "type": "string",
                    "description": "The EFO ID of the disease or phenotype.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "efoId": "EFO_0000408"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e4f7b9d5-3c87-4e5a-9c1e-56b39acfe2d8",
        "name": "OpenTargets_map_any_disease_id_to_all_other_ids",
        "description": "Map any disease or phenotype ID to all cross-referenced identifiers.",
        "detailed_description": "Given any known disease or phenotype ID (EFO, OMIM, MONDO, UMLS, ICD10, MedDRA, etc.), return all known cross-referenced IDs including the EFO ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "clinical-code-mapping",
            "clinical-informatics",
            "cross-ontology-mapping",
            "disease-id-mapping",
            "efo-mapping",
            "icd10-mapping",
            "id-cross-references",
            "meddra-mapping",
            "mondo-integration",
            "omim-id-mapping",
            "ontology-harmonization",
            "phenotype-id-conversion",
            "semantic-integration",
            "umls-code-lookup"
        ],
        "category": "OpenTarget",
        "lab": "Zitnik Lab",
        "source": "Open Targets",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Map any disease or phenotype ID to all known cross-referenced IDs",
            "Supports EFO, OMIM, MONDO, UMLS, ICD10, MedDRA ID formats"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "inputId": {
                "type": "string",
                "description": "Any known disease ID (e.g. OMIM:604302, UMLS:C0003873, ICD10:M05, EFO_0000685, etc.)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "inputId": {
                    "type": "string",
                    "description": "Any known disease ID (e.g. OMIM:604302, UMLS:C0003873, ICD10:M05, EFO_0000685, etc.)",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "inputId": "OMIM:604302"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8b3e3f67-4c11-4d29-b5c7-2f318c8f1d6a",
        "name": "drugbank_vocab_search",
        "description": "Search the DrugBank vocabulary dataset by name, ID, synonyms, or other fields and return detailed drug information.",
        "detailed_description": "Search the DrugBank vocabulary dataset for drugs by name, ID, synonyms, or other fields using text-based queries. Returns detailed drug information including DrugBank ID, common name, CAS number, UNII, and synonyms.",
        "toolType": "Database",
        "tags": [
            "biomedical-data-search",
            "cas-number-lookup",
            "chemical-database-query",
            "cheminformatics",
            "drug-identifier-search",
            "drug-information-retrieval",
            "drugbank-search",
            "drugbank-vocabulary-search",
            "inchikey-lookup",
            "pharmacology-database",
            "synonym-based-search",
            "unii-search"
        ],
        "category": "DatasetTool",
        "lab": "Zitnik Lab",
        "source": "DrugBank",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Text-based search of DrugBank vocabulary",
            "Search by drug name, ID, synonyms, and other fields",
            "Configurable search fields",
            "Case-sensitive or insensitive search",
            "Exact or substring matching",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query string. Can be drug name, synonym, DrugBank ID, or any text to search for."
            },
            "search_fields": {
                "type": "array",
                "description": "Fields to search in. Available fields: 'DrugBank ID', 'Accession Numbers', 'Common name', 'CAS', 'UNII', 'Synonyms', 'Standard InChI Key'."
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Whether the search should be case sensitive."
            },
            "exact_match": {
                "type": "boolean",
                "description": "Whether to perform exact matching instead of substring matching."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Search query string. Can be drug name, synonym, DrugBank ID, or any text to search for.",
                    "minLength": 1,
                    "required": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Fields to search in. Available fields: 'DrugBank ID', 'Accession Numbers', 'Common name', 'CAS', 'UNII', 'Synonyms', 'Standard InChI Key'."
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Whether the search should be case sensitive."
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Whether to perform exact matching instead of substring matching."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return.",
                    "minimum": 1,
                    "maximum": 1000
                }
            }
        },
        "exampleInput": {
            "query": "aspirin",
            "search_fields": [
                "Common name",
                "Synonyms"
            ],
            "case_sensitive": false,
            "exact_match": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d0c2e7f8-3b31-4f3a-9e96-350a4b42fb20",
        "name": "ChEMBL_search_similar_molecules",
        "description": "Search molecules similar to a given SMILES, ChEMBL ID, or compound/drug name via ChEMBL API.",
        "detailed_description": "Search for molecules similar to a given SMILES, chembl_id, or compound or drug name, using the ChEMBL Web Services.",
        "toolType": "API",
        "tags": [
            "bioactive-compounds",
            "chembl-id-query",
            "chembl-web-services",
            "cheminformatics",
            "compound-name-search",
            "compound-similarity",
            "drug-discovery",
            "ligand-similarity",
            "molecular-similarity-search",
            "similarity-threshold",
            "smiles-query",
            "virtual-screening"
        ],
        "category": "ChEMBLTool",
        "lab": "Zitnik Lab",
        "source": "ChEMBL",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search molecules similar to a given SMILES",
            "Search molecules similar to a given ChEMBL ID",
            "Search molecules similar to a given compound or drug name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "SMILES string, chembl_id, or compound or drug name."
            },
            "similarity_threshold": {
                "type": "integer",
                "description": "Similarity threshold (0\u2013100)."
            },
            "max_results": {
                "type": "integer",
                "description": "Maximum number of results to return."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "SMILES string, chembl_id, or compound or drug name."
                },
                "similarity_threshold": {
                    "type": "integer",
                    "description": "Similarity threshold (0\u0013100).",
                    "default": 80
                },
                "max_results": {
                    "type": "integer",
                    "description": "Maximum number of results to return.",
                    "default": 20
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "CCO",
            "similarity_threshold": 80,
            "max_results": 20
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "58f9e3c0-90a4-4d0e-9d3c-1f171b0b4e37",
        "name": "UniProt_get_entry_by_accession",
        "description": "Retrieve complete UniProtKB entry JSON for a given accession.",
        "detailed_description": "Get the complete JSON entry for a specified UniProtKB accession.",
        "toolType": "API",
        "tags": [
            "accession-based-search",
            "accession-lookup",
            "bioinformatics-research",
            "computational-biology",
            "database-access",
            "entry-fetch",
            "json-entry-output",
            "molecular-biology",
            "protein-characterization",
            "protein-database-query",
            "protein-information",
            "rest-api-query",
            "sequence-annotation",
            "uniprot-entry-retrieval",
            "uniprotkb-accession"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve complete JSON entry for a UniProtKB accession",
            "Interact with UniProt REST API endpoint"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB entry accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB entry accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a7e4c3e8-f6b2-4e7b-9a1f-1b23c456d789",
        "name": "UniProt_get_function_by_accession",
        "description": "Retrieve functional annotations from a UniProtKB entry.",
        "detailed_description": "Extract functional annotations from UniProtKB entry (Comment type = FUNCTION).",
        "toolType": "API",
        "tags": [
            "accession-based-retrieval",
            "annotation-fetching",
            "bioinformatics-data-mining",
            "biological-function-annotation",
            "computational-biology-tool",
            "function-annotation-retrieval",
            "functional-comment-parser",
            "protein-function-extraction",
            "proteomics-annotation",
            "research-data-access",
            "sequence-database-query",
            "uniprot-rest-api",
            "uniprotkb-accession-query"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch entry from UniProt REST API",
            "Extract functional annotation texts",
            "Return list of functional paragraphs"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "UniProt_get_recommended_name_by_accession",
        "description": "Retrieve the recommended protein name from a UniProtKB entry via REST API.",
        "detailed_description": "Extract the recommended protein name (recommendedName) from UniProtKB entry.",
        "toolType": "API",
        "tags": [
            "accession-based-retrieval",
            "bioinformatics",
            "computational-biology",
            "database-annotation",
            "molecular-biology",
            "protein-annotation-extraction",
            "protein-name-retrieval",
            "protein-nomenclature",
            "proteomics",
            "recommended-name-extraction",
            "recommendedname-parsing",
            "rest-api-query",
            "uniprot-rest-integration",
            "uniprotkb-accession-lookup"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProtKB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch data from UniProtKB REST API",
            "Extract recommended protein full name",
            "Parse JSON response"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "6b1e4b61-f70d-4e8b-9ae9-c7282e8be7d4",
        "name": "UniProt_get_alternative_names_by_accession",
        "description": "Extract all alternative names from a UniProtKB entry.",
        "detailed_description": "Extract all alternative names (alternativeNames) from UniProtKB entry.",
        "toolType": "API",
        "tags": [
            "alias-extraction",
            "alternative-protein-names",
            "annotation-retrieval",
            "bioinformatics",
            "computational-biology",
            "database-metadata",
            "identifier-based-query",
            "metadata-retrieval",
            "protein-aliases",
            "protein-annotation",
            "protein-nomenclature",
            "uniprot-rest-api",
            "uniprotkb-accession"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract alternative names from UniProtKB entries",
            "Accept UniProt accession as input",
            "Return list of alternative protein names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3e5c712-4d3b-4f2a-8d47-6b28e24f1c3d",
        "name": "UniProt_get_organism_by_accession",
        "description": "Retrieve the organism scientific name from a UniProtKB entry.",
        "detailed_description": "Extract the organism scientific name from UniProtKB entry.",
        "toolType": "API",
        "tags": [
            "accession-to-organism",
            "bioinformatics-rest-api",
            "computational-biology",
            "life-sciences-data-access",
            "molecular-biology-resource",
            "organism-scientific-name",
            "protein-annotation-query",
            "scientific-name-extraction",
            "species-name-fetch",
            "taxonomy-entry-retrieval",
            "uniprot-rest-integration",
            "uniprotkb-accession-lookup"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProtKB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch UniProtKB entry by accession",
            "Extract organism scientific name"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f7e8dc2-b8aa-4e95-9c7d-8f5a6e9bd52c",
        "name": "UniProt_get_subcellular_location_by_accession",
        "description": "Extracts subcellular localization annotations for a UniProtKB entry.",
        "detailed_description": "Extract subcellular localization annotations from UniProtKB entry (Comment type = SUBCELLULAR LOCATION).",
        "toolType": "API",
        "tags": [
            "accession-based-retrieval",
            "bioinformatics",
            "cellular-compartment",
            "computational-biology",
            "data-mining",
            "localization-annotation",
            "molecular-biology",
            "protein-localization",
            "proteomics",
            "rest-api-access",
            "subcellular-localization",
            "uniprot-annotation",
            "uniprotkb-query"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProtKB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Extract subcellular localization annotations from UniProtKB entries",
            "Query UniProtKB REST endpoint by accession",
            "Return list of annotated subcellular localization locations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1bf85e2-3c14-4f3a-8d6a-f034b9c6e8fb",
        "name": "UniProt_get_disease_variants_by_accession",
        "description": "Retrieves all VARIANT features and their annotations from a UniProtKB entry.",
        "detailed_description": "Extract all variants (feature type = VARIANT) and their related annotations from UniProtKB entry.",
        "toolType": "API",
        "tags": [
            "bioinformatics-data-fetching",
            "biomedicalinformatics",
            "computational-proteomics",
            "disease-association-mapping",
            "disease-variant-retrieval",
            "genetic-variant-discovery",
            "protein-variant-annotation",
            "restful-api-integration",
            "sequence-variation-analysis",
            "uniprot-rest-api",
            "uniprot-variant-extraction",
            "uniprotkb-accession-query",
            "variant-data-mining"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve variant features from UniProtKB entries",
            "Filter and extract disease-related variant annotations",
            "Support input by UniProt accession",
            "Return detailed variant information including position and residues"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b07384-d9a8-4fba-93e6-acd939a1fbdb",
        "name": "UniProt_get_ptm_processing_by_accession",
        "description": "Extract PTM and processing sites from a UniProtKB entry.",
        "detailed_description": "Extract all PTM and processing sites from UniProtKB entry (feature type = MODIFIED RESIDUE or SIGNAL, etc.).",
        "toolType": "API",
        "tags": [
            "computational-biology",
            "modified-residue-annotation",
            "post-translational-modification",
            "protein-feature-extraction",
            "protein-processing-site",
            "proteolytic-cleavage-site",
            "proteomics-data-analysis",
            "ptm-extraction",
            "signal-peptide-detection",
            "transit-peptide-annotation",
            "uniprot-accession-query",
            "uniprotkb-rest-api"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProtKB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve UniProtKB entry data",
            "Extract PTM sites (modified residues)",
            "Extract signal peptide features"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6c7a198-8b34-4c97-9cdf-2a459faf3b58",
        "name": "UniProt_get_sequence_by_accession",
        "description": "Extract the canonical sequence from a UniProtKB entry.",
        "detailed_description": "Extract the canonical sequence from UniProtKB entry.",
        "toolType": "API",
        "tags": [
            "accession-based-retrieval",
            "biocuration-workflow",
            "bioinformatics-pipeline",
            "canonical-protein-sequence",
            "computational-biology",
            "molecular-biology",
            "protein-sequence-fetch",
            "proteomics-research",
            "sequence-retrieval",
            "structural-biology-support",
            "uniprot-rest-api",
            "uniprotkb-accession-query"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProtKB",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch UniProtKB entry by accession",
            "Extract canonical sequence"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f3a22e11-8cdf-4b0b-9a6e-d345c67a1234",
        "name": "UniProt_get_isoform_ids_by_accession",
        "description": "Extract splice isoform IDs from a UniProtKB entry.",
        "detailed_description": "Extract all splice isoform IDs from UniProtKB entry (isoformNames).",
        "toolType": "API",
        "tags": [
            "accession-based-query",
            "alternative-isoform-retrieval",
            "alternative-splicing-annotation",
            "bioinformatics",
            "isoform-id-retrieval",
            "isoform-list-output",
            "molecular-biology",
            "protein-isoform-list",
            "proteomics",
            "splice-isoform-extraction",
            "splice-variant-identification",
            "uniprot-rest-api",
            "uniprotkb-accession-query"
        ],
        "category": "UniProtRESTTool",
        "lab": "Zitnik Lab",
        "source": "UniProt",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Queries the UniProtKB REST API endpoint for entry JSON",
            "Extracts isoform IDs from the ALTERNATIVE PRODUCTS comment block"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "accession": {
                "type": "string",
                "description": "UniProtKB accession, e.g., P05067."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "accession": {
                    "type": "string",
                    "description": "UniProtKB accession, e.g., P05067."
                }
            },
            "required": [
                "accession"
            ]
        },
        "exampleInput": {
            "accession": "P05067"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3a9e5a1-4f5e-40a6-8d2c-9b6f2cfd2c6e",
        "name": "SemanticScholar_search_papers",
        "description": "Search for papers on Semantic Scholar with details like abstracts, publication year, journal, and URL.",
        "detailed_description": "Search for papers on Semantic Scholar including abstracts. This tool queries the Semantic Scholar API using natural language keywords and returns papers with details such as title, abstract, publication year, journal (venue), and URL.",
        "toolType": "API",
        "tags": [
            "academic-literature-search",
            "api-based-retrieval",
            "citation-discovery",
            "information-retrieval",
            "literature-review-tool",
            "natural-language-query",
            "paper-abstract-retrieval",
            "publication-metadata",
            "research-paper-discovery",
            "scholarly-paper-search",
            "scientific-publication-search",
            "semantic-scholar-api"
        ],
        "category": "SemanticScholarTool",
        "lab": "Zitnik Lab",
        "source": "Semantic Scholar",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search papers on Semantic Scholar using natural language queries",
            "Retrieve paper abstracts and metadata (title, publication year, journal, URL)",
            "Control the maximum number of returned papers",
            "Support optional API key for higher quota"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "Search query for Semantic Scholar. Use keywords separated by spaces to refine the search."
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of papers to return from Semantic Scholar."
            },
            "api_key": {
                "type": "string",
                "description": "Optional API key for Semantic Scholar to obtain a higher quota."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Search query for Semantic Scholar. Use keywords separated by spaces to refine the search."
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of papers to return from Semantic Scholar.",
                    "default": 5
                },
                "api_key": {
                    "type": "string",
                    "description": "Optional API key for Semantic Scholar to obtain a higher quota."
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "machine learning in bioinformatics",
            "limit": 5,
            "api_key": "YOUR_API_KEY"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1d5e89b-b8cd-4a43-9f89-a4e1c8d72a21",
        "name": "PubChem_get_compound_by_cid",
        "description": "Retrieve a PubChem compound using its CID.",
        "detailed_description": "Retrieve a Compound object by its PubChem CID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "chemical-database-query",
            "cheminformatics",
            "cid-lookup",
            "compound-object-retrieval",
            "computational-chemistry",
            "drug-discovery",
            "fetch-compound-by-cid",
            "molecular-structure-access",
            "pubchem-api-integration",
            "pubchem-cid-query",
            "pubchem-compound-retrieval"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve PubChem Compound objects by CID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "cid": {
                "type": "string",
                "description": "The PubChem Compound ID (CID)."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "string",
                    "description": "The PubChem Compound ID (CID)."
                }
            },
            "required": [
                "cid"
            ]
        },
        "exampleInput": {
            "cid": "2244"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "PubChem_get_compounds_by_name",
        "description": "Retrieve compounds that match an exact compound name from PubChem.",
        "detailed_description": "Retrieve compounds matching an exact name.",
        "toolType": "API",
        "tags": [
            "chemical-lookup",
            "cheminformatics",
            "compound-data",
            "compound-record",
            "compound-retrieval",
            "drug-discovery",
            "exact-name-search",
            "metabolite-identification",
            "name-based-retrieval",
            "pubchem-api",
            "pubchem-query",
            "small-molecule"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds matching an exact compound name."
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "name": {
                "type": "string",
                "description": "Exact compound name to search."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Exact compound name to search."
                }
            },
            "required": [
                "name"
            ]
        },
        "exampleInput": {
            "name": "aspirin"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f50d4e-6fac-4d5c-8e44-3f5eca2b7d1b",
        "name": "PubChem_get_compounds_by_smiles",
        "description": "Retrieve compounds matching a SMILES string.",
        "detailed_description": "Retrieve compounds matching a SMILES string.",
        "toolType": "API",
        "tags": [
            "chemical-informatics",
            "chemical-structure-search",
            "cheminformatics-api",
            "compound-lookup",
            "compound-retrieval",
            "drug-discovery",
            "exact-match-search",
            "molecular-database",
            "molecular-design",
            "pubchem-query",
            "small-molecule-search",
            "smiles-search",
            "substructure-search",
            "virtual-screening"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds matching a SMILES string"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "smiles": {
                "type": "string",
                "description": "SMILES string query."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "smiles": {
                    "type": "string",
                    "description": "SMILES string query."
                }
            },
            "required": [
                "smiles"
            ]
        },
        "exampleInput": {
            "smiles": "CCO"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b07384-d9e6-4f8f-8eaf-1bade1887f4c",
        "name": "PubChem_get_compounds_by_sdf",
        "description": "Retrieve compounds matching an SDF string.",
        "detailed_description": "Retrieve compounds matching an SDF string.",
        "toolType": "API",
        "tags": [
            "chemical-database-query",
            "chemoinformatics",
            "molecular-informatics",
            "molecular-structure-search",
            "pubchem-api",
            "pubchem-compound-search",
            "sdf-parsing",
            "sdf-query",
            "sdf-string-input",
            "structure-based-search",
            "structure-retrieval",
            "substructure-matching"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds matching SDF string"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "sdf": {
                "type": "string",
                "description": "SDF string query."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "sdf": {
                    "type": "string",
                    "description": "SDF string query."
                }
            },
            "required": [
                "sdf"
            ]
        },
        "exampleInput": {
            "sdf": "Example SDF string"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f6fb8a7-7d3c-4e8f-9b6c-3fb92e868a40",
        "name": "PubChem_get_compounds_by_inchi",
        "description": "Retrieve compounds from PubChem based on an InChI string.",
        "detailed_description": "Retrieve compounds matching an InChI string.",
        "toolType": "API",
        "tags": [
            "chemical-database-access",
            "chemical-structure-search",
            "cheminformatics",
            "compound-identification",
            "compound-retrieval",
            "computational-chemistry",
            "inchi-based-retrieval",
            "inchi-search",
            "inchi-to-compound",
            "molecular-database-query",
            "pubchem-query",
            "small-molecule-discovery",
            "structure-identifier-lookup"
        ],
        "category": "PubChem",
        "lab": "Zitnik Lab",
        "source": "PubChem",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve compounds matching an InChI string"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "inchi": {
                "type": "string",
                "description": "InChI string query."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "inchi": {
                    "type": "string",
                    "description": "InChI string query."
                }
            },
            "required": [
                "inchi"
            ]
        },
        "exampleInput": {
            "inchi": "InChI=1S/CH4/h1H4"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b12f1df-5232-4ed6-9341-f5f9efc4abc7",
        "name": "FDA_get_pregnancy_effects_info_by_drug_name",
        "description": "Retrieve pregnancy effect information for a specific drug.",
        "detailed_description": "Retrieve information about the effects on pregnancy for a specific drug.",
        "toolType": "API",
        "tags": [
            "clinical-decision-support",
            "drug-pregnancy-effects",
            "drug-safety-data",
            "fda-drug-label",
            "maternal-fetal-health",
            "medical-informatics",
            "pharmacovigilance",
            "pregnancy-risk-category",
            "pregnancy-safety",
            "prenatal-exposure-data",
            "regulatory-affairs",
            "teratogenicity-info"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve pregnancy effect information for a drug",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_name_by_pregnancy_or_breastfeeding_info",
        "description": "Retrieve drug names based on pregnancy or breastfeeding information.",
        "detailed_description": "Retrieve the drug names based on pregnancy or breastfeeding information.",
        "toolType": "API",
        "tags": [
            "breastfeeding-safety",
            "drug-label-database",
            "drug-name-retrieval",
            "drug-safety-profile",
            "fda-drug-label",
            "healthcare-api",
            "medical-informatics",
            "pagination-support",
            "pharmacovigilance",
            "pregnancy-breastfeeding-info",
            "pregnancy-safety",
            "retrieve-drug-names"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drugs by pregnancy or breastfeeding information",
            "Return brand and generic drug names",
            "Support result pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "pregnancy_info": {
                "type": "string",
                "description": "Information related to pregnancy or breastfeeding."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "pregnancy_info": {
                    "type": "string",
                    "description": "Information related to pregnancy or breastfeeding.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "pregnancy_info": "Pregnant women requiring safe medication guidance",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_pregnancy_or_breastfeeding_info_by_drug_name",
        "description": "Gets pregnancy or breastfeeding information for a specified drug.",
        "detailed_description": "Retrieve the pregnancy or breastfeeding information based on the specified drug name.",
        "toolType": "API",
        "tags": [
            "breastfeeding-information",
            "clinical-decision-support",
            "drug-information-retrieval",
            "drug-label-search",
            "drug-safety",
            "fda-drug-label",
            "fetal-risk-data",
            "healthcare-api",
            "lactation-safety",
            "maternal-health",
            "medication-safety",
            "pharmacovigilance",
            "pregnancy-information",
            "teratogenicity-assessment"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug info using brand or generic names",
            "Retrieve pregnancy or breastfeeding details",
            "Support pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e14b7a3a-8fd9-4bef-9f12-7ea2c741a3d4",
        "name": "FDA_get_contact_for_questions_info_by_drug_name",
        "description": "Retrieve contact information for drug-related questions by drug name.",
        "detailed_description": "Retrieve information on who to contact with questions about the drug based on the provided drug name.",
        "toolType": "API",
        "tags": [
            "adverse-event-reporting",
            "drug-contact-info",
            "drug-inquiry",
            "drug-name-lookup",
            "drug-safety-inquiries",
            "fda-contact-information",
            "fda-label-lookup",
            "healthcare-communication",
            "pharmaceutical-customer-service",
            "pharmacovigilance-contact",
            "prescription-drug-support",
            "regulatory-affairs",
            "regulatory-query-support"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search the FDADrugLabel database by drug name",
            "Retrieve questions contact field",
            "Support pagination via limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "name": "FDA_get_recent_changes_by_drug_name",
        "description": "Retrieves recent major labeling changes for a specific drug.",
        "detailed_description": "Retrieve recent major changes in labeling for a specific drug.",
        "toolType": "API",
        "tags": [
            "compliance-monitoring",
            "drug-label-change-history",
            "drug-safety-monitoring",
            "fda-api",
            "fda-drug-label-changes",
            "label-update-retrieval",
            "medical-labeling",
            "pharmaceutical-compliance",
            "pharmacovigilance",
            "recent-label-updates",
            "regulatory-affairs",
            "regulatory-labeling"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieves recent major changes in labeling for a specific drug",
            "Supports pagination with limit and skip parameters",
            "Searches drug_name against openfda.brand_name and openfda.generic_name fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "Aspirin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8c9f7e12-4d1c-4b5d-9a2e-3f4b5c6d7e8f",
        "name": "FDA_get_drug_name_by_reference",
        "description": "Retrieves drug names by reference from FDA drug labeling.",
        "detailed_description": "Retrieve the drug name based on the reference information provided in the drug labeling.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "drug-information-retrieval",
            "drug-label-api",
            "drug-name-retrieval",
            "fda-drug-label",
            "fda-regulatory-affairs",
            "label-reference-extraction",
            "pagination-support",
            "pharmaceutical-informatics",
            "pharmacological-database",
            "reference-based-search",
            "regulatory-data-access",
            "structured-text-query",
            "text-mining"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA-drug-labeling",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug label references",
            "Return brand_name and generic_name fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "reference": {
                "type": "string",
                "description": "The reference information to search for in the drug labeling."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "reference": {
                    "type": "string",
                    "description": "The reference information to search for in the drug labeling.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "reference": "FDA_REF_12345",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b1fa8c2d-4a13-4c37-ad8e-2b6c5d1e9f04",
        "name": "FDA_get_reference_info_by_drug_name",
        "description": "Retrieve reference information for a specified drug",
        "detailed_description": "Retrieve reference information based on the drug name provided.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "drug-name-query",
            "drug-reference-lookup",
            "drug-safety",
            "fda-drug-label",
            "fda-label-search",
            "json-output",
            "pagination-support",
            "pharmaceutical-research",
            "pharmacovigilance",
            "reference-data-retrieval",
            "regulatory-affairs",
            "regulatory-science"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve reference information by drug name",
            "Support limiting and skipping of records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4d9f7a8b-6e2b-4a3f-afab-123456789abc",
        "name": "FDA_get_drug_names_by_residue_warning",
        "description": "Fetch drug brand and generic names based on residue warnings.",
        "detailed_description": "Retrieve drug names based on the presence of residue warnings.",
        "toolType": "API",
        "tags": [
            "api-pagination",
            "contaminant-warning",
            "drug-name-retrieval",
            "drug-safety-monitoring",
            "fda-drug-label-query",
            "fdadruglabel",
            "indication-filter",
            "paginated-results",
            "pharmacovigilance-tool",
            "regulatory-affairs",
            "residue-warning-search",
            "toxicology-screening"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "openFDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search for drugs by residue warning",
            "Filter results by indication",
            "Paginate results using limit and skip",
            "Return brand and generic names"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "residue_warning": {
                "type": "string",
                "description": "The residue warning information to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "residue_warning": {
                    "type": "string",
                    "description": "The residue warning information to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "residue_warning": "Potential cross-contamination",
            "indication": "Antibiotic",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8b0f4e2-7c3a-4a19-9a2d-1b2c3d4e5f6a",
        "name": "FDA_get_residue_warning_by_drug_name",
        "description": "Get residue warnings for a specified drug.",
        "detailed_description": "Retrieve the residue warning based on drug name.",
        "toolType": "API",
        "tags": [
            "drug-label-query",
            "drug-name-lookup",
            "drug-residue-warning",
            "drug-safety-information",
            "fda-drug-label",
            "food-safety-regulations",
            "limit-skip-pagination",
            "pharmacovigilance-api",
            "regulatory-compliance-data",
            "residue-level-guidance",
            "residue-warning-retrieval",
            "structured-json-response",
            "toxicology-data",
            "veterinary-drug-residue"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve residue warnings by drug name",
            "Search across brand and generic names",
            "Supports pagination with limit and skip parameters",
            "Returns residue_warning field"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "penicillin",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "123e4567-e89b-12d3-a456-426614174000",
        "name": "FDA_get_drug_names_by_risk",
        "description": "Retrieve drug names based on risk information, especially for pregnancy or breastfeeding.",
        "detailed_description": "Retrieve drug names based on specific risk information, especially regarding pregnancy or breastfeeding.",
        "toolType": "API",
        "tags": [
            "breastfeeding-risk",
            "drug-database-query",
            "drug-indication-filter",
            "drug-label-extraction",
            "drug-safety-information",
            "fda-drug-labels",
            "lactation-safety",
            "maternal-health",
            "pharmacovigilance",
            "pregnancy-risk",
            "risk-based-drug-search",
            "risk-info-filtering",
            "structured-drug-data"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names based on risk information",
            "Filter results by indication",
            "Limit number of returned records",
            "Skip a number of records for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "risk_info": {
                "type": "string",
                "description": "Specific risk information to search for.",
                "required": true
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug.",
                "required": false
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "risk_info": {
                    "type": "string",
                    "description": "Specific risk information to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "risk_info": "pregnancy",
            "indication": "diabetes",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4fc8b22e-7d44-4cda-8b24-26cfa770ddc6",
        "name": "FDA_get_risk_info_by_drug_name",
        "description": "Retrieve pregnancy and breastfeeding risk information by drug name.",
        "detailed_description": "Retrieve risk information (especially regarding pregnancy or breastfeeding) based on the drug name.",
        "toolType": "API",
        "tags": [
            "breastfeeding-safety-info",
            "clinical-pharmacology",
            "drug-risk-information",
            "drug-safety-profile",
            "fda-drug-label",
            "healthcare-it",
            "lactation-risk-analysis",
            "limit-skip-pagination",
            "maternal-fetal-risk",
            "medication-safety",
            "pharmacovigilance",
            "pregnancy-risk-assessment",
            "regulatory-compliance",
            "risk-data-retrieval"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve risk information related to pregnancy or breastfeeding for a specified drug",
            "Searches both brand and generic drug names",
            "Supports pagination through 'limit' and 'skip' parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "ibuprofen",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "FDA_get_drug_names_by_route",
        "description": "Retrieve drug names by administration route.",
        "detailed_description": "Retrieve the drug names based on the route of administration.",
        "toolType": "API",
        "tags": [
            "administration-route-query",
            "api-integration",
            "data-filtering",
            "dosage-form-catalog",
            "drug-indexing",
            "drug-name-retrieval",
            "fda-drug-database",
            "indication-based-search",
            "medication-listing",
            "pharmacology-database",
            "prescription-information",
            "regulatory-data-access"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter drugs by route of administration",
            "Optional filtering by indication",
            "Control result pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "route": {
                "type": "string",
                "description": "The route of administration of the drug.",
                "required": true
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug.",
                "required": false
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return.",
                "required": false
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip.",
                "required": false
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "route": {
                    "type": "string",
                    "description": "The route of administration of the drug.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "route": "oral",
            "indication": "pain management",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d9d3f74c-5e5e-4f21-9929-3a1d4c5b6f7a",
        "name": "FDA_get_route_info_by_drug_name",
        "description": "Get administration route information for a given drug name.",
        "detailed_description": "Retrieve the route of administration information based on the drug name.",
        "toolType": "API",
        "tags": [
            "api-integration",
            "clinical-pharmacology",
            "drug-information-retrieval",
            "drug-labeling",
            "drug-route-info",
            "fda-drug-label",
            "healthcare-informatics",
            "json-output",
            "name-based-query",
            "pharmacology-data",
            "record-pagination",
            "regulatory-affairs",
            "route-of-administration",
            "string-input"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Searches for drug administration routes by drug name",
            "Supports result pagination via limit and skip parameters",
            "Returns route and openfda.route fields"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "aspirin",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d8f35f4b-01e2-4d60-8e2d-d5a7f9c5b73a",
        "name": "FDA_get_drug_names_by_safe_handling_warning",
        "description": "Get drug names with specific safe handling warnings.",
        "detailed_description": "Retrieve drug names that have specific safe handling warnings.",
        "toolType": "API",
        "tags": [
            "clinical-pharmacology",
            "drug-indication-filtering",
            "drug-safety-warning-query",
            "fda-drug-label-search",
            "handling-instruction-extraction",
            "medication-safety-monitoring",
            "paginated-results",
            "pharmacovigilance-support",
            "regulatory-compliance",
            "risk-mitigation-guidance",
            "safe-handling-warning-retrieval",
            "string-integer-parameters",
            "toxicology-warning"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug names with specific safe handling warnings",
            "Filter by drug indication",
            "Support pagination via limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "safe_handling_warning": {
                "type": "string",
                "description": "The specific safe handling warning to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "safe_handling_warning": {
                    "type": "string",
                    "description": "The specific safe handling warning to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "safe_handling_warning": "cytotoxic handling warning",
            "indication": "cancer",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b21fd24-0e5e-4b97-9184-3c6b3bf23a42",
        "name": "FDA_get_safe_handling_warnings_by_drug_name",
        "description": "Get safe handling warnings for a given drug name.",
        "detailed_description": "Retrieve safe handling warnings for a specific drug based on its name.",
        "toolType": "API",
        "tags": [
            "chemical-safety",
            "drug-safety-warnings",
            "fda-drug-labels",
            "fda-regulatory-data",
            "hazardous-drug-management",
            "healthcare-compliance",
            "medication-safety",
            "occupational-safety",
            "pharmaceutical-handling-guidelines",
            "pharmacovigilance-data",
            "safe-handling-warnings",
            "safe-medication-practices",
            "toxicological-safety"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve safe handling warnings based on drug name",
            "Support for limiting and skipping records"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "drug_name": {
                "type": "string",
                "description": "The name of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "drug_name": {
                    "type": "string",
                    "description": "The name of the drug.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "drug_name": "acetaminophen",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "c1a77ce9-2f65-4f3e-b9ce-2148e9b7ab2d",
        "name": "FDA_get_drug_name_by_set_id",
        "description": "Retrieve drug name for a given FDA labeling set ID.",
        "detailed_description": "Retrieve the drug name based on the Set ID of the labeling.",
        "toolType": "API",
        "tags": [
            "drug-data-api",
            "drug-identifier-resolution",
            "drug-name-retrieval",
            "fda-drug-label",
            "json-data-fetch",
            "labeling-data-service",
            "labeling-set-id",
            "medication-information",
            "pharmaceutical-labeling",
            "pharmacovigilance-support",
            "regulatory-data-access",
            "rest-api-integration",
            "set-id-lookup",
            "set-id-to-drug-name"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve drug name by Set ID",
            "Returns brand and generic names",
            "Supports pagination with limit and skip parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "set_id": {
                "type": "string",
                "description": "The Set ID, a globally unique identifier for the labeling."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "set_id": {
                    "type": "string",
                    "description": "The Set ID, a globally unique identifier for the labeling.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "set_id": "01234567",
            "limit": 5,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d4bfc5d0-3a86-4e72-ae2b-bbf4ae17f5c1",
        "name": "FDA_get_drug_names_by_spl_indexing_data_elements",
        "description": "Retrieve drug names by SPL indexing data elements.",
        "detailed_description": "Retrieve drug names based on Structured Product Labeling (SPL) indexing data elements.",
        "toolType": "API",
        "tags": [
            "dataset-pagination",
            "drug-database-query",
            "drug-name-retrieval",
            "fda-labeling",
            "indication-filter",
            "json-api",
            "label-indexing",
            "medical-informatics",
            "pharmaceutical-search",
            "regulatory-science",
            "spl-data-extraction",
            "spl-indexing-data",
            "structured-product-labeling"
        ],
        "category": "FDADrugLabel",
        "lab": "Zitnik Lab",
        "source": "FDA",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search drug names by SPL indexing data elements",
            "Filter by indication",
            "Support pagination using limit and skip"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "spl_indexing_data_elements": {
                "type": "string",
                "description": "The SPL indexing data elements to search for."
            },
            "indication": {
                "type": "string",
                "description": "The indication or usage of the drug."
            },
            "limit": {
                "type": "integer",
                "description": "The number of records to return."
            },
            "skip": {
                "type": "integer",
                "description": "The number of records to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "spl_indexing_data_elements": {
                    "type": "string",
                    "description": "The SPL indexing data elements to search for.",
                    "required": true
                },
                "indication": {
                    "type": "string",
                    "description": "The indication or usage of the drug.",
                    "required": false
                },
                "limit": {
                    "type": "integer",
                    "description": "The number of records to return.",
                    "required": false
                },
                "skip": {
                    "type": "integer",
                    "description": "The number of records to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "spl_indexing_data_elements": "active ingredient",
            "indication": "pain relief",
            "limit": 10,
            "skip": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f47a2c-0f2d-4b5a-9f24-8d1b6e5c7a0d",
        "name": "GO_search_terms",
        "description": "Search GO terms by keyword using GOlr and retrieve related biological entities.",
        "detailed_description": "Searches for Gene Ontology (GO) terms by a keyword using the GOlr search engine. Returns GO terms and related biological entities.",
        "toolType": "API",
        "tags": [
            "bioinformatics-search",
            "biological-process-query",
            "cellular-component-query",
            "functional-annotation",
            "gene-annotation",
            "gene-ontology-search",
            "go-term-discovery",
            "go-term-retrieval",
            "golr-search-engine",
            "keyword-based-go-search",
            "molecular-function-query",
            "ontology-term-search"
        ],
        "category": "GeneOntologyTool",
        "lab": "Zitnik Lab",
        "source": "Gene Ontology",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search GO terms by keyword",
            "Retrieve related biological entities"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "The keyword to search for, e.g., 'apoptosis' or 'kinase activity'."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The keyword to search for, e.g., 'apoptosis' or 'kinase activity'."
                }
            },
            "required": [
                "query"
            ]
        },
        "exampleInput": {
            "query": "apoptosis"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f2e70c8-4e5a-4a21-a1b2-9c0d0b2e5f68",
        "name": "GO_get_term_details",
        "description": "Gets detailed GO term information (definition, synonyms, annotations) via Biolink API.",
        "detailed_description": "Retrieves detailed information for a specific GO ID using the Biolink API, including definition, synonyms, and annotations.",
        "toolType": "API",
        "tags": [
            "annotation-retrieval",
            "biolink-api-integration",
            "biological-process",
            "cellular-component",
            "definition-retrieval",
            "functional-annotation",
            "gene-ontology",
            "go-term-details",
            "id-based-query",
            "molecular-function",
            "ontology-inspection",
            "synonym-expansion"
        ],
        "category": "GeneOntologyTool",
        "lab": "Zitnik Lab",
        "source": "Gene Ontology",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve GO term details",
            "Provides definitions, synonyms, and annotations"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "id": {
                "type": "string",
                "description": "The standard GO term ID, e.g., 'GO:0006915' for apoptotic process."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The standard GO term ID, e.g., 'GO:0006915' for apoptotic process."
                }
            },
            "required": [
                "id"
            ]
        },
        "exampleInput": {
            "id": "GO:0006915"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3b2e0d4-8a6f-4e27-9c2c-5a9a1e3c1f6d",
        "name": "GO_get_term_by_id",
        "description": "Retrieves GO term details by ID using GOlr.",
        "detailed_description": "Retrieves basic GO term information by ID using GOlr search.",
        "toolType": "API",
        "tags": [
            "api-based-access",
            "bioinformatics-database",
            "biological-ontology",
            "computational-biology",
            "functional-annotation",
            "functional-genomics",
            "gene-ontology-query",
            "go-id-fetch",
            "go-term-lookup",
            "go-term-metadata",
            "go-term-retrieval",
            "golr-search",
            "id-based-retrieval",
            "ontology-search-by-id"
        ],
        "category": "GeneOntologyTool",
        "lab": "Zitnik Lab",
        "source": "Gene Ontology",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch GO term details by ID",
            "Retrieve label, definition, and namespace for a GO term"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "id": {
                "type": "string",
                "description": "The standard GO term ID, e.g., 'GO:0006915' for apoptotic process."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The standard GO term ID, e.g., 'GO:0006915' for apoptotic process."
                }
            },
            "required": [
                "id"
            ]
        },
        "exampleInput": {
            "id": "GO:0006915"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "8e2a5f40-2c3d-4a2e-9abe-03726c394df0",
        "name": "GO_get_genes_for_term",
        "description": "Retrieves genes/proteins associated with a given Gene Ontology term via the Biolink API.",
        "detailed_description": "Finds all genes/proteins associated with a specific Gene Ontology term using the Biolink API.",
        "toolType": "API",
        "tags": [
            "biolink-api-integration",
            "computational-biology",
            "functional-genomics",
            "gene-association-retrieval",
            "gene-list-generation",
            "gene-ontology-query",
            "go-annotation-mining",
            "go-gene-mapping",
            "ncbi-taxon-filter",
            "ontology-based-search",
            "protein-ontology-association",
            "species-specific-filtering"
        ],
        "category": "GeneOntologyTool",
        "lab": "Zitnik Lab",
        "source": "Gene Ontology API",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch genes/proteins linked to a specified GO term",
            "Filter results by taxon using NCBI taxon ID",
            "Limit number of returned genes via rows parameter"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "id": {
                "type": "string",
                "description": "The standard GO term ID, e.g., 'GO:0006915'."
            },
            "taxon": {
                "type": "string",
                "description": "Optional species filter using a NCBI taxon ID. For example, Human is 'NCBITaxon:9606', and Mouse is 'NCBITaxon:10090'."
            },
            "rows": {
                "type": "integer",
                "description": "The number of genes to return. Default is 100."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The standard GO term ID, e.g., 'GO:0006915'."
                },
                "taxon": {
                    "type": "string",
                    "description": "Optional species filter using a NCBI taxon ID. For example, Human is 'NCBITaxon:9606', and Mouse is 'NCBITaxon:10090'."
                },
                "rows": {
                    "type": "integer",
                    "description": "The number of genes to return. Default is 100."
                }
            },
            "required": [
                "id"
            ]
        },
        "exampleInput": {
            "id": "GO:0006915",
            "taxon": "NCBITaxon:9606",
            "rows": 50
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f29e9c9-6d2b-4f57-b8ef-5d84e4f92585",
        "name": "GO_get_annotations_for_gene",
        "description": "Retrieve GO annotations for a gene via GOlr search.",
        "detailed_description": "Finds all GO annotations for a specific gene/protein using GOlr search.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "biological-process-lookup",
            "cellular-component-identification",
            "computational-biology",
            "functional-annotation",
            "functional-genomics",
            "gene-function-analysis",
            "gene-id-query",
            "gene-ontology-annotations",
            "go-annotation-retrieval",
            "go-term-search",
            "golr-search",
            "molecular-function-mapping"
        ],
        "category": "GeneOntologyTool",
        "lab": "Zitnik Lab",
        "source": "Gene Ontology",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search GO annotations",
            "Query GOlr endpoint with gene identifier",
            "Extract and return GO annotation data"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "gene_id": {
                "type": "string",
                "description": "A gene identifier such as gene symbol (e.g., 'TP53') or database ID."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "gene_id": {
                    "type": "string",
                    "description": "A gene identifier such as gene symbol (e.g., 'TP53') or database ID."
                }
            },
            "required": [
                "gene_id"
            ]
        },
        "exampleInput": {
            "gene_id": "TP53"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d6b9f3c2-e3a4-4b7e-9c1d-7abe0c4f2a9b",
        "name": "get_joint_associated_diseases_by_HPO_ID_list",
        "description": "Retrieve diseases linked to provided HPO phenotype IDs.",
        "detailed_description": "Retrieve diseases associated with a list of phenotypes or symptoms by a list of HPO IDs.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "clinical-genomics",
            "disease-phenotype-mapping",
            "genetic-disease-association",
            "hpo-id-disease-retrieval",
            "joint-phenotype-analysis",
            "medical-ontology-integration",
            "multiple-hpo-query",
            "offset-pagination",
            "phenotype-based-disease-search",
            "rare-disease-discovery",
            "semantic-phenotyping"
        ],
        "category": "MonarchDiseasesForMultiplePheno",
        "lab": "Zitnik Lab",
        "source": "Monarch",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve diseases associated with HPO IDs",
            "Support specifying limit and offset for pagination"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "HPO_ID_list": {
                "type": "array",
                "description": "List of phenotypes or symptoms"
            },
            "limit": {
                "type": "integer",
                "description": "Number of entries to fetch."
            },
            "offset": {
                "type": "integer",
                "description": "Number of initial entries to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "HPO_ID_list": {
                    "type": "array",
                    "description": "List of phenotypes or symptoms",
                    "items": {
                        "type": "string",
                        "description": "The HPO ID of the phenotype or symptom.",
                        "required": true
                    },
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "Number of entries to fetch.",
                    "required": false
                },
                "offset": {
                    "type": "integer",
                    "description": "Number of initial entries to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "HPO_ID_list": [
                "HP:0001250",
                "HP:0004322"
            ],
            "limit": 10,
            "offset": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d37a1e5c-8c1d-4e38-a1f7-e3a7b4befb16",
        "name": "get_phenotype_by_HPO_ID",
        "description": "Fetch a phenotype or symptom by its HPO ID.",
        "detailed_description": "Retrieve a phenotype or symptom by its HPO ID.",
        "toolType": "API",
        "tags": [
            "bioinformatics",
            "clinical-phenotype",
            "diagnostic-support",
            "disease-phenotype",
            "hpo-id-lookup",
            "human-phenotype-ontology",
            "monarch-platform",
            "ontology-query",
            "phenotype-annotation",
            "phenotype-retrieval",
            "phenotypic-feature",
            "symptom-retrieval"
        ],
        "category": "Monarch",
        "lab": "Zitnik Lab",
        "source": "Monarch",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve a phenotype or symptom by HPO ID"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "id": {
                "type": "string",
                "description": "The HPO ID of the phenotype or symptom."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The HPO ID of the phenotype or symptom.",
                    "required": true
                }
            }
        },
        "exampleInput": {
            "id": "HP:0000118"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e13bfc22-8d1a-4fcb-9f5c-12ab34cd56ef",
        "name": "get_HPO_ID_by_phenotype",
        "description": "Retrieve the HPO ID for a given phenotype or symptom.",
        "detailed_description": "Retrieve the HPO ID of a phenotype or symptom.",
        "toolType": "API",
        "tags": [
            "biomedical-ontology",
            "clinical-phenotyping",
            "computational-phenomics",
            "disease-annotation",
            "genotype-phenotype-mapping",
            "hpo-id-lookup",
            "id-retrieval",
            "medical-informatics",
            "ontology-query",
            "pagination-support",
            "phenotype-annotation",
            "phenotype-to-hpo",
            "symptom-coding",
            "text-based-query"
        ],
        "category": "Monarch",
        "lab": "Zitnik Lab",
        "source": "Monarch",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve HPO IDs by phenotype or symptom",
            "Supports pagination through limit and offset parameters"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "query": {
                "type": "string",
                "description": "One query phenotype or symptom."
            },
            "limit": {
                "type": "integer",
                "description": "Number of entries to fetch."
            },
            "offset": {
                "type": "integer",
                "description": "Number of initial entries to skip."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": "One query phenotype or symptom.",
                    "required": true
                },
                "limit": {
                    "type": "integer",
                    "description": "Number of entries to fetch.",
                    "required": false
                },
                "offset": {
                    "type": "integer",
                    "description": "Number of initial entries to skip.",
                    "required": false
                }
            }
        },
        "exampleInput": {
            "query": "Headache",
            "limit": 10,
            "offset": 0
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f8b2d7a-8c3b-4a6f-91db-2a23f6b1012c",
        "name": "xml_element_search",
        "description": "Search XML elements by tag name with optional filters on text content and attributes, supporting recursive or direct child searches.",
        "detailed_description": "Search for XML elements by tag name with optional filtering by text content and attributes. Supports both recursive and direct child searches.",
        "toolType": "Database",
        "tags": [
            "attribute-filter",
            "direct-child-search",
            "hierarchical-data-query",
            "recursive-xml-search",
            "structure-based-search",
            "tag-name-query",
            "text-content-filter",
            "xml-data-mining",
            "xml-document-processing",
            "xml-element-search",
            "xml-query-tool",
            "xml-tag-extraction"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "Agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search XML elements by tag name",
            "Filter by presence or absence of text",
            "Filter by presence or absence of attributes",
            "Support recursive or direct child searches",
            "Limit number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "element_name_for_search": {
                "type": "string",
                "description": "Name of the XML element to search for (e.g., 'book', 'title', 'author')"
            },
            "recursive": {
                "type": "boolean",
                "description": "Whether to search recursively through all descendants"
            },
            "has_text": {
                "type": "boolean",
                "description": "Filter elements: true=only with text, false=only without text, null (argument left empty) = no filter"
            },
            "has_attributes": {
                "type": "boolean",
                "description": "Filter elements: true=only with attributes, false=only without attributes, null (argument left empty) = no filter"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "element_name_for_search": {
                    "type": "string",
                    "description": "Name of the XML element to search for (e.g., 'book', 'title', 'author')",
                    "minLength": 1
                },
                "recursive": {
                    "type": "boolean",
                    "description": "Whether to search recursively through all descendants",
                    "default": true
                },
                "has_text": {
                    "type": "boolean",
                    "description": "Filter elements: true=only with text, false=only without text, null (argument left empty) = no filter",
                    "default": null
                },
                "has_attributes": {
                    "type": "boolean",
                    "description": "Filter elements: true=only with attributes, false=only without attributes, null (argument left empty) = no filter",
                    "default": null
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 10000
                }
            },
            "required": [
                "element_name"
            ]
        },
        "exampleInput": {
            "element_name_for_search": "book",
            "recursive": true,
            "has_text": true,
            "has_attributes": false,
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e7b8c5d9-1a2b-4c3d-8e9f-0a1b2c3d4e5f",
        "name": "xml_attribute_filter",
        "description": "Filter XML elements based on attribute conditions such as existence, equality, and pattern matching.",
        "detailed_description": "Filter XML elements based on attribute criteria using various conditions like existence, equality, contains, starts/ends with patterns.",
        "toolType": "Database",
        "tags": [
            "attribute-based-filtering",
            "attribute-existence-check",
            "attribute-value-comparison",
            "conditional-xml-query",
            "data-filtering-xml",
            "element-name-filter",
            "ends-with-filter",
            "starts-with-filter",
            "xml-attribute-filter",
            "xml-data-extraction",
            "xml-element-selection",
            "xml-parsing",
            "xml-pattern-matching",
            "xml-query-utility"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "XML",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Filter XML elements by attribute name and value",
            "Supports conditions: exists, equals, contains, starts_with, ends_with",
            "Allow optional element name filtering",
            "Limit the number of results returned"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "attribute_filter": {
                "type": "object",
                "description": "Attribute name to filter on (e.g., {\"id\": \"\"}, {\"class\": \"\"})"
            },
            "element_name": {
                "type": "string",
                "description": "Optional element name to filter (use '*' for all elements)"
            },
            "condition": {
                "type": "string",
                "description": "Filtering condition to apply"
            },
            "value": {
                "type": "string",
                "description": "Value for comparison (not needed for 'exists' condition)"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "attribute_filter": {
                    "type": "object",
                    "description": "Attribute name to filter on (e.g., {\"id\": \"\"}, {\"class\": \"\"})",
                    "minProperties": 1,
                    "maxProperties": 1,
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "element_name": {
                    "type": "string",
                    "description": "Optional element name to filter (use '*' for all elements)",
                    "default": "*"
                },
                "condition": {
                    "type": "string",
                    "description": "Filtering condition to apply",
                    "enum": [
                        "exists",
                        "equals",
                        "contains",
                        "starts_with",
                        "ends_with"
                    ],
                    "default": "exists"
                },
                "value": {
                    "type": "string",
                    "description": "Value for comparison (not needed for 'exists' condition)",
                    "default": ""
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 10000
                }
            },
            "required": [
                "attribute_filter"
            ]
        },
        "exampleInput": {
            "attribute_filter": {
                "id": "123"
            },
            "element_name": "user",
            "condition": "equals",
            "value": "John Doe",
            "limit": 10
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e3c7d2e8-9a4b-4c3d-8f1a-2b0c9d4e5f6a",
        "name": "xml_text_search",
        "description": "Search XML elements by text, tail text, or attribute values with options for case sensitivity and exact matching.",
        "detailed_description": "Search for XML elements containing specific text content in element text, tail text, or attribute values. Supports case-sensitive and exact matching options.",
        "toolType": "Database",
        "tags": [
            "case-sensitive-search",
            "data-extraction",
            "document-analysis",
            "exact-match-search",
            "query-filtering",
            "structured-data-search",
            "substring-matching",
            "text-mining",
            "xml-attribute-search",
            "xml-content-extraction",
            "xml-element-query",
            "xml-parsing",
            "xml-processing",
            "xml-text-search"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "XML",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Search XML elements by text content",
            "Search element tail text",
            "Search within attribute values",
            "Case-sensitive matching",
            "Exact substring matching",
            "Limit number of results"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "text_search": {
                "type": "string",
                "description": "Text to search for within XML elements"
            },
            "element_name": {
                "type": "string",
                "description": "Optional element name to search within (use '*' for all elements)"
            },
            "case_sensitive": {
                "type": "boolean",
                "description": "Whether the text search should be case sensitive"
            },
            "exact_match": {
                "type": "boolean",
                "description": "Whether to perform exact matching instead of substring matching"
            },
            "search_attributes": {
                "type": "boolean",
                "description": "Whether to also search within attribute values"
            },
            "limit": {
                "type": "integer",
                "description": "Maximum number of results to return"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "text_search": {
                    "type": "string",
                    "description": "Text to search for within XML elements",
                    "minLength": 1
                },
                "element_name": {
                    "type": "string",
                    "description": "Optional element name to search within (use '*' for all elements)",
                    "default": "*"
                },
                "case_sensitive": {
                    "type": "boolean",
                    "description": "Whether the text search should be case sensitive",
                    "default": false
                },
                "exact_match": {
                    "type": "boolean",
                    "description": "Whether to perform exact matching instead of substring matching",
                    "default": false
                },
                "search_attributes": {
                    "type": "boolean",
                    "description": "Whether to also search within attribute values",
                    "default": false
                },
                "limit": {
                    "type": "integer",
                    "description": "Maximum number of results to return",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 10000
                }
            },
            "required": [
                "text_search"
            ]
        },
        "exampleInput": {
            "text_search": "example",
            "element_name": "*",
            "case_sensitive": false,
            "exact_match": false,
            "search_attributes": false,
            "limit": 100
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "xml_create",
        "description": "Create a formatted XML document from structured data with support for nested elements and attributes.",
        "detailed_description": "Create a new XML document from structured data. Supports nested elements, attributes, and text content with automatic formatting.",
        "toolType": "Database",
        "tags": [
            "attribute-handling",
            "auto-formatting",
            "configuration-file-creation",
            "data-serialization",
            "document-builder",
            "file-export",
            "markup-language",
            "nested-element-support",
            "structured-data-conversion",
            "text-content-injection",
            "xml-document-creation",
            "xml-generation",
            "xml-serializer"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "XML",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Create XML documents from structured data",
            "Support nested elements",
            "Handle attributes",
            "Include text content",
            "Automatic formatting of XML"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "create_xml": {
                "type": "object",
                "description": "XML structure to create. Use '@key' for attributes, '#text' for text content, other keys for child elements"
            },
            "root_element": {
                "type": "string",
                "description": "Name of the root element for the new XML document"
            },
            "save_path": {
                "type": "string",
                "description": "Optional file path to save the created XML document"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "create_xml": {
                    "type": "object",
                    "description": "XML structure to create. Use '@key' for attributes, '#text' for text content, other keys for child elements",
                    "additionalProperties": true
                },
                "root_element": {
                    "type": "string",
                    "description": "Name of the root element for the new XML document",
                    "default": "root",
                    "minLength": 1
                },
                "save_path": {
                    "type": "string",
                    "description": "Optional file path to save the created XML document",
                    "default": ""
                }
            },
            "required": [
                "create_xml"
            ]
        },
        "exampleInput": {
            "create_xml": {
                "@id": "1",
                "item": {
                    "#text": "Sample",
                    "@type": "example"
                }
            },
            "root_element": "root",
            "save_path": "/tmp/output.xml"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b241101-e2bb-4255-8caf-4136c566a962",
        "name": "xml_transform",
        "description": "Transform XML into dict, JSON, or formatted XML with optional flattening.",
        "detailed_description": "Transform loaded XML into different formats (dict, JSON, formatted XML) with optional flattening of nested structures.",
        "toolType": "Database",
        "tags": [
            "attribute-flattening",
            "hierarchical-data-serialization",
            "markup-language-processing",
            "nested-xml-structures",
            "structured-data-conversion",
            "structured-data-processing",
            "xml-flattening",
            "xml-formatting",
            "xml-parsing",
            "xml-to-dict",
            "xml-to-json",
            "xml-transformation"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "Agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Transform loaded XML into dict",
            "Transform loaded XML into JSON",
            "Transform loaded XML into formatted XML",
            "Flatten nested structures with attribute prefixes and text nodes"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "transform_xml": {
                "type": "boolean",
                "description": "Flag to indicate transformation operation"
            },
            "output_format": {
                "type": "string",
                "description": "Target format for transformation"
            },
            "flatten": {
                "type": "boolean",
                "description": "Whether to flatten nested structures (attributes prefixed with @, text as #text)"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "transform_xml": {
                    "type": "boolean",
                    "description": "Flag to indicate transformation operation",
                    "default": true
                },
                "output_format": {
                    "type": "string",
                    "description": "Target format for transformation",
                    "enum": [
                        "xml",
                        "json",
                        "dict"
                    ],
                    "default": "dict"
                },
                "flatten": {
                    "type": "boolean",
                    "description": "Whether to flatten nested structures (attributes prefixed with @, text as #text)",
                    "default": false
                }
            },
            "required": [
                "transform_xml"
            ]
        },
        "exampleInput": {
            "transform_xml": true,
            "output_format": "dict",
            "flatten": false
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e9b1c07d-fda3-4bea-8bae-8b0c4f8422d3",
        "name": "get_xml_structure",
        "description": "Retrieve the structure of an XML document.",
        "detailed_description": "Get the structure of the XML document.",
        "toolType": "Database",
        "tags": [
            "data-model-mapping",
            "document-hierarchy-analysis",
            "hierarchical-data-analysis",
            "markup-language-processing",
            "metadata-extraction",
            "schema-inference",
            "structured-data-discovery",
            "xml-document-analysis",
            "xml-parsing",
            "xml-structure-extraction",
            "xml-tag-extraction",
            "xml-tree-inspection"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "Agentic",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve the structure of an XML document"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "get_structure": {
                "type": "boolean",
                "description": "Flag to request XML document structure"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "get_structure": {
                    "type": "boolean",
                    "description": "Flag to request XML document structure",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "get_structure": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "e8c9d8e2-5b17-4aab-9c04-3e5b6afdf532",
        "name": "xml_upload_to_hf",
        "description": "Uploads a local XML file to a Hugging Face dataset repository with pre-upload validation.",
        "detailed_description": "Upload a local XML file to a Hugging Face Hub Dataset repository with validation before upload.",
        "toolType": "Database",
        "tags": [
            "ai-dataset-preparation",
            "api-authentication",
            "automation-pipeline",
            "data-ingestion",
            "dataset-upload",
            "file-sync",
            "hf-dataset-repo",
            "huggingface-hub",
            "repository-management",
            "xml-data-integration",
            "xml-upload",
            "xml-validation"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "Hugging Face Hub",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Upload local XML files",
            "Validate XML files before upload",
            "Push XML files to Hugging Face dataset repository"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "local_file_path": {
                "type": "string",
                "description": "Path to the local XML file to upload"
            },
            "repo_id": {
                "type": "string",
                "description": "Hugging Face Hub Dataset repository ID (e.g., 'username/repo_name')"
            },
            "path_in_repo": {
                "type": "string",
                "description": "Destination path in the repository for the XML file (e.g., 'data/my_data.xml')"
            },
            "hf_token": {
                "type": "string",
                "description": "Hugging Face API token with write permissions"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "local_file_path": {
                    "type": "string",
                    "description": "Path to the local XML file to upload",
                    "minLength": 1
                },
                "repo_id": {
                    "type": "string",
                    "description": "Hugging Face Hub Dataset repository ID (e.g., 'username/repo_name')",
                    "minLength": 1
                },
                "path_in_repo": {
                    "type": "string",
                    "description": "Destination path in the repository for the XML file (e.g., 'data/my_data.xml')",
                    "minLength": 1
                },
                "hf_token": {
                    "type": "string",
                    "description": "Hugging Face API token with write permissions",
                    "minLength": 1
                }
            },
            "required": [
                "local_file_path",
                "repo_id",
                "path_in_repo"
            ]
        },
        "exampleInput": {
            "local_file_path": "/path/to/file.xml",
            "repo_id": "user123/my-dataset",
            "path_in_repo": "data/file.xml",
            "hf_token": "hf_abcdef1234567890abcdef1234567890"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "xml_download_from_hf",
        "description": "Downloads and validates an XML file from a Hugging Face Hub dataset to a specified local path.",
        "detailed_description": "Download an XML file from a Hugging Face Hub Dataset repository to a local path with validation after download.",
        "toolType": "Database",
        "tags": [
            "data-ingestion",
            "dataset-fetch",
            "file-validation",
            "hf-api-integration",
            "hf-dataset-download",
            "huggingface-hub",
            "local-storage",
            "ml-pipeline",
            "remote-file-download",
            "remote-to-local",
            "repository-integration",
            "token-authentication",
            "xml-data-transfer",
            "xml-download",
            "xml-file-management"
        ],
        "category": "XMLTool",
        "lab": "Zitnik Lab",
        "source": "Hugging Face Hub",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Download XML files from Hugging Face Hub",
            "Validate downloaded XML files",
            "Save XML files to a specified local path"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "repo_id": {
                "type": "string",
                "description": "Hugging Face Hub Dataset repository ID (e.g., 'username/repo_name')"
            },
            "path_in_repo": {
                "type": "string",
                "description": "Path to the XML file in the repository (e.g., 'data/my_data.xml')"
            },
            "local_save_path": {
                "type": "string",
                "description": "Local file path where the XML should be saved"
            },
            "hf_token": {
                "type": "string",
                "description": "Hugging Face API token with read permissions"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "repo_id": {
                    "type": "string",
                    "description": "Hugging Face Hub Dataset repository ID (e.g., 'username/repo_name')",
                    "minLength": 1
                },
                "path_in_repo": {
                    "type": "string",
                    "description": "Path to the XML file in the repository (e.g., 'data/my_data.xml')",
                    "minLength": 1
                },
                "local_save_path": {
                    "type": "string",
                    "description": "Local file path where the XML should be saved",
                    "minLength": 1
                },
                "hf_token": {
                    "type": "string",
                    "description": "Hugging Face API token with read permissions",
                    "minLength": 1
                }
            },
            "required": [
                "repo_id",
                "path_in_repo",
                "local_save_path"
            ]
        },
        "exampleInput": {
            "repo_id": "username/repo_name",
            "path_in_repo": "data/my_data.xml",
            "local_save_path": "/tmp/my_data.xml",
            "hf_token": "hf_ABC123xyz"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a6b2c1e0-4598-4a2d-b3f5-1e9d5c634af7",
        "name": "OSL_get_efo_id_by_disease_name",
        "description": "Lookup Experimental Factor Ontology (EFO) IDs for diseases via EMBL-EBI OLS API.",
        "detailed_description": "Tool to lookup Experimental Factor Ontology (EFO) IDs for diseases via the EMBL-EBI OLS API.",
        "toolType": "API",
        "tags": [
            "bioinformatics-integration",
            "biomedical-ontology",
            "data-integration",
            "disease-identifier-resolution",
            "disease-ontology-lookup",
            "disease-to-efo",
            "ebi-ols-api-query",
            "efo-id-lookup",
            "experimental-factor-ontology",
            "ontology-mapping",
            "semantic-annotation",
            "translational-research"
        ],
        "category": "EFOTool",
        "lab": "Zitnik Lab",
        "source": "EMBL-EBI OLS",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Lookup Experimental Factor Ontology (EFO) IDs for diseases"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "disease": {
                "type": "string",
                "description": "Search query for diseases. Provide the disease name to lookup the corresponding EFO ID."
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "disease": {
                    "type": "string",
                    "description": "Search query for diseases. Provide the disease name to lookup the corresponding EFO ID."
                }
            },
            "required": [
                "disease"
            ]
        },
        "exampleInput": {
            "disease": "breast cancer"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "name": "get_dscribe_info",
        "description": "Retrieve key information about DScribe, a library for generating machine-learning descriptors for materials and molecules.",
        "detailed_description": "Get comprehensive information about DScribe \u2013 a library for generating machine-learning descriptors for materials and molecules.",
        "toolType": "Scientific Software Package",
        "tags": [
            "computational-materials-science",
            "data-driven-materials",
            "descriptor-library",
            "feature-engineering",
            "material-structure-descriptors",
            "materials-informatics",
            "ml-descriptor-generation",
            "molecular-feature-extraction",
            "molecular-machine-learning",
            "property-prediction",
            "python-package",
            "structure-based-descriptors"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "DScribe",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Get comprehensive information about DScribe library",
            "Include usage examples and a quick-start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and a quick-start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and a quick-start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3f9f4e8-7a9c-4c0e-9f3a-2c1d5a7b8e6f",
        "name": "get_mudata_info",
        "description": "Provides comprehensive information about MuData, a multimodal annotated data package for computational biology",
        "detailed_description": "Get comprehensive information about MuData \u2013 multimodal annotated data for computational biology",
        "toolType": "Scientific Software Package",
        "tags": [
            "annotated-data",
            "bioinformatics-data",
            "computational-biology",
            "data-discovery",
            "dataset-summary",
            "metadata-extraction",
            "mudata-format",
            "multimodal-omics",
            "multiomic-integration",
            "python-package",
            "quick-start-guide",
            "single-cell-analysis",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "mudata",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the MuData package",
            "Optionally include usage examples",
            "Optionally provide quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3b2e6f07-8d4a-4e36-91b4-0cc58e3a1f2f",
        "name": "get_pysam_info",
        "description": "Provides detailed information on the pysam package for SAM/BAM/CRAM file handling.",
        "detailed_description": "Get comprehensive information about pysam \u2013 interface to SAM/BAM/CRAM files",
        "toolType": "Scientific Software Package",
        "tags": [
            "alignment-file-analysis",
            "bioinformatics",
            "computational-genomics",
            "file-format-parsing",
            "metadata-extraction",
            "pysam-interface",
            "python-library",
            "quick-start-guide",
            "sam-bam-cram-reader",
            "sequencing-data-processing",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pysam",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provides comprehensive information about the pysam package",
            "Optionally includes usage examples and a quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "7b0f07bf-4a4e-4cce-b2f5-ef434e5f0df5",
        "name": "get_pybedtools_info",
        "description": "Retrieve detailed information about pybedtools, a Python wrapper for BEDTools",
        "detailed_description": "Get comprehensive information about pybedtools \u2013 Python wrapper for BEDTools",
        "toolType": "Scientific Software Package",
        "tags": [
            "bed-format-manipulation",
            "bedtools-python-wrapper",
            "bioinformatics-library-guide",
            "genome-bioinformatics",
            "genomic-interval-analysis",
            "ngs-data-processing",
            "package-overview",
            "pybedtools-info",
            "python-package-documentation",
            "quick-start-guide",
            "software-api-reference",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "pybedtools",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the pybedtools package",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a3f47c9e-6b6e-4d97-bb67-9f4e2bc8d123",
        "name": "get_seaborn_info",
        "description": "Get comprehensive information about Seaborn, a statistical data visualization library.",
        "detailed_description": "Get comprehensive information about Seaborn \u2013 statistical data visualization",
        "toolType": "Scientific Software Package",
        "tags": [
            "charting-library",
            "data-science-tool",
            "data-visualization",
            "developer-reference",
            "package-metadata",
            "python-visualization",
            "quickstart-guide",
            "seaborn-api-reference",
            "seaborn-documentation",
            "seaborn-info",
            "statistical-visualization",
            "usage-examples",
            "visualization-tutorial"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "seaborn",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the Seaborn library",
            "Include usage examples and quick start guide when specified"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d2196fbc-f7d2-4e82-8c94-3af7f1b6c0d1",
        "name": "get_clair3_info",
        "description": "Retrieve detailed information about Clair3, a long-read sequencing variant calling tool",
        "detailed_description": "Get comprehensive information about Clair3 \u2013 variant calling for long-read sequencing",
        "toolType": "Scientific Software Package",
        "tags": [
            "command-line-interface",
            "genomic-variants",
            "long-read-sequencing",
            "nanopore-sequencing",
            "pacbio-sequencing",
            "package-metadata",
            "pipeline-configuration",
            "snp-indel-calling",
            "third-generation-sequencing",
            "tool-documentation",
            "variant-calling",
            "variant-detection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "clair3",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide an overview of Clair3",
            "Provide installation instructions",
            "Provide usage guidelines",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Clair3"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Clair3"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name": "get_flask_info",
        "description": "Provides detailed info on Flask, a lightweight WSGI web application framework.",
        "detailed_description": "Get comprehensive information about Flask - a lightweight WSGI web application framework",
        "toolType": "Scientific Software Package",
        "tags": [
            "code-snippets",
            "developer-reference",
            "flask-api-reference",
            "flask-documentation",
            "flask-framework-info",
            "flask-quickstart-guide",
            "flask-usage-examples",
            "lightweight-wsgi-framework",
            "python-flask",
            "python-web-framework",
            "software-documentation",
            "web-application-framework",
            "wsgi-microframework"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Flask",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve information about the Flask web framework",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "5e2b7c2d-9a16-4f17-bcc1-78d1f834a4b7",
        "name": "get_biopython_info",
        "description": "Get comprehensive information about Biopython tools for molecular biology and bioinformatics",
        "detailed_description": "Get comprehensive information about Biopython \u2013 powerful tools for computational molecular biology and bioinformatics",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-library",
            "bioinformatics-toolkit",
            "biopython-documentation",
            "computational-biology",
            "dna-sequence-processing",
            "genomics-analysis",
            "molecular-biology-tools",
            "protein-sequence-analysis",
            "python-bioinformatics",
            "quick-start-guide",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Biopython",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata",
            "Provide usage examples",
            "List installation commands",
            "Show documentation and repository links",
            "Explain package features"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "d3b0a3f4-8c47-4fcb-b3e5-a0c2e4a4f1b6",
        "name": "get_pypdf2_info",
        "description": "Fetch information about the PyPDF2 PDF library.",
        "detailed_description": "Get comprehensive information about PyPDF2 \u2013 PDF manipulation library",
        "toolType": "Scientific Software Package",
        "tags": [
            "developer-reference",
            "info-type-parameter",
            "library-comparison",
            "library-documentation",
            "package-metadata",
            "package-tool",
            "pdf-document-parsing",
            "pdf-manipulation-library",
            "pypdf2-information",
            "python-library-inspection",
            "python-pdf-processing",
            "software-package-overview"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "PyPDF2",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about PyPDF2",
            "Provide installation instructions for PyPDF2",
            "Show usage examples for PyPDF2",
            "Link to PyPDF2 documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about PyPDF2"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about PyPDF2"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3f7e19d8-4d3e-4d9e-b153-8a1b9c6f2e3a",
        "name": "get_sympy_info",
        "description": "Retrieve comprehensive information about the SymPy symbolic mathematics library.",
        "detailed_description": "Get comprehensive information about SymPy \u2013 symbolic mathematics library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "code-exploration",
            "computational-algebra",
            "developer-tool",
            "docs-retrieval",
            "info-fetch",
            "package-inspection",
            "python-package-info",
            "symbolic-calculation",
            "symbolic-math-library",
            "sympy-documentation",
            "sympy-metadata"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "sympy",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview of SymPy package",
            "Retrieve installation instructions for SymPy",
            "Retrieve usage examples for SymPy",
            "Retrieve documentation links for SymPy"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about SymPy"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about SymPy"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "4a1c5f1e-2d07-4f79-9f34-3b76d07d8e2c",
        "name": "get_numba_info",
        "description": "Provides comprehensive information about Numba, a Python JIT compiler.",
        "detailed_description": "Get comprehensive information about Numba \u2013 JIT compiler for Python",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "code-acceleration",
            "gpu-acceleration",
            "just-in-time-compiler",
            "numba-information",
            "numerical-computing",
            "open-source-library",
            "package-metadata",
            "performance-optimization",
            "python-jit",
            "python-package-info",
            "scientific-computing"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Numba",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve overview information about Numba",
            "Provide installation instructions for Numba",
            "Show usage examples for Numba",
            "Link to Numba documentation"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about Numba"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about Numba"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a1b2c3d4-e5f6-7abc-8def-1234567890ab",
        "name": "get_networkx_info",
        "description": "Retrieve information about the NetworkX network analysis library.",
        "detailed_description": "Get comprehensive information about NetworkX \u2013 network analysis library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "complex-networks",
            "data-science-tool",
            "dependency-inspection",
            "graph-algorithms",
            "graph-theory",
            "network-analysis",
            "network-visualization",
            "networkx-documentation",
            "package-metadata",
            "python-library-info",
            "software-introspection"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "NetworkX",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package overview",
            "Provide installation instructions",
            "Provide usage examples",
            "Provide documentation links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "info_type": {
                "type": "string",
                "description": "Type of information to retrieve about NetworkX"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "info_type": {
                    "type": "string",
                    "enum": [
                        "overview",
                        "installation",
                        "usage",
                        "documentation"
                    ],
                    "description": "Type of information to retrieve about NetworkX"
                }
            },
            "required": [
                "info_type"
            ]
        },
        "exampleInput": {
            "info_type": "overview"
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "3a00d2c0-6208-4c6c-9424-3b001b7f4b7f",
        "name": "get_biopython_info",
        "description": "Provides detailed information about the Biopython package for computational molecular biology and bioinformatics.",
        "detailed_description": "Get comprehensive information about Biopython \u2013 powerful tools for computational molecular biology and bioinformatics",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-library",
            "biopython-documentation",
            "computational-biology",
            "dna-rna-processing",
            "genomics-pipeline-modules",
            "molecular-biology-toolkit",
            "python-package-overview",
            "quick-start-guide",
            "sequence-analysis-api",
            "structural-bioinformatics",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Biopython",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Fetch detailed package metadata for Biopython",
            "Provide installation commands for pip and conda",
            "Optionally include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide",
                "default": true
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "b3c1e1d2-5f6a-4e7b-8c9d-0f1a2b3c4d5e",
        "name": "get_scikit_bio_info",
        "description": "Fetch key details about scikit-bio, including metadata, installation, and usage examples",
        "detailed_description": "Get comprehensive information about scikit-bio \u2013 bioinformatics library built on scientific Python stack",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-library-overview",
            "computational-biology-framework",
            "ecological-diversity-tools",
            "library-feature-summary",
            "microbiome-analysis-library",
            "package-api-overview",
            "phylogenetic-methods-library",
            "python-package-info",
            "quick-start-guide",
            "scientific-python-stack",
            "scikit-bio-documentation",
            "scikit-bio-info",
            "sequence-analysis-library",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "scikit-bio",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve package metadata",
            "Provide installation commands",
            "Include usage examples and quick start guide",
            "Show documentation and repository links"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "a2f6a14c-3dd7-4c39-9ba0-1f6c90bb6c4f",
        "name": "get_biotite_info",
        "description": "Retrieve comprehensive details about the Biotite computational molecular biology library",
        "detailed_description": "Get comprehensive information about Biotite \u2013 comprehensive computational molecular biology library",
        "toolType": "Scientific Software Package",
        "tags": [
            "api-reference",
            "bioinformatics-resource",
            "biotite-library",
            "computational-molecular-biology",
            "documentation-retrieval",
            "library-information",
            "package-documentation",
            "python-bioinformatics",
            "quickstart-guide",
            "scientific-computing",
            "sequence-processing",
            "structural-bioinformatics",
            "tool-discovery",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "Biotite",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Provide package metadata (description, keywords, popularity)",
            "Offer installation instructions for pip and conda",
            "Supply documentation and repository links",
            "Include usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    },
    {
        "id": "1f3e56c8-9a0b-4d23-8e5f-7b6a5d4c3b2a",
        "name": "get_gget_info",
        "description": "Get comprehensive information about gget \u2013 a genomics command-line tool and Python package",
        "detailed_description": "Get comprehensive information about gget \u2013 genomics command-line tool and Python package",
        "toolType": "Scientific Software Package",
        "tags": [
            "bioinformatics-tool-info",
            "cli-documentation",
            "genomics-command-line",
            "metadata-retrieval",
            "package-documentation",
            "package-info-fetcher",
            "python-genomics-package",
            "quick-start-guide",
            "tool-overview",
            "usage-examples"
        ],
        "category": "PackageTool",
        "lab": "Zitnik Lab",
        "source": "gget",
        "version": "v1.0.0",
        "reviewed": true,
        "isValidated": true,
        "usageStats": "100+ uses",
        "capabilities": [
            "Retrieve comprehensive information about the gget package",
            "Provide usage examples and quick start guide"
        ],
        "limitations": [
            "May require refinement"
        ],
        "parameters": {
            "include_examples": {
                "type": "boolean",
                "description": "Whether to include usage examples and quick start guide"
            }
        },
        "inputSchema": {
            "type": "object",
            "properties": {
                "include_examples": {
                    "type": "boolean",
                    "description": "Whether to include usage examples and quick start guide",
                    "default": true
                }
            }
        },
        "exampleInput": {
            "include_examples": true
        },
        "apiEndpoints": [
            {
                "method": "MCP",
                "url": "https://tooluniversemcpserver.onrender.com/mcp/"
            }
        ]
    }
]